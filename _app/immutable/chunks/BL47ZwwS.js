import{a9 as uy,ah as ly,x as cy,f as vd,s as dy,d as Po,t as hy,b as jl,r as Fo}from"./Dklkudmk.js";import{l as py}from"./CbR4jyub.js";import{C as fy,V as j,d as An,T as Tn,Q as pa,e as Xl,f as he,R as my,P as lu,g as cu,h as du,i as hu,j as jt,c as Ge,k as Pr,E as Rd,l as Re,m as xn,W as Vn,n as gi,o as nt,p as Xs,I as En,L as Ad,q as K,r as _e,F as Ed,s as Ys,t as Mt,u as wd,v as pu,w as Mi,x as Bi,y as Pi,N as wn,z as fu,H as et,A as Ws,G as As,J as Pn,K as gy,O as yy,U as Yl,X as _y,Y as Ty,Z as xy,_ as by,$ as Ny,a0 as Kl,a1 as Ks,a2 as Sy,a3 as yi,a4 as Fe,a5 as Ke,a6 as wt,M as Ss,a7 as Cd,a8 as vy,a9 as Bt,aa as Ry,ab as xr,ac as ks,B as Md,ad as Ay,ae as ft,af as Bd,ag as Ql,ah as Ct,ai as rs,aj as fa,ak as br,al as Ey,am as Pd,an as wy,ao as Qi,ap as Cy,aq as My,ar as lr,as as bn,at as Fd,D as By,au as Py,av as mu,aw as Ld,ax as Fy,ay as Ly,az as Dy,aA as Uy,aB as Iy,aC as Vy,aD as Oy,aE as Gy,aF as ky,aG as zy,aH as ct,aI as _s,aJ as Ts,aK as xs,aL as cr,aM as es,aN as hs,aO as $y,aP as Wy,aQ as gu,aR as yu,S as Hy,aS as qy,aT as jy,aU as Dd,aV as Zi,aW as _u,aX as Ji,aY as ma,aZ as Nr,a_ as Ud,a$ as Id,b0 as Vd,b1 as Od,b2 as Gd,b3 as kd,b4 as zd,b5 as $d,b6 as Zl,b7 as Xy,b8 as Wd,b9 as Hd,ba as qd,bb as jd,bc as Xd,bd as Yd,be as Kd,bf as Qd,bg as Zd,bh as Jd,bi as eh,bj as th,bk as Yy,bl as Ky,bm as Qy,bn as Fi,bo as Li,bp as Di,bq as sh,br as nh,bs as rh,bt as ih,bu as oh,bv as ah,bw as uh,bx as lh,by as Zy,bz as Jy,bA as ch,bB as dh,bC as dr,bD as hr,bE as Nn,bF as e_,bG as Tu,bH as xu,bI as bu,bJ as Nu,bK as Su,bL as _i,bM as Ti,bN as xi,bO as bi,bP as Jl,bQ as ec,bR as tc,bS as sc,bT as ga,bU as ya,bV as _a,bW as Ta,bX as xa,bY as ba,bZ as Na,b_ as Sa,b$ as va,c0 as Ra,c1 as Aa,c2 as Ea,c3 as wa,c4 as Ca,c5 as Ma,c6 as Ba,c7 as Pa,c8 as Fa,c9 as La,ca as Da,cb as Ua,cc as Ia,cd as t_,ce as s_,cf as n_,cg as r_,ch as i_,ci as o_,cj as a_,ck as u_,cl as l_,cm as c_,cn as d_,co as h_,cp as p_,cq as f_,cr as m_,cs as g_,ct as y_,cu as __,cv as T_,cw as x_,cx as b_,cy as N_,cz as S_,cA as v_,cB as R_,cC as A_,cD as E_,cE as w_,cF as C_,cG as M_,cH as B_,cI as P_,cJ as F_,cK as L_,cL as hh,cM as D_,cN as U_,cO as I_,cP as V_,cQ as O_,cR as G_,cS as k_,cT as z_}from"./RmmjoSf4.js";import"./CWj6FrbW.js";import{s as $_}from"./B_a822e4.js";import{i as W_}from"./_anfbMuE.js";import{h as H_}from"./CjFALAzN.js";import{s as q_}from"./j1b29jXt.js";function TC(i,e,t=e){py(i,"change",s=>{var n=s?i.defaultChecked:i.checked;t(n)}),(cy&&i.defaultChecked!==i.checked||uy(e)==null)&&t(i.checked),ly(()=>{var s=e();i.checked=!!s})}const nc={type:"change"},vu={type:"start"},ph={type:"end"},qr=new my,rc=new lu,j_=Math.cos(70*cu.DEG2RAD),Ue=new j,Ze=2*Math.PI,pe={NONE:-1,ROTATE:0,DOLLY:1,PAN:2,TOUCH_ROTATE:3,TOUCH_PAN:4,TOUCH_DOLLY_PAN:5,TOUCH_DOLLY_ROTATE:6},Lo=1e-6;class X_ extends fy{constructor(e,t=null){super(e,t),this.state=pe.NONE,this.target=new j,this.cursor=new j,this.minDistance=0,this.maxDistance=1/0,this.minZoom=0,this.maxZoom=1/0,this.minTargetRadius=0,this.maxTargetRadius=1/0,this.minPolarAngle=0,this.maxPolarAngle=Math.PI,this.minAzimuthAngle=-1/0,this.maxAzimuthAngle=1/0,this.enableDamping=!1,this.dampingFactor=.05,this.enableZoom=!0,this.zoomSpeed=1,this.enableRotate=!0,this.rotateSpeed=1,this.keyRotateSpeed=1,this.enablePan=!0,this.panSpeed=1,this.screenSpacePanning=!0,this.keyPanSpeed=7,this.zoomToCursor=!1,this.autoRotate=!1,this.autoRotateSpeed=2,this.keys={LEFT:"ArrowLeft",UP:"ArrowUp",RIGHT:"ArrowRight",BOTTOM:"ArrowDown"},this.mouseButtons={LEFT:An.ROTATE,MIDDLE:An.DOLLY,RIGHT:An.PAN},this.touches={ONE:Tn.ROTATE,TWO:Tn.DOLLY_PAN},this.target0=this.target.clone(),this.position0=this.object.position.clone(),this.zoom0=this.object.zoom,this._domElementKeyEvents=null,this._lastPosition=new j,this._lastQuaternion=new pa,this._lastTargetPosition=new j,this._quat=new pa().setFromUnitVectors(e.up,new j(0,1,0)),this._quatInverse=this._quat.clone().invert(),this._spherical=new Xl,this._sphericalDelta=new Xl,this._scale=1,this._panOffset=new j,this._rotateStart=new he,this._rotateEnd=new he,this._rotateDelta=new he,this._panStart=new he,this._panEnd=new he,this._panDelta=new he,this._dollyStart=new he,this._dollyEnd=new he,this._dollyDelta=new he,this._dollyDirection=new j,this._mouse=new he,this._performCursorZoom=!1,this._pointers=[],this._pointerPositions={},this._controlActive=!1,this._onPointerMove=K_.bind(this),this._onPointerDown=Y_.bind(this),this._onPointerUp=Q_.bind(this),this._onContextMenu=rT.bind(this),this._onMouseWheel=eT.bind(this),this._onKeyDown=tT.bind(this),this._onTouchStart=sT.bind(this),this._onTouchMove=nT.bind(this),this._onMouseDown=Z_.bind(this),this._onMouseMove=J_.bind(this),this._interceptControlDown=iT.bind(this),this._interceptControlUp=oT.bind(this),this.domElement!==null&&this.connect(this.domElement),this.update()}connect(e){super.connect(e),this.domElement.addEventListener("pointerdown",this._onPointerDown),this.domElement.addEventListener("pointercancel",this._onPointerUp),this.domElement.addEventListener("contextmenu",this._onContextMenu),this.domElement.addEventListener("wheel",this._onMouseWheel,{passive:!1}),this.domElement.getRootNode().addEventListener("keydown",this._interceptControlDown,{passive:!0,capture:!0}),this.domElement.style.touchAction="none"}disconnect(){this.domElement.removeEventListener("pointerdown",this._onPointerDown),this.domElement.removeEventListener("pointermove",this._onPointerMove),this.domElement.removeEventListener("pointerup",this._onPointerUp),this.domElement.removeEventListener("pointercancel",this._onPointerUp),this.domElement.removeEventListener("wheel",this._onMouseWheel),this.domElement.removeEventListener("contextmenu",this._onContextMenu),this.stopListenToKeyEvents(),this.domElement.getRootNode().removeEventListener("keydown",this._interceptControlDown,{capture:!0}),this.domElement.style.touchAction="auto"}dispose(){this.disconnect()}getPolarAngle(){return this._spherical.phi}getAzimuthalAngle(){return this._spherical.theta}getDistance(){return this.object.position.distanceTo(this.target)}listenToKeyEvents(e){e.addEventListener("keydown",this._onKeyDown),this._domElementKeyEvents=e}stopListenToKeyEvents(){this._domElementKeyEvents!==null&&(this._domElementKeyEvents.removeEventListener("keydown",this._onKeyDown),this._domElementKeyEvents=null)}saveState(){this.target0.copy(this.target),this.position0.copy(this.object.position),this.zoom0=this.object.zoom}reset(){this.target.copy(this.target0),this.object.position.copy(this.position0),this.object.zoom=this.zoom0,this.object.updateProjectionMatrix(),this.dispatchEvent(nc),this.update(),this.state=pe.NONE}update(e=null){const t=this.object.position;Ue.copy(t).sub(this.target),Ue.applyQuaternion(this._quat),this._spherical.setFromVector3(Ue),this.autoRotate&&this.state===pe.NONE&&this._rotateLeft(this._getAutoRotationAngle(e)),this.enableDamping?(this._spherical.theta+=this._sphericalDelta.theta*this.dampingFactor,this._spherical.phi+=this._sphericalDelta.phi*this.dampingFactor):(this._spherical.theta+=this._sphericalDelta.theta,this._spherical.phi+=this._sphericalDelta.phi);let s=this.minAzimuthAngle,n=this.maxAzimuthAngle;isFinite(s)&&isFinite(n)&&(s<-Math.PI?s+=Ze:s>Math.PI&&(s-=Ze),n<-Math.PI?n+=Ze:n>Math.PI&&(n-=Ze),s<=n?this._spherical.theta=Math.max(s,Math.min(n,this._spherical.theta)):this._spherical.theta=this._spherical.theta>(s+n)/2?Math.max(s,this._spherical.theta):Math.min(n,this._spherical.theta)),this._spherical.phi=Math.max(this.minPolarAngle,Math.min(this.maxPolarAngle,this._spherical.phi)),this._spherical.makeSafe(),this.enableDamping===!0?this.target.addScaledVector(this._panOffset,this.dampingFactor):this.target.add(this._panOffset),this.target.sub(this.cursor),this.target.clampLength(this.minTargetRadius,this.maxTargetRadius),this.target.add(this.cursor);let r=!1;if(this.zoomToCursor&&this._performCursorZoom||this.object.isOrthographicCamera)this._spherical.radius=this._clampDistance(this._spherical.radius);else{const o=this._spherical.radius;this._spherical.radius=this._clampDistance(this._spherical.radius*this._scale),r=o!=this._spherical.radius}if(Ue.setFromSpherical(this._spherical),Ue.applyQuaternion(this._quatInverse),t.copy(this.target).add(Ue),this.object.lookAt(this.target),this.enableDamping===!0?(this._sphericalDelta.theta*=1-this.dampingFactor,this._sphericalDelta.phi*=1-this.dampingFactor,this._panOffset.multiplyScalar(1-this.dampingFactor)):(this._sphericalDelta.set(0,0,0),this._panOffset.set(0,0,0)),this.zoomToCursor&&this._performCursorZoom){let o=null;if(this.object.isPerspectiveCamera){const a=Ue.length();o=this._clampDistance(a*this._scale);const u=a-o;this.object.position.addScaledVector(this._dollyDirection,u),this.object.updateMatrixWorld(),r=!!u}else if(this.object.isOrthographicCamera){const a=new j(this._mouse.x,this._mouse.y,0);a.unproject(this.object);const u=this.object.zoom;this.object.zoom=Math.max(this.minZoom,Math.min(this.maxZoom,this.object.zoom/this._scale)),this.object.updateProjectionMatrix(),r=u!==this.object.zoom;const l=new j(this._mouse.x,this._mouse.y,0);l.unproject(this.object),this.object.position.sub(l).add(a),this.object.updateMatrixWorld(),o=Ue.length()}else console.warn("WARNING: OrbitControls.js encountered an unknown camera type - zoom to cursor disabled."),this.zoomToCursor=!1;o!==null&&(this.screenSpacePanning?this.target.set(0,0,-1).transformDirection(this.object.matrix).multiplyScalar(o).add(this.object.position):(qr.origin.copy(this.object.position),qr.direction.set(0,0,-1).transformDirection(this.object.matrix),Math.abs(this.object.up.dot(qr.direction))<j_?this.object.lookAt(this.target):(rc.setFromNormalAndCoplanarPoint(this.object.up,this.target),qr.intersectPlane(rc,this.target))))}else if(this.object.isOrthographicCamera){const o=this.object.zoom;this.object.zoom=Math.max(this.minZoom,Math.min(this.maxZoom,this.object.zoom/this._scale)),o!==this.object.zoom&&(this.object.updateProjectionMatrix(),r=!0)}return this._scale=1,this._performCursorZoom=!1,r||this._lastPosition.distanceToSquared(this.object.position)>Lo||8*(1-this._lastQuaternion.dot(this.object.quaternion))>Lo||this._lastTargetPosition.distanceToSquared(this.target)>Lo?(this.dispatchEvent(nc),this._lastPosition.copy(this.object.position),this._lastQuaternion.copy(this.object.quaternion),this._lastTargetPosition.copy(this.target),!0):!1}_getAutoRotationAngle(e){return e!==null?Ze/60*this.autoRotateSpeed*e:Ze/60/60*this.autoRotateSpeed}_getZoomScale(e){const t=Math.abs(e*.01);return Math.pow(.95,this.zoomSpeed*t)}_rotateLeft(e){this._sphericalDelta.theta-=e}_rotateUp(e){this._sphericalDelta.phi-=e}_panLeft(e,t){Ue.setFromMatrixColumn(t,0),Ue.multiplyScalar(-e),this._panOffset.add(Ue)}_panUp(e,t){this.screenSpacePanning===!0?Ue.setFromMatrixColumn(t,1):(Ue.setFromMatrixColumn(t,0),Ue.crossVectors(this.object.up,Ue)),Ue.multiplyScalar(e),this._panOffset.add(Ue)}_pan(e,t){const s=this.domElement;if(this.object.isPerspectiveCamera){const n=this.object.position;Ue.copy(n).sub(this.target);let r=Ue.length();r*=Math.tan(this.object.fov/2*Math.PI/180),this._panLeft(2*e*r/s.clientHeight,this.object.matrix),this._panUp(2*t*r/s.clientHeight,this.object.matrix)}else this.object.isOrthographicCamera?(this._panLeft(e*(this.object.right-this.object.left)/this.object.zoom/s.clientWidth,this.object.matrix),this._panUp(t*(this.object.top-this.object.bottom)/this.object.zoom/s.clientHeight,this.object.matrix)):(console.warn("WARNING: OrbitControls.js encountered an unknown camera type - pan disabled."),this.enablePan=!1)}_dollyOut(e){this.object.isPerspectiveCamera||this.object.isOrthographicCamera?this._scale/=e:(console.warn("WARNING: OrbitControls.js encountered an unknown camera type - dolly/zoom disabled."),this.enableZoom=!1)}_dollyIn(e){this.object.isPerspectiveCamera||this.object.isOrthographicCamera?this._scale*=e:(console.warn("WARNING: OrbitControls.js encountered an unknown camera type - dolly/zoom disabled."),this.enableZoom=!1)}_updateZoomParameters(e,t){if(!this.zoomToCursor)return;this._performCursorZoom=!0;const s=this.domElement.getBoundingClientRect(),n=e-s.left,r=t-s.top,o=s.width,a=s.height;this._mouse.x=n/o*2-1,this._mouse.y=-(r/a)*2+1,this._dollyDirection.set(this._mouse.x,this._mouse.y,1).unproject(this.object).sub(this.object.position).normalize()}_clampDistance(e){return Math.max(this.minDistance,Math.min(this.maxDistance,e))}_handleMouseDownRotate(e){this._rotateStart.set(e.clientX,e.clientY)}_handleMouseDownDolly(e){this._updateZoomParameters(e.clientX,e.clientX),this._dollyStart.set(e.clientX,e.clientY)}_handleMouseDownPan(e){this._panStart.set(e.clientX,e.clientY)}_handleMouseMoveRotate(e){this._rotateEnd.set(e.clientX,e.clientY),this._rotateDelta.subVectors(this._rotateEnd,this._rotateStart).multiplyScalar(this.rotateSpeed);const t=this.domElement;this._rotateLeft(Ze*this._rotateDelta.x/t.clientHeight),this._rotateUp(Ze*this._rotateDelta.y/t.clientHeight),this._rotateStart.copy(this._rotateEnd),this.update()}_handleMouseMoveDolly(e){this._dollyEnd.set(e.clientX,e.clientY),this._dollyDelta.subVectors(this._dollyEnd,this._dollyStart),this._dollyDelta.y>0?this._dollyOut(this._getZoomScale(this._dollyDelta.y)):this._dollyDelta.y<0&&this._dollyIn(this._getZoomScale(this._dollyDelta.y)),this._dollyStart.copy(this._dollyEnd),this.update()}_handleMouseMovePan(e){this._panEnd.set(e.clientX,e.clientY),this._panDelta.subVectors(this._panEnd,this._panStart).multiplyScalar(this.panSpeed),this._pan(this._panDelta.x,this._panDelta.y),this._panStart.copy(this._panEnd),this.update()}_handleMouseWheel(e){this._updateZoomParameters(e.clientX,e.clientY),e.deltaY<0?this._dollyIn(this._getZoomScale(e.deltaY)):e.deltaY>0&&this._dollyOut(this._getZoomScale(e.deltaY)),this.update()}_handleKeyDown(e){let t=!1;switch(e.code){case this.keys.UP:e.ctrlKey||e.metaKey||e.shiftKey?this.enableRotate&&this._rotateUp(Ze*this.keyRotateSpeed/this.domElement.clientHeight):this.enablePan&&this._pan(0,this.keyPanSpeed),t=!0;break;case this.keys.BOTTOM:e.ctrlKey||e.metaKey||e.shiftKey?this.enableRotate&&this._rotateUp(-Ze*this.keyRotateSpeed/this.domElement.clientHeight):this.enablePan&&this._pan(0,-this.keyPanSpeed),t=!0;break;case this.keys.LEFT:e.ctrlKey||e.metaKey||e.shiftKey?this.enableRotate&&this._rotateLeft(Ze*this.keyRotateSpeed/this.domElement.clientHeight):this.enablePan&&this._pan(this.keyPanSpeed,0),t=!0;break;case this.keys.RIGHT:e.ctrlKey||e.metaKey||e.shiftKey?this.enableRotate&&this._rotateLeft(-Ze*this.keyRotateSpeed/this.domElement.clientHeight):this.enablePan&&this._pan(-this.keyPanSpeed,0),t=!0;break}t&&(e.preventDefault(),this.update())}_handleTouchStartRotate(e){if(this._pointers.length===1)this._rotateStart.set(e.pageX,e.pageY);else{const t=this._getSecondPointerPosition(e),s=.5*(e.pageX+t.x),n=.5*(e.pageY+t.y);this._rotateStart.set(s,n)}}_handleTouchStartPan(e){if(this._pointers.length===1)this._panStart.set(e.pageX,e.pageY);else{const t=this._getSecondPointerPosition(e),s=.5*(e.pageX+t.x),n=.5*(e.pageY+t.y);this._panStart.set(s,n)}}_handleTouchStartDolly(e){const t=this._getSecondPointerPosition(e),s=e.pageX-t.x,n=e.pageY-t.y,r=Math.sqrt(s*s+n*n);this._dollyStart.set(0,r)}_handleTouchStartDollyPan(e){this.enableZoom&&this._handleTouchStartDolly(e),this.enablePan&&this._handleTouchStartPan(e)}_handleTouchStartDollyRotate(e){this.enableZoom&&this._handleTouchStartDolly(e),this.enableRotate&&this._handleTouchStartRotate(e)}_handleTouchMoveRotate(e){if(this._pointers.length==1)this._rotateEnd.set(e.pageX,e.pageY);else{const s=this._getSecondPointerPosition(e),n=.5*(e.pageX+s.x),r=.5*(e.pageY+s.y);this._rotateEnd.set(n,r)}this._rotateDelta.subVectors(this._rotateEnd,this._rotateStart).multiplyScalar(this.rotateSpeed);const t=this.domElement;this._rotateLeft(Ze*this._rotateDelta.x/t.clientHeight),this._rotateUp(Ze*this._rotateDelta.y/t.clientHeight),this._rotateStart.copy(this._rotateEnd)}_handleTouchMovePan(e){if(this._pointers.length===1)this._panEnd.set(e.pageX,e.pageY);else{const t=this._getSecondPointerPosition(e),s=.5*(e.pageX+t.x),n=.5*(e.pageY+t.y);this._panEnd.set(s,n)}this._panDelta.subVectors(this._panEnd,this._panStart).multiplyScalar(this.panSpeed),this._pan(this._panDelta.x,this._panDelta.y),this._panStart.copy(this._panEnd)}_handleTouchMoveDolly(e){const t=this._getSecondPointerPosition(e),s=e.pageX-t.x,n=e.pageY-t.y,r=Math.sqrt(s*s+n*n);this._dollyEnd.set(0,r),this._dollyDelta.set(0,Math.pow(this._dollyEnd.y/this._dollyStart.y,this.zoomSpeed)),this._dollyOut(this._dollyDelta.y),this._dollyStart.copy(this._dollyEnd);const o=(e.pageX+t.x)*.5,a=(e.pageY+t.y)*.5;this._updateZoomParameters(o,a)}_handleTouchMoveDollyPan(e){this.enableZoom&&this._handleTouchMoveDolly(e),this.enablePan&&this._handleTouchMovePan(e)}_handleTouchMoveDollyRotate(e){this.enableZoom&&this._handleTouchMoveDolly(e),this.enableRotate&&this._handleTouchMoveRotate(e)}_addPointer(e){this._pointers.push(e.pointerId)}_removePointer(e){delete this._pointerPositions[e.pointerId];for(let t=0;t<this._pointers.length;t++)if(this._pointers[t]==e.pointerId){this._pointers.splice(t,1);return}}_isTrackingPointer(e){for(let t=0;t<this._pointers.length;t++)if(this._pointers[t]==e.pointerId)return!0;return!1}_trackPointer(e){let t=this._pointerPositions[e.pointerId];t===void 0&&(t=new he,this._pointerPositions[e.pointerId]=t),t.set(e.pageX,e.pageY)}_getSecondPointerPosition(e){const t=e.pointerId===this._pointers[0]?this._pointers[1]:this._pointers[0];return this._pointerPositions[t]}_customWheelEvent(e){const t=e.deltaMode,s={clientX:e.clientX,clientY:e.clientY,deltaY:e.deltaY};switch(t){case 1:s.deltaY*=16;break;case 2:s.deltaY*=100;break}return e.ctrlKey&&!this._controlActive&&(s.deltaY*=10),s}}function Y_(i){this.enabled!==!1&&(this._pointers.length===0&&(this.domElement.setPointerCapture(i.pointerId),this.domElement.addEventListener("pointermove",this._onPointerMove),this.domElement.addEventListener("pointerup",this._onPointerUp)),!this._isTrackingPointer(i)&&(this._addPointer(i),i.pointerType==="touch"?this._onTouchStart(i):this._onMouseDown(i)))}function K_(i){this.enabled!==!1&&(i.pointerType==="touch"?this._onTouchMove(i):this._onMouseMove(i))}function Q_(i){switch(this._removePointer(i),this._pointers.length){case 0:this.domElement.releasePointerCapture(i.pointerId),this.domElement.removeEventListener("pointermove",this._onPointerMove),this.domElement.removeEventListener("pointerup",this._onPointerUp),this.dispatchEvent(ph),this.state=pe.NONE;break;case 1:const e=this._pointers[0],t=this._pointerPositions[e];this._onTouchStart({pointerId:e,pageX:t.x,pageY:t.y});break}}function Z_(i){let e;switch(i.button){case 0:e=this.mouseButtons.LEFT;break;case 1:e=this.mouseButtons.MIDDLE;break;case 2:e=this.mouseButtons.RIGHT;break;default:e=-1}switch(e){case An.DOLLY:if(this.enableZoom===!1)return;this._handleMouseDownDolly(i),this.state=pe.DOLLY;break;case An.ROTATE:if(i.ctrlKey||i.metaKey||i.shiftKey){if(this.enablePan===!1)return;this._handleMouseDownPan(i),this.state=pe.PAN}else{if(this.enableRotate===!1)return;this._handleMouseDownRotate(i),this.state=pe.ROTATE}break;case An.PAN:if(i.ctrlKey||i.metaKey||i.shiftKey){if(this.enableRotate===!1)return;this._handleMouseDownRotate(i),this.state=pe.ROTATE}else{if(this.enablePan===!1)return;this._handleMouseDownPan(i),this.state=pe.PAN}break;default:this.state=pe.NONE}this.state!==pe.NONE&&this.dispatchEvent(vu)}function J_(i){switch(this.state){case pe.ROTATE:if(this.enableRotate===!1)return;this._handleMouseMoveRotate(i);break;case pe.DOLLY:if(this.enableZoom===!1)return;this._handleMouseMoveDolly(i);break;case pe.PAN:if(this.enablePan===!1)return;this._handleMouseMovePan(i);break}}function eT(i){this.enabled===!1||this.enableZoom===!1||this.state!==pe.NONE||(i.preventDefault(),this.dispatchEvent(vu),this._handleMouseWheel(this._customWheelEvent(i)),this.dispatchEvent(ph))}function tT(i){this.enabled!==!1&&this._handleKeyDown(i)}function sT(i){switch(this._trackPointer(i),this._pointers.length){case 1:switch(this.touches.ONE){case Tn.ROTATE:if(this.enableRotate===!1)return;this._handleTouchStartRotate(i),this.state=pe.TOUCH_ROTATE;break;case Tn.PAN:if(this.enablePan===!1)return;this._handleTouchStartPan(i),this.state=pe.TOUCH_PAN;break;default:this.state=pe.NONE}break;case 2:switch(this.touches.TWO){case Tn.DOLLY_PAN:if(this.enableZoom===!1&&this.enablePan===!1)return;this._handleTouchStartDollyPan(i),this.state=pe.TOUCH_DOLLY_PAN;break;case Tn.DOLLY_ROTATE:if(this.enableZoom===!1&&this.enableRotate===!1)return;this._handleTouchStartDollyRotate(i),this.state=pe.TOUCH_DOLLY_ROTATE;break;default:this.state=pe.NONE}break;default:this.state=pe.NONE}this.state!==pe.NONE&&this.dispatchEvent(vu)}function nT(i){switch(this._trackPointer(i),this.state){case pe.TOUCH_ROTATE:if(this.enableRotate===!1)return;this._handleTouchMoveRotate(i),this.update();break;case pe.TOUCH_PAN:if(this.enablePan===!1)return;this._handleTouchMovePan(i),this.update();break;case pe.TOUCH_DOLLY_PAN:if(this.enableZoom===!1&&this.enablePan===!1)return;this._handleTouchMoveDollyPan(i),this.update();break;case pe.TOUCH_DOLLY_ROTATE:if(this.enableZoom===!1&&this.enableRotate===!1)return;this._handleTouchMoveDollyRotate(i),this.update();break;default:this.state=pe.NONE}}function rT(i){this.enabled!==!1&&i.preventDefault()}function iT(i){i.key==="Control"&&(this._controlActive=!0,this.domElement.getRootNode().addEventListener("keyup",this._interceptControlUp,{passive:!0,capture:!0}))}function oT(i){i.key==="Control"&&(this._controlActive=!1,this.domElement.getRootNode().removeEventListener("keyup",this._interceptControlUp,{passive:!0,capture:!0}))}/**
 * @license
 * Copyright 2010-2025 Three.js Authors
 * SPDX-License-Identifier: MIT
 */const aT=["alphaMap","alphaTest","anisotropy","anisotropyMap","anisotropyRotation","aoMap","aoMapIntensity","attenuationColor","attenuationDistance","bumpMap","clearcoat","clearcoatMap","clearcoatNormalMap","clearcoatNormalScale","clearcoatRoughness","color","dispersion","displacementMap","emissive","emissiveIntensity","emissiveMap","envMap","envMapIntensity","gradientMap","ior","iridescence","iridescenceIOR","iridescenceMap","iridescenceThicknessMap","lightMap","lightMapIntensity","map","matcap","metalness","metalnessMap","normalMap","normalScale","opacity","roughness","roughnessMap","sheen","sheenColor","sheenColorMap","sheenRoughnessMap","shininess","specular","specularColor","specularColorMap","specularIntensity","specularIntensityMap","specularMap","thickness","transmission","transmissionMap"],Do=new WeakMap;class uT{constructor(e){this.renderObjects=new WeakMap,this.hasNode=this.containsNode(e),this.hasAnimation=e.object.isSkinnedMesh===!0,this.refreshUniforms=aT,this.renderId=0}firstInitialization(e){return this.renderObjects.has(e)===!1?(this.getRenderObjectData(e),!0):!1}needsVelocity(e){const t=e.getMRT();return t!==null&&t.has("velocity")}getRenderObjectData(e){let t=this.renderObjects.get(e);if(t===void 0){const{geometry:s,material:n,object:r}=e;if(t={material:this.getMaterialData(n),geometry:{id:s.id,attributes:this.getAttributesData(s.attributes),indexVersion:s.index?s.index.version:null,drawRange:{start:s.drawRange.start,count:s.drawRange.count}},worldMatrix:r.matrixWorld.clone()},r.center&&(t.center=r.center.clone()),r.morphTargetInfluences&&(t.morphTargetInfluences=r.morphTargetInfluences.slice()),e.bundle!==null&&(t.version=e.bundle.version),t.material.transmission>0){const{width:o,height:a}=e.context;t.bufferWidth=o,t.bufferHeight=a}t.lights=this.getLightsData(e.lightsNode.getLights()),this.renderObjects.set(e,t)}return t}getAttributesData(e){const t={};for(const s in e){const n=e[s];t[s]={version:n.version}}return t}containsNode(e){const t=e.material;for(const s in t)if(t[s]&&t[s].isNode)return!0;return e.renderer.overrideNodes.modelViewMatrix!==null||e.renderer.overrideNodes.modelNormalViewMatrix!==null}getMaterialData(e){const t={};for(const s of this.refreshUniforms){const n=e[s];n!=null&&(typeof n=="object"&&n.clone!==void 0?n.isTexture===!0?t[s]={id:n.id,version:n.version}:t[s]=n.clone():t[s]=n)}return t}equals(e,t){const{object:s,material:n,geometry:r}=e,o=this.getRenderObjectData(e);if(o.worldMatrix.equals(s.matrixWorld)!==!0)return o.worldMatrix.copy(s.matrixWorld),!1;const a=o.material;for(const x in a){const S=a[x],R=n[x];if(S.equals!==void 0){if(S.equals(R)===!1)return S.copy(R),!1}else if(R.isTexture===!0){if(S.id!==R.id||S.version!==R.version)return S.id=R.id,S.version=R.version,!1}else if(S!==R)return a[x]=R,!1}if(a.transmission>0){const{width:x,height:S}=e.context;if(o.bufferWidth!==x||o.bufferHeight!==S)return o.bufferWidth=x,o.bufferHeight=S,!1}const u=o.geometry,l=r.attributes,c=u.attributes,d=Object.keys(c),p=Object.keys(l);if(u.id!==r.id)return u.id=r.id,!1;if(d.length!==p.length)return o.geometry.attributes=this.getAttributesData(l),!1;for(const x of d){const S=c[x],R=l[x];if(R===void 0)return delete c[x],!1;if(S.version!==R.version)return S.version=R.version,!1}const f=r.index,m=u.indexVersion,y=f?f.version:null;if(m!==y)return u.indexVersion=y,!1;if(u.drawRange.start!==r.drawRange.start||u.drawRange.count!==r.drawRange.count)return u.drawRange.start=r.drawRange.start,u.drawRange.count=r.drawRange.count,!1;if(o.morphTargetInfluences){let x=!1;for(let S=0;S<o.morphTargetInfluences.length;S++)o.morphTargetInfluences[S]!==s.morphTargetInfluences[S]&&(x=!0);if(x)return!0}if(o.lights){for(let x=0;x<t.length;x++)if(o.lights[x].map!==t[x].map)return!1}return o.center&&o.center.equals(s.center)===!1?(o.center.copy(s.center),!0):(e.bundle!==null&&(o.version=e.bundle.version),!0)}getLightsData(e){const t=[];for(const s of e)s.isSpotLight===!0&&s.map!==null&&t.push({map:s.map.version});return t}getLights(e,t){if(Do.has(e)){const n=Do.get(e);if(n.renderId===t)return n.lightsData}const s=this.getLightsData(e.getLights());return Do.set(e,{renderId:t,lightsData:s}),s}needsRefresh(e,t){if(this.hasNode||this.hasAnimation||this.firstInitialization(e)||this.needsVelocity(t.renderer))return!0;const{renderId:s}=t;if(this.renderId!==s)return this.renderId=s,!0;const n=e.object.static===!0,r=e.bundle!==null&&e.bundle.static===!0&&this.getRenderObjectData(e).version===e.bundle.version;if(n||r)return!1;const o=this.getLights(e.lightsNode,s);return this.equals(e,o)!==!0}}function Sr(i,e=0){let t=3735928559^e,s=1103547991^e;if(i instanceof Array)for(let n=0,r;n<i.length;n++)r=i[n],t=Math.imul(t^r,2654435761),s=Math.imul(s^r,1597334677);else for(let n=0,r;n<i.length;n++)r=i.charCodeAt(n),t=Math.imul(t^r,2654435761),s=Math.imul(s^r,1597334677);return t=Math.imul(t^t>>>16,2246822507),t^=Math.imul(s^s>>>13,3266489909),s=Math.imul(s^s>>>16,2246822507),s^=Math.imul(t^t>>>13,3266489909),4294967296*(2097151&s)+(t>>>0)}const fh=i=>Sr(i),eo=i=>Sr(i),Ui=(...i)=>Sr(i);function mh(i,e=!1){const t=[];i.isNode===!0&&t.push(i.id);for(const{property:s,childNode:n}of Ii(i))t.push(Sr(s.slice(0,-4)),n.getCacheKey(e));return Sr(t)}function*Ii(i,e=!1){for(const t of Object.getOwnPropertyNames(i)){if(t.startsWith("_")===!0)continue;const s=i[t];if(Array.isArray(s)===!0)for(let n=0;n<s.length;n++){const r=s[n];r&&(r.isNode===!0||e&&typeof r.toJSON=="function")&&(yield{property:t,index:n,childNode:r})}else if(s&&s.isNode===!0)yield{property:t,childNode:s};else if(s&&Object.getPrototypeOf(s)===Object.prototype)for(const n in s){if(n.startsWith("_")===!0)continue;const r=s[n];r&&(r.isNode===!0||e&&typeof r.toJSON=="function")&&(yield{property:t,index:n,childNode:r})}}}const lT=new Map([[1,"float"],[2,"vec2"],[3,"vec3"],[4,"vec4"],[9,"mat3"],[16,"mat4"]]),ic=new WeakMap;function gh(i){return lT.get(i)}function Vi(i){if(/[iu]?vec\d/.test(i))return i.startsWith("ivec")?Int32Array:i.startsWith("uvec")?Uint32Array:Float32Array;if(/mat\d/.test(i)||/float/.test(i))return Float32Array;if(/uint/.test(i))return Uint32Array;if(/int/.test(i))return Int32Array;throw new Error(`THREE.NodeUtils: Unsupported type: ${i}`)}function yh(i){if(/float|int|uint/.test(i))return 1;if(/vec2/.test(i))return 2;if(/vec3/.test(i))return 3;if(/vec4/.test(i)||/mat2/.test(i))return 4;if(/mat3/.test(i))return 9;if(/mat4/.test(i))return 16;console.error("THREE.TSL: Unsupported type:",i)}function cT(i){if(/float|int|uint/.test(i))return 1;if(/vec2/.test(i))return 2;if(/vec3/.test(i))return 3;if(/vec4/.test(i)||/mat2/.test(i))return 4;if(/mat3/.test(i))return 12;if(/mat4/.test(i))return 16;console.error("THREE.TSL: Unsupported type:",i)}function dT(i){if(/float|int|uint/.test(i))return 4;if(/vec2/.test(i))return 8;if(/vec3/.test(i)||/vec4/.test(i))return 16;if(/mat2/.test(i))return 8;if(/mat3/.test(i))return 48;if(/mat4/.test(i))return 64;console.error("THREE.TSL: Unsupported type:",i)}function ys(i){if(i==null)return null;const e=typeof i;return i.isNode===!0?"node":e==="number"?"float":e==="boolean"?"bool":e==="string"?"string":e==="function"?"shader":i.isVector2===!0?"vec2":i.isVector3===!0?"vec3":i.isVector4===!0?"vec4":i.isMatrix2===!0?"mat2":i.isMatrix3===!0?"mat3":i.isMatrix4===!0?"mat4":i.isColor===!0?"color":i instanceof ArrayBuffer?"ArrayBuffer":null}function Ru(i,...e){const t=i?i.slice(-4):void 0;return e.length===1&&(t==="vec2"?e=[e[0],e[0]]:t==="vec3"?e=[e[0],e[0],e[0]]:t==="vec4"&&(e=[e[0],e[0],e[0],e[0]])),i==="color"?new jt(...e):t==="vec2"?new he(...e):t==="vec3"?new j(...e):t==="vec4"?new _e(...e):t==="mat2"?new wd(...e):t==="mat3"?new Pr(...e):t==="mat4"?new Ge(...e):i==="bool"?e[0]||!1:i==="float"||i==="int"||i==="uint"?e[0]||0:i==="string"?e[0]||"":i==="ArrayBuffer"?xh(e[0]):null}function _h(i){let e=ic.get(i);return e===void 0&&(e={},ic.set(i,e)),e}function Th(i){let e="";const t=new Uint8Array(i);for(let s=0;s<t.length;s++)e+=String.fromCharCode(t[s]);return btoa(e)}function xh(i){return Uint8Array.from(atob(i),e=>e.charCodeAt(0)).buffer}const or={VERTEX:"vertex",FRAGMENT:"fragment"},Y={NONE:"none",FRAME:"frame",RENDER:"render",OBJECT:"object"},hT={BOOLEAN:"bool",INTEGER:"int",FLOAT:"float",VECTOR2:"vec2",VECTOR3:"vec3",VECTOR4:"vec4",MATRIX2:"mat2",MATRIX3:"mat3",MATRIX4:"mat4"},$e={READ_ONLY:"readOnly",WRITE_ONLY:"writeOnly",READ_WRITE:"readWrite"},bh=["fragment","vertex"],Va=["setup","analyze","generate"],Oa=[...bh,"compute"],nn=["x","y","z","w"],pT={analyze:"setup",generate:"analyze"};let fT=0;class k extends pu{static get type(){return"Node"}constructor(e=null){super(),this.nodeType=e,this.updateType=Y.NONE,this.updateBeforeType=Y.NONE,this.updateAfterType=Y.NONE,this.uuid=cu.generateUUID(),this.version=0,this.global=!1,this.parents=!1,this.isNode=!0,this._cacheKey=null,this._cacheKeyVersion=0,Object.defineProperty(this,"id",{value:fT++})}set needsUpdate(e){e===!0&&this.version++}get type(){return this.constructor.type}onUpdate(e,t){return this.updateType=t,this.update=e.bind(this),this}onFrameUpdate(e){return this.onUpdate(e,Y.FRAME)}onRenderUpdate(e){return this.onUpdate(e,Y.RENDER)}onObjectUpdate(e){return this.onUpdate(e,Y.OBJECT)}onReference(e){return this.updateReference=e.bind(this),this}updateReference(){return this}isGlobal(){return this.global}*getChildren(){for(const{childNode:e}of Ii(this))yield e}dispose(){this.dispatchEvent({type:"dispose"})}traverse(e){e(this);for(const t of this.getChildren())t.traverse(e)}getCacheKey(e=!1){return e=e||this.version!==this._cacheKeyVersion,(e===!0||this._cacheKey===null)&&(this._cacheKey=Ui(mh(this,e),this.customCacheKey()),this._cacheKeyVersion=this.version),this._cacheKey}customCacheKey(){return 0}getScope(){return this}getHash(){return this.uuid}getUpdateType(){return this.updateType}getUpdateBeforeType(){return this.updateBeforeType}getUpdateAfterType(){return this.updateAfterType}getElementType(e){const t=this.getNodeType(e);return e.getElementType(t)}getMemberType(){return"void"}getNodeType(e){const t=e.getNodeProperties(this);return t.outputNode?t.outputNode.getNodeType(e):this.nodeType}getShared(e){const t=this.getHash(e);return e.getNodeFromHash(t)||this}getArrayCount(){return null}setup(e){const t=e.getNodeProperties(this);let s=0;for(const n of this.getChildren())t["node"+s++]=n;return t.outputNode||null}analyze(e,t=null){const s=e.increaseUsage(this);if(this.parents===!0){const n=e.getDataFromNode(this,"any");n.stages=n.stages||{},n.stages[e.shaderStage]=n.stages[e.shaderStage]||[],n.stages[e.shaderStage].push(t)}if(s===1){const n=e.getNodeProperties(this);for(const r of Object.values(n))r&&r.isNode===!0&&r.build(e,this)}}generate(e,t){const{outputNode:s}=e.getNodeProperties(this);if(s&&s.isNode===!0)return s.build(e,t)}updateBefore(){console.warn("Abstract function.")}updateAfter(){console.warn("Abstract function.")}update(){console.warn("Abstract function.")}build(e,t=null){const s=this.getShared(e);if(this!==s)return s.build(e,t);const n=e.getDataFromNode(this);n.buildStages=n.buildStages||{},n.buildStages[e.buildStage]=!0;const r=pT[e.buildStage];if(r&&n.buildStages[r]!==!0){const u=e.getBuildStage();e.setBuildStage(r),this.build(e),e.setBuildStage(u)}e.addNode(this),e.addChain(this);let o=null;const a=e.getBuildStage();if(a==="setup"){this.updateReference(e);const u=e.getNodeProperties(this);if(u.initialized!==!0){u.initialized=!0,u.outputNode=this.setup(e)||u.outputNode||null;for(const l of Object.values(u))if(l&&l.isNode===!0){if(l.parents===!0){const c=e.getNodeProperties(l);c.parents=c.parents||[],c.parents.push(this)}l.build(e)}}o=u.outputNode}else if(a==="analyze")this.analyze(e,t);else if(a==="generate"){if(this.generate.length===1){const l=this.getNodeType(e),c=e.getDataFromNode(this);o=c.snippet,o===void 0?c.generated===void 0?(c.generated=!0,o=this.generate(e)||"",c.snippet=o):(console.warn("THREE.Node: Recursion detected.",this),o="/* Recursion detected. */"):c.flowCodes!==void 0&&e.context.nodeBlock!==void 0&&e.addFlowCodeHierarchy(this,e.context.nodeBlock),o=e.format(o,l,t)}else o=this.generate(e,t)||"";o===""&&t!==null&&t!=="void"&&t!=="OutputType"&&(console.error(`THREE.TSL: Invalid generated code, expected a "${t}".`),o=e.generateConst(t))}return e.removeChain(this),e.addSequentialNode(this),o}getSerializeChildren(){return Ii(this)}serialize(e){const t=this.getSerializeChildren(),s={};for(const{property:n,index:r,childNode:o}of t)r!==void 0?(s[n]===void 0&&(s[n]=Number.isInteger(r)?[]:{}),s[n][r]=o.toJSON(e.meta).uuid):s[n]=o.toJSON(e.meta).uuid;Object.keys(s).length>0&&(e.inputNodes=s)}deserialize(e){if(e.inputNodes!==void 0){const t=e.meta.nodes;for(const s in e.inputNodes)if(Array.isArray(e.inputNodes[s])){const n=[];for(const r of e.inputNodes[s])n.push(t[r]);this[s]=n}else if(typeof e.inputNodes[s]=="object"){const n={};for(const r in e.inputNodes[s]){const o=e.inputNodes[s][r];n[r]=t[o]}this[s]=n}else{const n=e.inputNodes[s];this[s]=t[n]}}}toJSON(e){const{uuid:t,type:s}=this,n=e===void 0||typeof e=="string";n&&(e={textures:{},images:{},nodes:{}});let r=e.nodes[t];r===void 0&&(r={uuid:t,type:s,meta:e,metadata:{version:4.7,type:"Node",generator:"Node.toJSON"}},n!==!0&&(e.nodes[r.uuid]=r),this.serialize(r),delete r.meta);function o(a){const u=[];for(const l in a){const c=a[l];delete c.metadata,u.push(c)}return u}if(n){const a=o(e.textures),u=o(e.images),l=o(e.nodes);a.length>0&&(r.textures=a),u.length>0&&(r.images=u),l.length>0&&(r.nodes=l)}return r}}class rn extends k{static get type(){return"ArrayElementNode"}constructor(e,t){super(),this.node=e,this.indexNode=t,this.isArrayElementNode=!0}getNodeType(e){return this.node.getElementType(e)}generate(e){const t=this.indexNode.getNodeType(e),s=this.node.build(e),n=this.indexNode.build(e,!e.isVector(t)&&e.isInteger(t)?t:"uint");return`${s}[ ${n} ]`}}class Nh extends k{static get type(){return"ConvertNode"}constructor(e,t){super(),this.node=e,this.convertTo=t}getNodeType(e){const t=this.node.getNodeType(e);let s=null;for(const n of this.convertTo.split("|"))(s===null||e.getTypeLength(t)===e.getTypeLength(n))&&(s=n);return s}serialize(e){super.serialize(e),e.convertTo=this.convertTo}deserialize(e){super.deserialize(e),this.convertTo=e.convertTo}generate(e,t){const s=this.node,n=this.getNodeType(e),r=s.build(e,n);return e.format(r,n,t)}}class Ce extends k{static get type(){return"TempNode"}constructor(e=null){super(e),this.isTempNode=!0}hasDependencies(e){return e.getDataFromNode(this).usageCount>1}build(e,t){if(e.getBuildStage()==="generate"){const n=e.getVectorType(this.getNodeType(e,t)),r=e.getDataFromNode(this);if(r.propertyName!==void 0)return e.format(r.propertyName,n,t);if(n!=="void"&&t!=="void"&&this.hasDependencies(e)){const o=super.build(e,n),a=e.getVarFromNode(this,null,n),u=e.getPropertyName(a);return e.addLineFlowCode(`${u} = ${o}`,this),r.snippet=o,r.propertyName=u,e.format(r.propertyName,n,t)}}return super.build(e,t)}}class mT extends Ce{static get type(){return"JoinNode"}constructor(e=[],t=null){super(t),this.nodes=e}getNodeType(e){return this.nodeType!==null?e.getVectorType(this.nodeType):e.getTypeFromLength(this.nodes.reduce((t,s)=>t+e.getTypeLength(s.getNodeType(e)),0))}generate(e,t){const s=this.getNodeType(e),n=e.getTypeLength(s),r=this.nodes,o=e.getComponentType(s),a=[];let u=0;for(const c of r){if(u>=n){console.error(`THREE.TSL: Length of parameters exceeds maximum length of function '${s}()' type.`);break}let d=c.getNodeType(e),p=e.getTypeLength(d),f;if(u+p>n&&(console.error(`THREE.TSL: Length of '${s}()' data exceeds maximum length of output type.`),p=n-u,d=e.getTypeFromLength(p)),u+=p,f=c.build(e,d),e.getComponentType(d)!==o){const y=e.getTypeFromLength(p,o);f=e.format(f,d,y)}a.push(f)}const l=`${e.getType(s)}( ${a.join(", ")} )`;return e.format(l,s,t)}}const gT=nn.join("");class Sh extends k{static get type(){return"SplitNode"}constructor(e,t="x"){super(),this.node=e,this.components=t,this.isSplitNode=!0}getVectorLength(){let e=this.components.length;for(const t of this.components)e=Math.max(nn.indexOf(t)+1,e);return e}getComponentType(e){return e.getComponentType(this.node.getNodeType(e))}getNodeType(e){return e.getTypeFromLength(this.components.length,this.getComponentType(e))}getScope(){return this.node.getScope()}generate(e,t){const s=this.node,n=e.getTypeLength(s.getNodeType(e));let r=null;if(n>1){let o=null;this.getVectorLength()>=n&&(o=e.getTypeFromLength(this.getVectorLength(),this.getComponentType(e)));const u=s.build(e,o);this.components.length===n&&this.components===gT.slice(0,this.components.length)?r=e.format(u,o,t):r=e.format(`${u}.${this.components}`,this.getNodeType(e),t)}else r=s.build(e,t);return r}serialize(e){super.serialize(e),e.components=this.components}deserialize(e){super.deserialize(e),this.components=e.components}}class yT extends Ce{static get type(){return"SetNode"}constructor(e,t,s){super(),this.sourceNode=e,this.components=t,this.targetNode=s}getNodeType(e){return this.sourceNode.getNodeType(e)}generate(e){const{sourceNode:t,components:s,targetNode:n}=this,r=this.getNodeType(e),o=e.getComponentType(n.getNodeType(e)),a=e.getTypeFromLength(s.length,o),u=n.build(e,a),l=t.build(e,r),c=e.getTypeLength(r),d=[];for(let p=0;p<c;p++){const f=nn[p];f===s[0]?(d.push(u),p+=s.length-1):d.push(l+"."+f)}return`${e.getType(r)}( ${d.join(", ")} )`}}class _T extends Ce{static get type(){return"FlipNode"}constructor(e,t){super(),this.sourceNode=e,this.components=t}getNodeType(e){return this.sourceNode.getNodeType(e)}generate(e){const{components:t,sourceNode:s}=this,n=this.getNodeType(e),r=s.build(e),o=e.getVarFromNode(this),a=e.getPropertyName(o);e.addLineFlowCode(a+" = "+r,this);const u=e.getTypeLength(n),l=[];let c=0;for(let d=0;d<u;d++){const p=nn[d];p===t[c]?(l.push("1.0 - "+(a+"."+p)),c++):l.push(a+"."+p)}return`${e.getType(n)}( ${l.join(", ")} )`}}class Au extends k{static get type(){return"InputNode"}constructor(e,t=null){super(t),this.isInputNode=!0,this.value=e,this.precision=null}getNodeType(){return this.nodeType===null?ys(this.value):this.nodeType}getInputType(e){return this.getNodeType(e)}setPrecision(e){return this.precision=e,this}serialize(e){super.serialize(e),e.value=this.value,this.value&&this.value.toArray&&(e.value=this.value.toArray()),e.valueType=ys(this.value),e.nodeType=this.nodeType,e.valueType==="ArrayBuffer"&&(e.value=Th(e.value)),e.precision=this.precision}deserialize(e){super.deserialize(e),this.nodeType=e.nodeType,this.value=Array.isArray(e.value)?Ru(e.valueType,...e.value):e.value,this.precision=e.precision||null,this.value&&this.value.fromArray&&(this.value=this.value.fromArray(e.value))}generate(){console.warn("Abstract function.")}}const oc=/float|u?int/;class Nt extends Au{static get type(){return"ConstNode"}constructor(e,t=null){super(e,t),this.isConstNode=!0}generateConst(e){return e.generateConst(this.getNodeType(e),this.value)}generate(e,t){const s=this.getNodeType(e);return oc.test(s)&&oc.test(t)?e.generateConst(t,this.value):e.format(this.generateConst(e),s,t)}}class TT extends k{static get type(){return"MemberNode"}constructor(e,t){super(),this.structNode=e,this.property=t,this.isMemberNode=!0}hasMember(e){return this.structNode.isMemberNode&&this.structNode.hasMember(e)===!1?!1:this.structNode.getMemberType(e,this.property)!=="void"}getNodeType(e){return this.hasMember(e)===!1?"float":this.structNode.getMemberType(e,this.property)}getMemberType(e,t){if(this.hasMember(e)===!1)return"float";const s=this.getNodeType(e);return e.getStructTypeNode(s).getMemberType(e,t)}generate(e){if(this.hasMember(e)===!1){console.warn(`THREE.TSL: Member "${this.property}" does not exist in struct.`);const s=this.getNodeType(e);return e.generateConst(s)}return this.structNode.build(e)+"."+this.property}}let vs=null;const Ga=new Map;function A(i,e){if(Ga.has(i)){console.warn(`THREE.TSL: Redefinition of method chaining '${i}'.`);return}if(typeof e!="function")throw new Error(`THREE.TSL: Node element ${i} is not a function`);Ga.set(i,e),i!=="assign"&&(k.prototype[i]=function(...t){return this.isStackNode?this.add(e(...t)):e(this,...t)},k.prototype[i+"Assign"]=function(...t){return this.isStackNode?this.assign(t[0],e(...t)):this.assign(e(this,...t))})}const xT=i=>i.replace(/r|s/g,"x").replace(/g|t/g,"y").replace(/b|p/g,"z").replace(/a|q/g,"w"),ac=i=>xT(i).split("").sort().join("");k.prototype.assign=function(...i){if(this.isStackNode!==!0)return vs!==null?vs.assign(this,...i):console.error("THREE.TSL: No stack defined for assign operation. Make sure the assign is inside a Fn()."),this;{const e=Ga.get("assign");return this.add(e(...i))}};k.prototype.toVarIntent=function(){return this};k.prototype.get=function(i){return new TT(this,i)};const pr={};function jr(i,e,t){pr[i]=pr[e]=pr[t]={get(){this._cache=this._cache||{};let o=this._cache[i];return o===void 0&&(o=new Sh(this,i),this._cache[i]=o),o},set(o){this[i].assign(E(o))}};const s=i.toUpperCase(),n=e.toUpperCase(),r=t.toUpperCase();k.prototype["set"+s]=k.prototype["set"+n]=k.prototype["set"+r]=function(o){const a=ac(i);return new yT(this,a,E(o))},k.prototype["flip"+s]=k.prototype["flip"+n]=k.prototype["flip"+r]=function(){const o=ac(i);return new _T(this,o)}}const Ft=["x","y","z","w"],Lt=["r","g","b","a"],Dt=["s","t","p","q"];for(let i=0;i<4;i++){let e=Ft[i],t=Lt[i],s=Dt[i];jr(e,t,s);for(let n=0;n<4;n++){e=Ft[i]+Ft[n],t=Lt[i]+Lt[n],s=Dt[i]+Dt[n],jr(e,t,s);for(let r=0;r<4;r++){e=Ft[i]+Ft[n]+Ft[r],t=Lt[i]+Lt[n]+Lt[r],s=Dt[i]+Dt[n]+Dt[r],jr(e,t,s);for(let o=0;o<4;o++)e=Ft[i]+Ft[n]+Ft[r]+Ft[o],t=Lt[i]+Lt[n]+Lt[r]+Lt[o],s=Dt[i]+Dt[n]+Dt[r]+Dt[o],jr(e,t,s)}}}for(let i=0;i<32;i++)pr[i]={get(){this._cache=this._cache||{};let e=this._cache[i];return e===void 0&&(e=new rn(this,new Nt(i,"uint")),this._cache[i]=e),e},set(e){this[i].assign(E(e))}};Object.defineProperties(k.prototype,pr);const uc=new WeakMap,bT=function(i,e=null){const t=ys(i);return t==="node"?i:e===null&&(t==="float"||t==="boolean")||t&&t!=="shader"&&t!=="string"?E(ka(i,e)):t==="shader"?i.isFn?i:N(i):i},NT=function(i,e=null){for(const t in i)i[t]=E(i[t],e);return i},ST=function(i,e=null){const t=i.length;for(let s=0;s<t;s++)i[s]=E(i[s],e);return i},vh=function(i,e=null,t=null,s=null){function n(c){return s!==null?(c=E(Object.assign(c,s)),s.intent===!0&&(c=c.toVarIntent())):c=E(c),c}let r,o=e,a,u;function l(c){let d;return o?d=/[a-z]/i.test(o)?o+"()":o:d=i.type,a!==void 0&&c.length<a?(console.error(`THREE.TSL: "${d}" parameter length is less than minimum required.`),c.concat(new Array(a-c.length).fill(0))):u!==void 0&&c.length>u?(console.error(`THREE.TSL: "${d}" parameter length exceeds limit.`),c.slice(0,u)):c}return e===null?r=(...c)=>n(new i(...Qs(l(c)))):t!==null?(t=E(t),r=(...c)=>n(new i(e,...Qs(l(c)),t))):r=(...c)=>n(new i(e,...Qs(l(c)))),r.setParameterLength=(...c)=>(c.length===1?a=u=c[0]:c.length===2&&([a,u]=c),r),r.setName=c=>(o=c,r),r},vT=function(i,...e){return E(new i(...Qs(e)))};class RT extends k{constructor(e,t){super(),this.shaderNode=e,this.rawInputs=t,this.isShaderCallNodeInternal=!0}getNodeType(e){return this.shaderNode.nodeType||this.getOutputNode(e).getNodeType(e)}getMemberType(e,t){return this.getOutputNode(e).getMemberType(e,t)}call(e){const{shaderNode:t,rawInputs:s}=this,n=e.getNodeProperties(t),r=e.getClosestSubBuild(t.subBuilds)||"",o=r||"default";if(n[o])return n[o];const a=e.subBuildFn;e.subBuildFn=r;let u=null;if(t.layout){let l=uc.get(e.constructor);l===void 0&&(l=new WeakMap,uc.set(e.constructor,l));let c=l.get(t);c===void 0&&(c=E(e.buildFunctionNode(t)),l.set(t,c)),e.addInclude(c);const d=s?AT(s):null;u=E(c.call(d))}else{const l=new Proxy(e,{get:(m,y,x)=>{let S;return Symbol.iterator===y?S=function*(){yield void 0}:S=Reflect.get(m,y,x),S}}),c=s?ET(s):null,d=Array.isArray(s)?s.length>0:s!==null,p=t.jsFunc,f=d||p.length>1?p(c,l):p(l);u=E(f)}return e.subBuildFn=a,t.once&&(n[o]=u),u}setupOutput(e){return e.addStack(),e.stack.outputNode=this.call(e),e.removeStack()}getOutputNode(e){const t=e.getNodeProperties(this),s=e.getSubBuildOutput(this);return t[s]=t[s]||this.setupOutput(e),t[s].subBuild=e.getClosestSubBuild(this),t[s]}build(e,t=null){let s=null;const n=e.getBuildStage(),r=e.getNodeProperties(this),o=e.getSubBuildOutput(this),a=this.getOutputNode(e);if(n==="setup"){const u=e.getSubBuildProperty("initialized",this);if(r[u]!==!0&&(r[u]=!0,r[o]=this.getOutputNode(e),r[o].build(e),this.shaderNode.subBuilds))for(const l of e.chaining){const c=e.getDataFromNode(l,"any");c.subBuilds=c.subBuilds||new Set;for(const d of this.shaderNode.subBuilds)c.subBuilds.add(d)}s=r[o]}else n==="analyze"?a.build(e,t):n==="generate"&&(s=a.build(e,t)||"");return s}}function AT(i){let e;return no(i),i[0]&&(i[0].isNode||Object.getPrototypeOf(i[0])!==Object.prototype)?e=[...i]:e=i[0],e}function ET(i){let e=0;return no(i),new Proxy(i,{get:(t,s,n)=>{let r;if(s==="length")return r=i.length,r;if(Symbol.iterator===s)r=function*(){for(const o of i)yield E(o)};else{if(i.length>0)if(Object.getPrototypeOf(i[0])===Object.prototype){const o=i[0];o[s]===void 0?r=o[e++]:r=Reflect.get(o,s,n)}else i[0]instanceof k&&(i[s]===void 0?r=i[e++]:r=Reflect.get(i,s,n));else r=Reflect.get(t,s,n);r=E(r)}return r}})}class wT extends k{constructor(e,t){super(t),this.jsFunc=e,this.layout=null,this.global=!0,this.once=!1}setLayout(e){return this.layout=e,this}call(e=null){return E(new RT(this,e))}setup(){return this.call()}}const CT=[!1,!0],MT=[0,1,2,3],BT=[-1,-2],Rh=[.5,1.5,1/3,1e-6,1e6,Math.PI,Math.PI*2,1/Math.PI,2/Math.PI,1/(Math.PI*2),Math.PI/2],Eu=new Map;for(const i of CT)Eu.set(i,new Nt(i));const wu=new Map;for(const i of MT)wu.set(i,new Nt(i,"uint"));const Cu=new Map([...wu].map(i=>new Nt(i.value,"int")));for(const i of BT)Cu.set(i,new Nt(i,"int"));const to=new Map([...Cu].map(i=>new Nt(i.value)));for(const i of Rh)to.set(i,new Nt(i));for(const i of Rh)to.set(-i,new Nt(-i));const so={bool:Eu,uint:wu,ints:Cu,float:to},lc=new Map([...Eu,...to]),ka=(i,e)=>lc.has(i)?lc.get(i):i.isNode===!0?i:new Nt(i,e),Le=function(i,e=null){return(...t)=>{for(const n of t)if(n===void 0)return console.error(`THREE.TSL: Invalid parameter for the type "${i}".`),E(new Nt(0,i));if((t.length===0||!["bool","float","int","uint"].includes(i)&&t.every(n=>{const r=typeof n;return r!=="object"&&r!=="function"}))&&(t=[Ru(i,...t)]),t.length===1&&e!==null&&e.has(t[0]))return ar(e.get(t[0]));if(t.length===1){const n=ka(t[0],i);return n.nodeType===i?ar(n):ar(new Nh(n,i))}const s=t.map(n=>ka(n));return ar(new mT(s,i))}},vr=i=>typeof i=="object"&&i!==null?i.value:i,Ah=i=>i!=null?i.nodeType||i.convertTo||(typeof i=="string"?i:null):null;function Sn(i,e){return new wT(i,e)}const E=(i,e=null)=>bT(i,e),ar=(i,e=null)=>E(i,e).toVarIntent(),no=(i,e=null)=>new NT(i,e),Qs=(i,e=null)=>new ST(i,e),q=(i,e=null,t=null,s=null)=>new vh(i,e,t,s),U=(i,...e)=>new vT(i,...e),L=(i,e=null,t=null,s={})=>new vh(i,e,t,{intent:!0,...s});let PT=0;class FT extends k{constructor(e,t=null){super();let s=null;t!==null&&(typeof t=="object"?s=t.return:(typeof t=="string"?s=t:console.error("THREE.TSL: Invalid layout type."),t=null)),this.shaderNode=new Sn(e,s),t!==null&&this.setLayout(t),this.isFn=!0}setLayout(e){const t=this.shaderNode.nodeType;if(typeof e.inputs!="object"){const s={name:"fn"+PT++,type:t,inputs:[]};for(const n in e)n!=="return"&&s.inputs.push({name:n,type:e[n]});e=s}return this.shaderNode.setLayout(e),this}getNodeType(e){return this.shaderNode.getNodeType(e)||"float"}call(...e){const t=this.shaderNode.call(e);return this.shaderNode.nodeType==="void"&&t.toStack(),t.toVarIntent()}once(e=null){return this.shaderNode.once=!0,this.shaderNode.subBuilds=e,this}generate(e){const t=this.getNodeType(e);return console.error('THREE.TSL: "Fn()" was declared but not invoked. Try calling it like "Fn()( ...params )".'),e.generateConst(t)}}function N(i,e=null){const t=new FT(i,e);return new Proxy(()=>{},{apply(s,n,r){return t.call(...r)},get(s,n,r){return Reflect.get(t,n,r)},set(s,n,r,o){return Reflect.set(t,n,r,o)}})}const Rr=i=>{vs=i},ro=()=>vs,H=(...i)=>vs.If(...i),LT=(...i)=>vs.Switch(...i);function io(i){return vs&&vs.add(i),i}A("toStack",io);const Eh=new Le("color"),g=new Le("float",so.float),_=new Le("int",so.ints),O=new Le("uint",so.uint),Tt=new Le("bool",so.bool),M=new Le("vec2"),Ie=new Le("ivec2"),wh=new Le("uvec2"),Ch=new Le("bvec2"),b=new Le("vec3"),Mh=new Le("ivec3"),On=new Le("uvec3"),Mu=new Le("bvec3"),W=new Le("vec4"),Bh=new Le("ivec4"),Ph=new Le("uvec4"),Fh=new Le("bvec4"),oo=new Le("mat2"),Xe=new Le("mat3"),Zs=new Le("mat4"),DT=(i="")=>E(new Nt(i,"string")),UT=i=>E(new Nt(i,"ArrayBuffer"));A("toColor",Eh);A("toFloat",g);A("toInt",_);A("toUint",O);A("toBool",Tt);A("toVec2",M);A("toIVec2",Ie);A("toUVec2",wh);A("toBVec2",Ch);A("toVec3",b);A("toIVec3",Mh);A("toUVec3",On);A("toBVec3",Mu);A("toVec4",W);A("toIVec4",Bh);A("toUVec4",Ph);A("toBVec4",Fh);A("toMat2",oo);A("toMat3",Xe);A("toMat4",Zs);const Lh=q(rn).setParameterLength(2),Dh=(i,e)=>E(new Nh(E(i),e)),IT=(i,e)=>E(new Sh(E(i),e));A("element",Lh);A("convert",Dh);const VT=i=>(console.warn("THREE.TSL: append() has been renamed to Stack()."),io(i));A("append",i=>(console.warn("THREE.TSL: .append() has been renamed to .toStack()."),io(i)));class oe extends k{static get type(){return"PropertyNode"}constructor(e,t=null,s=!1){super(e),this.name=t,this.varying=s,this.isPropertyNode=!0,this.global=!0}getHash(e){return this.name||super.getHash(e)}generate(e){let t;return this.varying===!0?(t=e.getVaryingFromNode(this,this.name),t.needsInterpolation=!0):t=e.getVarFromNode(this,this.name),e.getPropertyName(t)}}const ss=(i,e)=>E(new oe(i,e)),Ar=(i,e)=>E(new oe(i,e,!0)),re=U(oe,"vec4","DiffuseColor"),za=U(oe,"vec3","EmissiveColor"),Vt=U(oe,"float","Roughness"),Er=U(oe,"float","Metalness"),Oi=U(oe,"float","Clearcoat"),wr=U(oe,"float","ClearcoatRoughness"),Hs=U(oe,"vec3","Sheen"),ao=U(oe,"float","SheenRoughness"),uo=U(oe,"float","Iridescence"),Bu=U(oe,"float","IridescenceIOR"),Pu=U(oe,"float","IridescenceThickness"),Gi=U(oe,"float","AlphaT"),ps=U(oe,"float","Anisotropy"),fr=U(oe,"vec3","AnisotropyT"),Js=U(oe,"vec3","AnisotropyB"),Je=U(oe,"color","SpecularColor"),Cr=U(oe,"float","SpecularF90"),ki=U(oe,"float","Shininess"),Cn=U(oe,"vec4","Output"),Ni=U(oe,"float","dashSize"),$a=U(oe,"float","gapSize"),OT=U(oe,"float","pointWidth"),mr=U(oe,"float","IOR"),zi=U(oe,"float","Transmission"),Fu=U(oe,"float","Thickness"),Lu=U(oe,"float","AttenuationDistance"),Du=U(oe,"color","AttenuationColor"),Uu=U(oe,"float","Dispersion");class Uh extends k{static get type(){return"UniformGroupNode"}constructor(e,t=!1,s=1){super("string"),this.name=e,this.shared=t,this.order=s,this.isUniformGroup=!0}serialize(e){super.serialize(e),e.name=this.name,e.version=this.version,e.shared=this.shared}deserialize(e){super.deserialize(e),this.name=e.name,this.version=e.version,this.shared=e.shared}}const Ih=i=>new Uh(i),lo=(i,e=0)=>new Uh(i,!0,e),Vh=lo("frame"),z=lo("render"),Iu=Ih("object");class Fr extends Au{static get type(){return"UniformNode"}constructor(e,t=null){super(e,t),this.isUniformNode=!0,this.name="",this.groupNode=Iu}setName(e){return this.name=e,this}label(e){return console.warn('THREE.TSL: "label()" has been deprecated. Use "setName()" instead.'),this.setName(e)}setGroup(e){return this.groupNode=e,this}getGroup(){return this.groupNode}getUniformHash(e){return this.getHash(e)}onUpdate(e,t){return e=e.bind(this),super.onUpdate(s=>{const n=e(s,this);n!==void 0&&(this.value=n)},t)}getInputType(e){let t=super.getInputType(e);return t==="bool"&&(t="uint"),t}generate(e,t){const s=this.getNodeType(e),n=this.getUniformHash(e);let r=e.getNodeFromHash(n);r===void 0&&(e.setHashNode(this,n),r=this);const o=r.getInputType(e),a=e.getUniformFromNode(r,o,e.shaderStage,this.name||e.context.nodeName),u=e.getPropertyName(a);e.context.nodeName!==void 0&&delete e.context.nodeName;let l=u;if(s==="bool"){const c=e.getDataFromNode(this);let d=c.propertyName;if(d===void 0){const p=e.getVarFromNode(this,null,"bool");d=e.getPropertyName(p),c.propertyName=d,l=e.format(u,o,s),e.addLineFlowCode(`${d} = ${l}`,this)}l=d}return e.format(l,s,t)}}const $=(i,e)=>{const t=Ah(e||i);return t===i&&(i=Ru(t)),i=i&&i.isNode===!0?i.node&&i.node.value||i.value:i,E(new Fr(i,t))};class cc extends Ce{static get type(){return"ArrayNode"}constructor(e,t,s=null){super(e),this.count=t,this.values=s,this.isArrayNode=!0}getArrayCount(){return this.count}getNodeType(e){return this.nodeType===null&&(this.nodeType=this.values[0].getNodeType(e)),this.nodeType}getElementType(e){return this.getNodeType(e)}generate(e){const t=this.getNodeType(e);return e.generateArray(t,this.count,this.values)}}const Oh=(...i)=>{let e;if(i.length===1){const t=i[0];e=new cc(null,t.length,t)}else{const t=i[0],s=i[1];e=new cc(t,s)}return E(e)};A("toArray",(i,e)=>Oh(Array(e).fill(i)));class GT extends Ce{static get type(){return"AssignNode"}constructor(e,t){super(),this.targetNode=e,this.sourceNode=t,this.isAssignNode=!0}hasDependencies(){return!1}getNodeType(e,t){return t!=="void"?this.targetNode.getNodeType(e):"void"}needsSplitAssign(e){const{targetNode:t}=this;if(e.isAvailable("swizzleAssign")===!1&&t.isSplitNode&&t.components.length>1){const s=e.getTypeLength(t.node.getNodeType(e));return nn.join("").slice(0,s)!==t.components}return!1}setup(e){const{targetNode:t,sourceNode:s}=this,n=t.getScope(),r=e.getNodeProperties(n);r.assign=!0;const o=e.getNodeProperties(this);o.sourceNode=s,o.targetNode=t.context({assign:!0})}generate(e,t){const{targetNode:s,sourceNode:n}=e.getNodeProperties(this),r=this.needsSplitAssign(e),o=s.build(e),a=s.getNodeType(e),u=n.build(e,a),l=n.getNodeType(e),c=e.getDataFromNode(this);let d;if(c.initialized===!0)t!=="void"&&(d=o);else if(r){const p=e.getVarFromNode(this,null,a),f=e.getPropertyName(p);e.addLineFlowCode(`${f} = ${u}`,this);const m=s.node,x=m.node.context({assign:!0}).build(e);for(let S=0;S<m.components.length;S++){const R=m.components[S];e.addLineFlowCode(`${x}.${R} = ${f}[ ${S} ]`,this)}t!=="void"&&(d=o)}else d=`${o} = ${u}`,(t==="void"||l==="void")&&(e.addLineFlowCode(d,this),t!=="void"&&(d=o));return c.initialized=!0,e.format(d,a,t)}}const Gh=q(GT).setParameterLength(2);A("assign",Gh);class kT extends Ce{static get type(){return"FunctionCallNode"}constructor(e=null,t={}){super(),this.functionNode=e,this.parameters=t}setParameters(e){return this.parameters=e,this}getParameters(){return this.parameters}getNodeType(e){return this.functionNode.getNodeType(e)}getMemberType(e,t){return this.functionNode.getMemberType(e,t)}generate(e){const t=[],s=this.functionNode,n=s.getInputs(e),r=this.parameters,o=(u,l)=>{const c=l.type,d=c==="pointer";let p;return d?p="&"+u.build(e):p=u.build(e,c),p};if(Array.isArray(r)){if(r.length>n.length)console.error("THREE.TSL: The number of provided parameters exceeds the expected number of inputs in 'Fn()'."),r.length=n.length;else if(r.length<n.length)for(console.error("THREE.TSL: The number of provided parameters is less than the expected number of inputs in 'Fn()'.");r.length<n.length;)r.push(g(0));for(let u=0;u<r.length;u++)t.push(o(r[u],n[u]))}else for(const u of n){const l=r[u.name];l!==void 0?t.push(o(l,u)):(console.error(`THREE.TSL: Input '${u.name}' not found in 'Fn()'.`),t.push(o(g(0),u)))}return`${s.build(e,"property")}( ${t.join(", ")} )`}}const kh=(i,...e)=>(e=e.length>1||e[0]&&e[0].isNode===!0?Qs(e):no(e[0]),E(new kT(E(i),e)));A("call",kh);const zT={"==":"equal","!=":"notEqual","<":"lessThan",">":"greaterThan","<=":"lessThanEqual",">=":"greaterThanEqual","%":"mod"};class Ne extends Ce{static get type(){return"OperatorNode"}constructor(e,t,s,...n){if(super(),n.length>0){let r=new Ne(e,t,s);for(let o=0;o<n.length-1;o++)r=new Ne(e,r,n[o]);t=r,s=n[n.length-1]}this.op=e,this.aNode=t,this.bNode=s,this.isOperatorNode=!0}getOperatorMethod(e,t){return e.getMethod(zT[this.op],t)}getNodeType(e,t=null){const s=this.op,n=this.aNode,r=this.bNode,o=n.getNodeType(e),a=r?r.getNodeType(e):null;if(o==="void"||a==="void")return t||"void";if(s==="%")return o;if(s==="~"||s==="&"||s==="|"||s==="^"||s===">>"||s==="<<")return e.getIntegerType(o);if(s==="!"||s==="&&"||s==="||"||s==="^^")return"bool";if(s==="=="||s==="!="||s==="<"||s===">"||s==="<="||s===">="){const u=Math.max(e.getTypeLength(o),e.getTypeLength(a));return u>1?`bvec${u}`:"bool"}else{if(e.isMatrix(o)){if(a==="float")return o;if(e.isVector(a))return e.getVectorFromMatrix(o);if(e.isMatrix(a))return o}else if(e.isMatrix(a)){if(o==="float")return a;if(e.isVector(o))return e.getVectorFromMatrix(a)}return e.getTypeLength(a)>e.getTypeLength(o)?a:o}}generate(e,t){const s=this.op,{aNode:n,bNode:r}=this,o=this.getNodeType(e,t);let a=null,u=null;o!=="void"?(a=n.getNodeType(e),u=r?r.getNodeType(e):null,s==="<"||s===">"||s==="<="||s===">="||s==="=="||s==="!="?e.isVector(a)?u=a:e.isVector(u)?a=u:a!==u&&(a=u="float"):s===">>"||s==="<<"?(a=o,u=e.changeComponentType(u,"uint")):s==="%"?(a=o,u=e.isInteger(a)&&e.isInteger(u)?u:a):e.isMatrix(a)?u==="float"?u="float":e.isVector(u)?u=e.getVectorFromMatrix(a):e.isMatrix(u)||(a=u=o):e.isMatrix(u)?a==="float"?a="float":e.isVector(a)?a=e.getVectorFromMatrix(u):a=u=o:a=u=o):a=u=o;const l=n.build(e,a),c=r?r.build(e,u):null,d=e.getFunctionOperator(s);if(t!=="void"){const p=e.renderer.coordinateSystem===Pi;if(s==="=="||s==="!="||s==="<"||s===">"||s==="<="||s===">=")return p?e.isVector(a)?e.format(`${this.getOperatorMethod(e,t)}( ${l}, ${c} )`,o,t):e.format(`( ${l} ${s} ${c} )`,o,t):e.format(`( ${l} ${s} ${c} )`,o,t);if(s==="%")return e.isInteger(u)?e.format(`( ${l} % ${c} )`,o,t):e.format(`${this.getOperatorMethod(e,o)}( ${l}, ${c} )`,o,t);if(s==="!"||s==="~")return e.format(`(${s}${l})`,a,t);if(d)return e.format(`${d}( ${l}, ${c} )`,o,t);if(e.isMatrix(a)&&u==="float")return e.format(`( ${c} ${s} ${l} )`,o,t);if(a==="float"&&e.isMatrix(u))return e.format(`${l} ${s} ${c}`,o,t);{let f=`( ${l} ${s} ${c} )`;return!p&&o==="bool"&&e.isVector(a)&&e.isVector(u)&&(f=`all${f}`),e.format(f,o,t)}}else if(a!=="void")return d?e.format(`${d}( ${l}, ${c} )`,o,t):e.isMatrix(a)&&u==="float"?e.format(`${c} ${s} ${l}`,o,t):e.format(`${l} ${s} ${c}`,o,t)}serialize(e){super.serialize(e),e.op=this.op}deserialize(e){super.deserialize(e),this.op=e.op}}const Be=L(Ne,"+").setParameterLength(2,1/0).setName("add"),Z=L(Ne,"-").setParameterLength(2,1/0).setName("sub"),X=L(Ne,"*").setParameterLength(2,1/0).setName("mul"),dt=L(Ne,"/").setParameterLength(2,1/0).setName("div"),Lr=L(Ne,"%").setParameterLength(2).setName("mod"),Vu=L(Ne,"==").setParameterLength(2).setName("equal"),zh=L(Ne,"!=").setParameterLength(2).setName("notEqual"),$h=L(Ne,"<").setParameterLength(2).setName("lessThan"),Ou=L(Ne,">").setParameterLength(2).setName("greaterThan"),Wh=L(Ne,"<=").setParameterLength(2).setName("lessThanEqual"),Hh=L(Ne,">=").setParameterLength(2).setName("greaterThanEqual"),qh=L(Ne,"&&").setParameterLength(2,1/0).setName("and"),jh=L(Ne,"||").setParameterLength(2,1/0).setName("or"),Xh=L(Ne,"!").setParameterLength(1).setName("not"),Yh=L(Ne,"^^").setParameterLength(2).setName("xor"),Kh=L(Ne,"&").setParameterLength(2).setName("bitAnd"),Qh=L(Ne,"~").setParameterLength(2).setName("bitNot"),Zh=L(Ne,"|").setParameterLength(2).setName("bitOr"),Jh=L(Ne,"^").setParameterLength(2).setName("bitXor"),ep=L(Ne,"<<").setParameterLength(2).setName("shiftLeft"),tp=L(Ne,">>").setParameterLength(2).setName("shiftRight"),sp=N(([i])=>(i.addAssign(1),i)),np=N(([i])=>(i.subAssign(1),i)),rp=N(([i])=>{const e=_(i).toConst();return i.addAssign(1),e}),ip=N(([i])=>{const e=_(i).toConst();return i.subAssign(1),e});A("add",Be);A("sub",Z);A("mul",X);A("div",dt);A("mod",Lr);A("equal",Vu);A("notEqual",zh);A("lessThan",$h);A("greaterThan",Ou);A("lessThanEqual",Wh);A("greaterThanEqual",Hh);A("and",qh);A("or",jh);A("not",Xh);A("xor",Yh);A("bitAnd",Kh);A("bitNot",Qh);A("bitOr",Zh);A("bitXor",Jh);A("shiftLeft",ep);A("shiftRight",tp);A("incrementBefore",sp);A("decrementBefore",np);A("increment",rp);A("decrement",ip);const op=(i,e)=>(console.warn('THREE.TSL: "modInt()" is deprecated. Use "mod( int( ... ) )" instead.'),Lr(_(i),_(e)));A("modInt",op);class v extends Ce{static get type(){return"MathNode"}constructor(e,t,s=null,n=null){if(super(),(e===v.MAX||e===v.MIN)&&arguments.length>3){let r=new v(e,t,s);for(let o=2;o<arguments.length-1;o++)r=new v(e,r,arguments[o]);t=r,s=arguments[arguments.length-1],n=null}this.method=e,this.aNode=t,this.bNode=s,this.cNode=n,this.isMathNode=!0}getInputType(e){const t=this.aNode.getNodeType(e),s=this.bNode?this.bNode.getNodeType(e):null,n=this.cNode?this.cNode.getNodeType(e):null,r=e.isMatrix(t)?0:e.getTypeLength(t),o=e.isMatrix(s)?0:e.getTypeLength(s),a=e.isMatrix(n)?0:e.getTypeLength(n);return r>o&&r>a?t:o>a?s:a>r?n:t}getNodeType(e){const t=this.method;return t===v.LENGTH||t===v.DISTANCE||t===v.DOT?"float":t===v.CROSS?"vec3":t===v.ALL||t===v.ANY?"bool":t===v.EQUALS?e.changeComponentType(this.aNode.getNodeType(e),"bool"):this.getInputType(e)}setup(e){const{aNode:t,bNode:s,method:n}=this;let r=null;if(n===v.ONE_MINUS)r=Z(1,t);else if(n===v.RECIPROCAL)r=dt(1,t);else if(n===v.DIFFERENCE)r=ge(Z(t,s));else if(n===v.TRANSFORM_DIRECTION){let o=t,a=s;e.isMatrix(o.getNodeType(e))?a=W(b(a),0):o=W(b(o),0);const u=X(o,a).xyz;r=is(u)}return r!==null?r:super.setup(e)}generate(e,t){if(e.getNodeProperties(this).outputNode)return super.generate(e,t);let n=this.method;const r=this.getNodeType(e),o=this.getInputType(e),a=this.aNode,u=this.bNode,l=this.cNode,c=e.renderer.coordinateSystem;if(n===v.NEGATE)return e.format("( - "+a.build(e,o)+" )",r,t);{const d=[];return n===v.CROSS?d.push(a.build(e,r),u.build(e,r)):c===Pi&&n===v.STEP?d.push(a.build(e,e.getTypeLength(a.getNodeType(e))===1?"float":o),u.build(e,o)):c===Pi&&(n===v.MIN||n===v.MAX)?d.push(a.build(e,o),u.build(e,e.getTypeLength(u.getNodeType(e))===1?"float":o)):n===v.REFRACT?d.push(a.build(e,o),u.build(e,o),l.build(e,"float")):n===v.MIX?d.push(a.build(e,o),u.build(e,o),l.build(e,e.getTypeLength(l.getNodeType(e))===1?"float":o)):(c===Vn&&n===v.ATAN&&u!==null&&(n="atan2"),e.shaderStage!=="fragment"&&(n===v.DFDX||n===v.DFDY)&&(console.warn(`THREE.TSL: '${n}' is not supported in the ${e.shaderStage} stage.`),n="/*"+n+"*/"),d.push(a.build(e,o)),u!==null&&d.push(u.build(e,o)),l!==null&&d.push(l.build(e,o))),e.format(`${e.getMethod(n,r)}( ${d.join(", ")} )`,r,t)}}serialize(e){super.serialize(e),e.method=this.method}deserialize(e){super.deserialize(e),this.method=e.method}}v.ALL="all";v.ANY="any";v.RADIANS="radians";v.DEGREES="degrees";v.EXP="exp";v.EXP2="exp2";v.LOG="log";v.LOG2="log2";v.SQRT="sqrt";v.INVERSE_SQRT="inversesqrt";v.FLOOR="floor";v.CEIL="ceil";v.NORMALIZE="normalize";v.FRACT="fract";v.SIN="sin";v.COS="cos";v.TAN="tan";v.ASIN="asin";v.ACOS="acos";v.ATAN="atan";v.ABS="abs";v.SIGN="sign";v.LENGTH="length";v.NEGATE="negate";v.ONE_MINUS="oneMinus";v.DFDX="dFdx";v.DFDY="dFdy";v.ROUND="round";v.RECIPROCAL="reciprocal";v.TRUNC="trunc";v.FWIDTH="fwidth";v.TRANSPOSE="transpose";v.DETERMINANT="determinant";v.INVERSE="inverse";v.EQUALS="equals";v.MIN="min";v.MAX="max";v.STEP="step";v.REFLECT="reflect";v.DISTANCE="distance";v.DIFFERENCE="difference";v.DOT="dot";v.CROSS="cross";v.POW="pow";v.TRANSFORM_DIRECTION="transformDirection";v.MIX="mix";v.CLAMP="clamp";v.REFRACT="refract";v.SMOOTHSTEP="smoothstep";v.FACEFORWARD="faceforward";const ap=g(1e-6),$T=g(1e6),$i=g(Math.PI),WT=g(Math.PI*2),up=L(v,v.ALL).setParameterLength(1),lp=L(v,v.ANY).setParameterLength(1),cp=L(v,v.RADIANS).setParameterLength(1),dp=L(v,v.DEGREES).setParameterLength(1),Gu=L(v,v.EXP).setParameterLength(1),Fn=L(v,v.EXP2).setParameterLength(1),co=L(v,v.LOG).setParameterLength(1),Ot=L(v,v.LOG2).setParameterLength(1),Xt=L(v,v.SQRT).setParameterLength(1),ku=L(v,v.INVERSE_SQRT).setParameterLength(1),Gt=L(v,v.FLOOR).setParameterLength(1),ho=L(v,v.CEIL).setParameterLength(1),is=L(v,v.NORMALIZE).setParameterLength(1),us=L(v,v.FRACT).setParameterLength(1),lt=L(v,v.SIN).setParameterLength(1),Zt=L(v,v.COS).setParameterLength(1),hp=L(v,v.TAN).setParameterLength(1),pp=L(v,v.ASIN).setParameterLength(1),zu=L(v,v.ACOS).setParameterLength(1),po=L(v,v.ATAN).setParameterLength(1,2),ge=L(v,v.ABS).setParameterLength(1),Mr=L(v,v.SIGN).setParameterLength(1),kt=L(v,v.LENGTH).setParameterLength(1),fp=L(v,v.NEGATE).setParameterLength(1),mp=L(v,v.ONE_MINUS).setParameterLength(1),$u=L(v,v.DFDX).setParameterLength(1),Wu=L(v,v.DFDY).setParameterLength(1),gp=L(v,v.ROUND).setParameterLength(1),yp=L(v,v.RECIPROCAL).setParameterLength(1),Hu=L(v,v.TRUNC).setParameterLength(1),_p=L(v,v.FWIDTH).setParameterLength(1),Tp=L(v,v.TRANSPOSE).setParameterLength(1),xp=L(v,v.DETERMINANT).setParameterLength(1),bp=L(v,v.INVERSE).setParameterLength(1),Np=(i,e)=>(console.warn('THREE.TSL: "equals" is deprecated. Use "equal" inside a vector instead, like: "bvec*( equal( ... ) )"'),Vu(i,e)),rt=L(v,v.MIN).setParameterLength(2,1/0),Se=L(v,v.MAX).setParameterLength(2,1/0),fo=L(v,v.STEP).setParameterLength(2),Sp=L(v,v.REFLECT).setParameterLength(2),vp=L(v,v.DISTANCE).setParameterLength(2),Rp=L(v,v.DIFFERENCE).setParameterLength(2),Es=L(v,v.DOT).setParameterLength(2),mo=L(v,v.CROSS).setParameterLength(2),mt=L(v,v.POW).setParameterLength(2),qu=i=>X(i,i),Ap=i=>X(i,i,i),Ep=i=>X(i,i,i,i),wp=L(v,v.TRANSFORM_DIRECTION).setParameterLength(2),Cp=i=>X(Mr(i),mt(ge(i),1/3)),ju=i=>Es(i,i),ne=L(v,v.MIX).setParameterLength(3),xt=(i,e=0,t=1)=>E(new v(v.CLAMP,E(i),E(e),E(t))),Xu=i=>xt(i),Yu=L(v,v.REFRACT).setParameterLength(3),Wt=L(v,v.SMOOTHSTEP).setParameterLength(3),Ku=L(v,v.FACEFORWARD).setParameterLength(3),Mp=N(([i])=>{const s=43758.5453,n=Es(i.xy,M(12.9898,78.233)),r=Lr(n,$i);return us(lt(r).mul(s))}),Bp=(i,e,t)=>ne(e,t,i),Pp=(i,e,t)=>Wt(e,t,i),Fp=(i,e)=>fo(e,i),Lp=(i,e)=>(console.warn('THREE.TSL: "atan2" is overloaded. Use "atan" instead.'),po(i,e)),HT=Ku,qT=ku;A("all",up);A("any",lp);A("equals",Np);A("radians",cp);A("degrees",dp);A("exp",Gu);A("exp2",Fn);A("log",co);A("log2",Ot);A("sqrt",Xt);A("inverseSqrt",ku);A("floor",Gt);A("ceil",ho);A("normalize",is);A("fract",us);A("sin",lt);A("cos",Zt);A("tan",hp);A("asin",pp);A("acos",zu);A("atan",po);A("abs",ge);A("sign",Mr);A("length",kt);A("lengthSq",ju);A("negate",fp);A("oneMinus",mp);A("dFdx",$u);A("dFdy",Wu);A("round",gp);A("reciprocal",yp);A("trunc",Hu);A("fwidth",_p);A("atan2",Lp);A("min",rt);A("max",Se);A("step",Fp);A("reflect",Sp);A("distance",vp);A("dot",Es);A("cross",mo);A("pow",mt);A("pow2",qu);A("pow3",Ap);A("pow4",Ep);A("transformDirection",wp);A("mix",Bp);A("clamp",xt);A("refract",Yu);A("smoothstep",Pp);A("faceForward",Ku);A("difference",Rp);A("saturate",Xu);A("cbrt",Cp);A("transpose",Tp);A("determinant",xp);A("inverse",bp);A("rand",Mp);class jT extends k{static get type(){return"ConditionalNode"}constructor(e,t,s=null){super(),this.condNode=e,this.ifNode=t,this.elseNode=s}getNodeType(e){const{ifNode:t,elseNode:s}=e.getNodeProperties(this);if(t===void 0)return e.flowBuildStage(this,"setup"),this.getNodeType(e);const n=t.getNodeType(e);if(s!==null){const r=s.getNodeType(e);if(e.getTypeLength(r)>e.getTypeLength(n))return r}return n}setup(e){const t=this.condNode.cache(),s=this.ifNode.cache(),n=this.elseNode?this.elseNode.cache():null,r=e.context.nodeBlock;e.getDataFromNode(s).parentNodeBlock=r,n!==null&&(e.getDataFromNode(n).parentNodeBlock=r);const o=e.context.uniformFlow,a=e.getNodeProperties(this);a.condNode=t,a.ifNode=o?s:s.context({nodeBlock:s}),a.elseNode=n?o?n:n.context({nodeBlock:n}):null}generate(e,t){const s=this.getNodeType(e),n=e.getDataFromNode(this);if(n.nodeProperty!==void 0)return n.nodeProperty;const{condNode:r,ifNode:o,elseNode:a}=e.getNodeProperties(this),u=e.currentFunctionNode,l=t!=="void",c=l?ss(s).build(e):"";n.nodeProperty=c;const d=r.build(e,"bool");if(e.context.uniformFlow&&a!==null){const m=o.build(e,s),y=a.build(e,s),x=e.getTernary(d,m,y);return e.format(x,s,t)}e.addFlowCode(`
${e.tab}if ( ${d} ) {

`).addFlowTab();let f=o.build(e,s);if(f&&(l?f=c+" = "+f+";":(f="return "+f+";",u===null&&(console.warn("THREE.TSL: Return statement used in an inline 'Fn()'. Define a layout struct to allow return values."),f="// "+f))),e.removeFlowTab().addFlowCode(e.tab+"	"+f+`

`+e.tab+"}"),a!==null){e.addFlowCode(` else {

`).addFlowTab();let m=a.build(e,s);m&&(l?m=c+" = "+m+";":(m="return "+m+";",u===null&&(console.warn("THREE.TSL: Return statement used in an inline 'Fn()'. Define a layout struct to allow return values."),m="// "+m))),e.removeFlowTab().addFlowCode(e.tab+"	"+m+`

`+e.tab+`}

`)}else e.addFlowCode(`

`);return e.format(c,s,t)}}const ke=q(jT).setParameterLength(2,3);A("select",ke);class Dp extends k{static get type(){return"ContextNode"}constructor(e,t={}){super(),this.isContextNode=!0,this.node=e,this.value=t}getScope(){return this.node.getScope()}getNodeType(e){return this.node.getNodeType(e)}getMemberType(e,t){return this.node.getMemberType(e,t)}analyze(e){const t=e.getContext();e.setContext({...e.context,...this.value}),this.node.build(e),e.setContext(t)}setup(e){const t=e.getContext();e.setContext({...e.context,...this.value}),this.node.build(e),e.setContext(t)}generate(e,t){const s=e.getContext();e.setContext({...e.context,...this.value});const n=this.node.build(e,t);return e.setContext(s),n}}const Dr=q(Dp).setParameterLength(1,2),Up=i=>Dr(i,{uniformFlow:!0}),Qu=(i,e)=>Dr(i,{nodeName:e});function Ip(i,e){return console.warn('THREE.TSL: "label()" has been deprecated. Use "setName()" instead.'),Qu(i,e)}A("context",Dr);A("label",Ip);A("uniformFlow",Up);A("setName",Qu);class Si extends k{static get type(){return"VarNode"}constructor(e,t=null,s=!1){super(),this.node=e,this.name=t,this.global=!0,this.isVarNode=!0,this.readOnly=s,this.parents=!0,this.intent=!1}setIntent(e){return this.intent=e,this}getIntent(){return this.intent}getMemberType(e,t){return this.node.getMemberType(e,t)}getElementType(e){return this.node.getElementType(e)}getNodeType(e){return this.node.getNodeType(e)}getArrayCount(e){return this.node.getArrayCount(e)}build(...e){return this.intent===!0&&e[0].getNodeProperties(this).assign!==!0?this.node.build(...e):super.build(...e)}generate(e){const{node:t,name:s,readOnly:n}=this,{renderer:r}=e,o=r.backend.isWebGPUBackend===!0;let a=!1,u=!1;n&&(a=e.isDeterministic(t),u=o?n:a);const l=e.getVectorType(this.getNodeType(e)),c=t.build(e,l),d=e.getVarFromNode(this,s,l,void 0,u),p=e.getPropertyName(d);let f=p;if(u)if(o)f=a?`const ${p}`:`let ${p}`;else{const m=t.getArrayCount(e);f=`const ${e.getVar(d.type,p,m)}`}return e.addLineFlowCode(`${f} = ${c}`,this),p}}const Zu=q(Si),Vp=(i,e=null)=>Zu(i,e).toStack(),Op=(i,e=null)=>Zu(i,e,!0).toStack(),Gp=i=>ro()===null?i:Zu(i).setIntent(!0).toStack();A("toVar",Vp);A("toConst",Op);A("toVarIntent",Gp);class XT extends k{static get type(){return"SubBuild"}constructor(e,t,s=null){super(s),this.node=e,this.name=t,this.isSubBuildNode=!0}getNodeType(e){if(this.nodeType!==null)return this.nodeType;e.addSubBuild(this.name);const t=this.node.getNodeType(e);return e.removeSubBuild(),t}build(e,...t){e.addSubBuild(this.name);const s=this.node.build(e,...t);return e.removeSubBuild(),s}}const Mn=(i,e,t=null)=>E(new XT(E(i),e,t));class YT extends k{static get type(){return"VaryingNode"}constructor(e,t=null){super(),this.node=e,this.name=t,this.isVaryingNode=!0,this.interpolationType=null,this.interpolationSampling=null,this.global=!0}setInterpolation(e,t=null){return this.interpolationType=e,this.interpolationSampling=t,this}getHash(e){return this.name||super.getHash(e)}getNodeType(e){return this.node.getNodeType(e)}setupVarying(e){const t=e.getNodeProperties(this);let s=t.varying;if(s===void 0){const n=this.name,r=this.getNodeType(e),o=this.interpolationType,a=this.interpolationSampling;t.varying=s=e.getVaryingFromNode(this,n,r,o,a),t.node=Mn(this.node,"VERTEX")}return s.needsInterpolation||(s.needsInterpolation=e.shaderStage==="fragment"),s}setup(e){this.setupVarying(e),e.flowNodeFromShaderStage(or.VERTEX,this.node)}analyze(e){this.setupVarying(e),e.flowNodeFromShaderStage(or.VERTEX,this.node)}generate(e){const t=e.getSubBuildProperty("property",e.currentStack),s=e.getNodeProperties(this),n=this.setupVarying(e);if(s[t]===void 0){const r=this.getNodeType(e),o=e.getPropertyName(n,or.VERTEX);e.flowNodeFromShaderStage(or.VERTEX,s.node,r,o),s[t]=o}return e.getPropertyName(n)}}const Yt=q(YT).setParameterLength(1,2),kp=i=>Yt(i);A("toVarying",Yt);A("toVertexStage",kp);A("varying",(...i)=>(console.warn("THREE.TSL: .varying() has been renamed to .toVarying()."),Yt(...i)));A("vertexStage",(...i)=>(console.warn("THREE.TSL: .vertexStage() has been renamed to .toVertexStage()."),Yt(...i)));const zp=N(([i])=>{const e=i.mul(.9478672986).add(.0521327014).pow(2.4),t=i.mul(.0773993808),s=i.lessThanEqual(.04045);return ne(e,t,s)}).setLayout({name:"sRGBTransferEOTF",type:"vec3",inputs:[{name:"color",type:"vec3"}]}),$p=N(([i])=>{const e=i.pow(.41666).mul(1.055).sub(.055),t=i.mul(12.92),s=i.lessThanEqual(.0031308);return ne(e,t,s)}).setLayout({name:"sRGBTransferOETF",type:"vec3",inputs:[{name:"color",type:"vec3"}]}),Ju="WorkingColorSpace",KT="OutputColorSpace";class el extends Ce{static get type(){return"ColorSpaceNode"}constructor(e,t,s){super("vec4"),this.colorNode=e,this.source=t,this.target=s}resolveColorSpace(e,t){return t===Ju?Re.workingColorSpace:t===KT?e.context.outputColorSpace||e.renderer.outputColorSpace:t}setup(e){const{colorNode:t}=this,s=this.resolveColorSpace(e,this.source),n=this.resolveColorSpace(e,this.target);let r=t;return Re.enabled===!1||s===n||!s||!n||(Re.getTransfer(s)===K&&(r=W(zp(r.rgb),r.a)),Re.getPrimaries(s)!==Re.getPrimaries(n)&&(r=W(Xe(Re._getMatrix(new Pr,s,n)).mul(r.rgb),r.a)),Re.getTransfer(n)===K&&(r=W($p(r.rgb),r.a))),r}}const Wp=(i,e)=>E(new el(E(i),Ju,e)),go=(i,e)=>E(new el(E(i),e,Ju)),QT=(i,e,t)=>E(new el(E(i),e,t));A("workingToColorSpace",Wp);A("colorSpaceToWorking",go);let ZT=class extends rn{static get type(){return"ReferenceElementNode"}constructor(e,t){super(e,t),this.referenceNode=e,this.isReferenceElementNode=!0}getNodeType(){return this.referenceNode.uniformType}generate(e){const t=super.generate(e),s=this.referenceNode.getNodeType(),n=this.getNodeType();return e.format(t,s,n)}};class Hp extends k{static get type(){return"ReferenceBaseNode"}constructor(e,t,s=null,n=null){super(),this.property=e,this.uniformType=t,this.object=s,this.count=n,this.properties=e.split("."),this.reference=s,this.node=null,this.group=null,this.updateType=Y.OBJECT}setGroup(e){return this.group=e,this}element(e){return E(new ZT(this,E(e)))}setNodeType(e){const t=$(null,e);this.group!==null&&t.setGroup(this.group),this.node=t}getNodeType(e){return this.node===null&&(this.updateReference(e),this.updateValue()),this.node.getNodeType(e)}getValueFromReference(e=this.reference){const{properties:t}=this;let s=e[t[0]];for(let n=1;n<t.length;n++)s=s[t[n]];return s}updateReference(e){return this.reference=this.object!==null?this.object:e.object,this.reference}setup(){return this.updateValue(),this.node}update(){this.updateValue()}updateValue(){this.node===null&&this.setNodeType(this.uniformType);const e=this.getValueFromReference();Array.isArray(e)?this.node.array=e:this.node.value=e}}const JT=(i,e,t)=>E(new Hp(i,e,t));class ex extends Hp{static get type(){return"RendererReferenceNode"}constructor(e,t,s=null){super(e,t,s),this.renderer=s,this.setGroup(z)}updateReference(e){return this.reference=this.renderer!==null?this.renderer:e.renderer,this.reference}}const qp=(i,e,t=null)=>E(new ex(i,e,t));class tx extends Ce{static get type(){return"ToneMappingNode"}constructor(e,t=Xp,s=null){super("vec3"),this.toneMapping=e,this.exposureNode=t,this.colorNode=s}customCacheKey(){return Ui(this.toneMapping)}setup(e){const t=this.colorNode||e.context.color,s=this.toneMapping;if(s===wn)return t;let n=null;const r=e.renderer.library.getToneMappingFunction(s);return r!==null?n=W(r(t.rgb,this.exposureNode),t.a):(console.error("ToneMappingNode: Unsupported Tone Mapping configuration.",s),n=t),n}}const jp=(i,e,t)=>E(new tx(i,E(e),E(t))),Xp=qp("toneMappingExposure","float");A("toneMapping",(i,e,t)=>jp(e,t,i));class sx extends Au{static get type(){return"BufferAttributeNode"}constructor(e,t=null,s=0,n=0){super(e,t),this.isBufferNode=!0,this.bufferType=t,this.bufferStride=s,this.bufferOffset=n,this.usage=Ty,this.instanced=!1,this.attribute=null,this.global=!0,e&&e.isBufferAttribute===!0&&(this.attribute=e,this.usage=e.usage,this.instanced=e.isInstancedBufferAttribute)}getHash(e){if(this.bufferStride===0&&this.bufferOffset===0){let t=e.globalCache.getData(this.value);return t===void 0&&(t={node:this},e.globalCache.setData(this.value,t)),t.node.uuid}return this.uuid}getNodeType(e){return this.bufferType===null&&(this.bufferType=e.getTypeFromAttribute(this.attribute)),this.bufferType}setup(e){if(this.attribute!==null)return;const t=this.getNodeType(e),s=this.value,n=e.getTypeLength(t),r=this.bufferStride||n,o=this.bufferOffset,a=s.isInterleavedBuffer===!0?s:new xy(s,r),u=new by(a,n,o);a.setUsage(this.usage),this.attribute=u,this.attribute.isInstancedBufferAttribute=this.instanced}generate(e){const t=this.getNodeType(e),s=e.getBufferAttributeFromNode(this,t),n=e.getPropertyName(s);let r=null;return e.shaderStage==="vertex"||e.shaderStage==="compute"?(this.name=n,r=n):r=Yt(this).build(e,t),r}getInputType(){return"bufferAttribute"}setUsage(e){return this.usage=e,this.attribute&&this.attribute.isBufferAttribute===!0&&(this.attribute.usage=e),this}setInstanced(e){return this.instanced=e,this}}const Ur=(i,e=null,t=0,s=0)=>E(new sx(i,e,t,s)),Yp=(i,e=null,t=0,s=0)=>Ur(i,e,t,s).setUsage(xn),Wi=(i,e=null,t=0,s=0)=>Ur(i,e,t,s).setInstanced(!0),Wa=(i,e=null,t=0,s=0)=>Yp(i,e,t,s).setInstanced(!0);A("toAttribute",i=>Ur(i.value));class nx extends k{static get type(){return"ComputeNode"}constructor(e,t){super("void"),this.isComputeNode=!0,this.computeNode=e,this.workgroupSize=t,this.count=null,this.version=1,this.name="",this.updateBeforeType=Y.OBJECT,this.onInitFunction=null}setCount(e){return this.count=e,this}getCount(){return this.count}dispose(){this.dispatchEvent({type:"dispose"})}setName(e){return this.name=e,this}label(e){return console.warn('THREE.TSL: "label()" has been deprecated. Use "setName()" instead.'),this.setName(e)}onInit(e){return this.onInitFunction=e,this}updateBefore({renderer:e}){e.compute(this)}setup(e){const t=this.computeNode.build(e);if(t){const s=e.getNodeProperties(this);s.outputComputeNode=t.outputNode,t.outputNode=null}return t}generate(e,t){const{shaderStage:s}=e;if(s==="compute"){const n=this.computeNode.build(e,"void");n!==""&&e.addLineFlowCode(n,this)}else{const r=e.getNodeProperties(this).outputComputeNode;if(r)return r.build(e,t)}}}const tl=(i,e=[64])=>{(e.length===0||e.length>3)&&console.error("THREE.TSL: compute() workgroupSize must have 1, 2, or 3 elements");for(let t=0;t<e.length;t++){const s=e[t];(typeof s!="number"||s<=0||!Number.isInteger(s))&&console.error(`THREE.TSL: compute() workgroupSize element at index [ ${t} ] must be a positive integer`)}for(;e.length<3;)e.push(1);return E(new nx(E(i),e))},Kp=(i,e,t)=>tl(i,t).setCount(e);A("compute",Kp);A("computeKernel",tl);class rx extends k{static get type(){return"CacheNode"}constructor(e,t=!0){super(),this.node=e,this.parent=t,this.isCacheNode=!0}getNodeType(e){const t=e.getCache(),s=e.getCacheFromNode(this,this.parent);e.setCache(s);const n=this.node.getNodeType(e);return e.setCache(t),n}build(e,...t){const s=e.getCache(),n=e.getCacheFromNode(this,this.parent);e.setCache(n);const r=this.node.build(e,...t);return e.setCache(s),r}}const gr=(i,e)=>E(new rx(E(i),e));A("cache",gr);class ix extends k{static get type(){return"BypassNode"}constructor(e,t){super(),this.isBypassNode=!0,this.outputNode=e,this.callNode=t}getNodeType(e){return this.outputNode.getNodeType(e)}generate(e){const t=this.callNode.build(e,"void");return t!==""&&e.addLineFlowCode(t,this),this.outputNode.build(e)}}const Qp=q(ix).setParameterLength(2);A("bypass",Qp);class Zp extends k{static get type(){return"RemapNode"}constructor(e,t,s,n=g(0),r=g(1)){super(),this.node=e,this.inLowNode=t,this.inHighNode=s,this.outLowNode=n,this.outHighNode=r,this.doClamp=!0}setup(){const{node:e,inLowNode:t,inHighNode:s,outLowNode:n,outHighNode:r,doClamp:o}=this;let a=e.sub(t).div(s.sub(t));return o===!0&&(a=a.clamp()),a.mul(r.sub(n)).add(n)}}const Jp=q(Zp,null,null,{doClamp:!1}).setParameterLength(3,5),ef=q(Zp).setParameterLength(3,5);A("remap",Jp);A("remapClamp",ef);class vi extends k{static get type(){return"ExpressionNode"}constructor(e="",t="void"){super(t),this.snippet=e}generate(e,t){const s=this.getNodeType(e),n=this.snippet;if(s==="void")e.addLineFlowCode(n,this);else return e.format(n,s,t)}}const os=q(vi).setParameterLength(1,2),tf=i=>(i?ke(i,os("discard")):os("discard")).toStack(),ox=()=>os("return").toStack();A("discard",tf);class ax extends Ce{static get type(){return"RenderOutputNode"}constructor(e,t,s){super("vec4"),this.colorNode=e,this.toneMapping=t,this.outputColorSpace=s,this.isRenderOutputNode=!0}setup({context:e}){let t=this.colorNode||e.color;const s=(this.toneMapping!==null?this.toneMapping:e.toneMapping)||wn,n=(this.outputColorSpace!==null?this.outputColorSpace:e.outputColorSpace)||Pn;return s!==wn&&(t=t.toneMapping(s)),n!==Pn&&n!==Re.workingColorSpace&&(t=t.workingToColorSpace(n)),t}}const sf=(i,e=null,t=null)=>E(new ax(E(i),e,t));A("renderOutput",sf);class ux extends Ce{static get type(){return"DebugNode"}constructor(e,t=null){super(),this.node=e,this.callback=t}getNodeType(e){return this.node.getNodeType(e)}setup(e){return this.node.build(e)}analyze(e){return this.node.build(e)}generate(e){const t=this.callback,s=this.node.build(e),n="--- TSL debug - "+e.shaderStage+" shader ---",r="-".repeat(n.length);let o="";return o+="// #"+n+`#
`,o+=e.flow.code.replace(/^\t/mg,"")+`
`,o+="/* ... */ "+s+` /* ... */
`,o+="// #"+r+`#
`,t!==null?t(e,o):console.log(o),s}}const nf=(i,e=null)=>E(new ux(E(i),e)).toStack();A("debug",nf);function lx(i){console.warn("THREE.TSL: AddNodeElement has been removed in favor of tree-shaking. Trying add",i)}class rf extends k{static get type(){return"AttributeNode"}constructor(e,t=null){super(t),this.global=!0,this._attributeName=e}getHash(e){return this.getAttributeName(e)}getNodeType(e){let t=this.nodeType;if(t===null){const s=this.getAttributeName(e);if(e.hasGeometryAttribute(s)){const n=e.geometry.getAttribute(s);t=e.getTypeFromAttribute(n)}else t="float"}return t}setAttributeName(e){return this._attributeName=e,this}getAttributeName(){return this._attributeName}generate(e){const t=this.getAttributeName(e),s=this.getNodeType(e);if(e.hasGeometryAttribute(t)===!0){const r=e.geometry.getAttribute(t),o=e.getTypeFromAttribute(r),a=e.getAttribute(t,o);return e.shaderStage==="vertex"?e.format(a.name,o,s):Yt(this).build(e,s)}else return console.warn(`AttributeNode: Vertex attribute "${t}" not found on geometry.`),e.generateConst(s)}serialize(e){super.serialize(e),e.global=this.global,e._attributeName=this._attributeName}deserialize(e){super.deserialize(e),this.global=e.global,this._attributeName=e._attributeName}}const as=(i,e=null)=>E(new rf(i,e)),ce=(i=0)=>as("uv"+(i>0?i:""),"vec2");class cx extends k{static get type(){return"TextureSizeNode"}constructor(e,t=null){super("uvec2"),this.isTextureSizeNode=!0,this.textureNode=e,this.levelNode=t}generate(e,t){const s=this.textureNode.build(e,"property"),n=this.levelNode===null?"0":this.levelNode.build(e,"int");return e.format(`${e.getMethod("textureDimensions")}( ${s}, ${n} )`,this.getNodeType(e),t)}}const bs=q(cx).setParameterLength(1,2);class dx extends Fr{static get type(){return"MaxMipLevelNode"}constructor(e){super(0),this._textureNode=e,this.updateType=Y.FRAME}get textureNode(){return this._textureNode}get texture(){return this._textureNode.value}update(){const e=this.texture,t=e.images,s=t&&t.length>0?t[0]&&t[0].image||t[0]:e.image;if(s&&s.width!==void 0){const{width:n,height:r}=s;this.value=Math.log2(Math.max(n,r))}}}const sl=q(dx).setParameterLength(1),nl=new du;class Ht extends Fr{static get type(){return"TextureNode"}constructor(e=nl,t=null,s=null,n=null){super(e),this.isTextureNode=!0,this.uvNode=t,this.levelNode=s,this.biasNode=n,this.compareNode=null,this.depthNode=null,this.gradNode=null,this.offsetNode=null,this.sampler=!0,this.updateMatrix=!1,this.updateType=Y.NONE,this.referenceNode=null,this._value=e,this._matrixUniform=null,this.setUpdateMatrix(t===null)}set value(e){this.referenceNode?this.referenceNode.value=e:this._value=e}get value(){return this.referenceNode?this.referenceNode.value:this._value}getUniformHash(){return this.value.uuid}getNodeType(){return this.value.isDepthTexture===!0?"float":this.value.type===Fe?"uvec4":this.value.type===Ke?"ivec4":"vec4"}getInputType(){return"texture"}getDefaultUV(){return ce(this.value.channel)}updateReference(){return this.value}getTransformedUV(e){return this._matrixUniform===null&&(this._matrixUniform=$(this.value.matrix)),this._matrixUniform.mul(b(e,1)).xy}setUpdateMatrix(e){return this.updateMatrix=e,this.updateType=e?Y.OBJECT:Y.NONE,this}setupUV(e,t){const s=this.value;return e.isFlipY()&&(s.image instanceof ImageBitmap&&s.flipY===!0||s.isRenderTargetTexture===!0||s.isFramebufferTexture===!0||s.isDepthTexture===!0)&&(this.sampler?t=t.flipY():t=t.setY(_(bs(this,this.levelNode).y).sub(t.y).sub(1))),t}setup(e){const t=e.getNodeProperties(this);t.referenceNode=this.referenceNode;const s=this.value;if(!s||s.isTexture!==!0)throw new Error("THREE.TSL: `texture( value )` function expects a valid instance of THREE.Texture().");let n=this.uvNode;(n===null||e.context.forceUVContext===!0)&&e.context.getUV&&(n=e.context.getUV(this,e)),n||(n=this.getDefaultUV()),this.updateMatrix===!0&&(n=this.getTransformedUV(n)),n=this.setupUV(e,n);let r=this.levelNode;r===null&&e.context.getTextureLevel&&(r=e.context.getTextureLevel(this)),t.uvNode=n,t.levelNode=r,t.biasNode=this.biasNode,t.compareNode=this.compareNode,t.gradNode=this.gradNode,t.depthNode=this.depthNode,t.offsetNode=this.offsetNode}generateUV(e,t){return t.build(e,this.sampler===!0?"vec2":"ivec2")}generateOffset(e,t){return t.build(e,"ivec2")}generateSnippet(e,t,s,n,r,o,a,u,l){const c=this.value;let d;return n?d=e.generateTextureLevel(c,t,s,n,o,l):r?d=e.generateTextureBias(c,t,s,r,o,l):u?d=e.generateTextureGrad(c,t,s,u,o,l):a?d=e.generateTextureCompare(c,t,s,a,o,l):this.sampler===!1?d=e.generateTextureLoad(c,t,s,o,l):d=e.generateTexture(c,t,s,o,l),d}generate(e,t){const s=this.value,n=e.getNodeProperties(this),r=super.generate(e,"property");if(/^sampler/.test(t))return r+"_sampler";if(e.isReference(t))return r;{const o=e.getDataFromNode(this);let a=o.propertyName;if(a===void 0){const{uvNode:c,levelNode:d,biasNode:p,compareNode:f,depthNode:m,gradNode:y,offsetNode:x}=n,S=this.generateUV(e,c),R=d?d.build(e,"float"):null,C=p?p.build(e,"float"):null,D=m?m.build(e,"int"):null,P=f?f.build(e,"float"):null,F=y?[y[0].build(e,"vec2"),y[1].build(e,"vec2")]:null,B=x?this.generateOffset(e,x):null,V=e.getVarFromNode(this);a=e.getPropertyName(V);const G=this.generateSnippet(e,r,S,R,C,D,P,F,B);e.addLineFlowCode(`${a} = ${G}`,this),o.snippet=G,o.propertyName=a}let u=a;const l=this.getNodeType(e);return e.needsToWorkingColorSpace(s)&&(u=go(os(u,l),s.colorSpace).setup(e).build(e,l)),e.format(u,l,t)}}setSampler(e){return this.sampler=e,this}getSampler(){return this.sampler}uv(e){return console.warn("THREE.TextureNode: .uv() has been renamed. Use .sample() instead."),this.sample(e)}sample(e){const t=this.clone();return t.uvNode=E(e),t.referenceNode=this.getBase(),E(t)}load(e){return this.sample(e).setSampler(!1)}blur(e){const t=this.clone();t.biasNode=E(e).mul(sl(t)),t.referenceNode=this.getBase();const s=t.value;return t.generateMipmaps===!1&&(s&&s.generateMipmaps===!1||s.minFilter===wt||s.magFilter===wt)&&(console.warn("THREE.TSL: texture().blur() requires mipmaps and sampling. Use .generateMipmaps=true and .minFilter/.magFilter=THREE.LinearFilter in the Texture."),t.biasNode=null),E(t)}level(e){const t=this.clone();return t.levelNode=E(e),t.referenceNode=this.getBase(),E(t)}size(e){return bs(this,e)}bias(e){const t=this.clone();return t.biasNode=E(e),t.referenceNode=this.getBase(),E(t)}getBase(){return this.referenceNode?this.referenceNode.getBase():this}compare(e){const t=this.clone();return t.compareNode=E(e),t.referenceNode=this.getBase(),E(t)}grad(e,t){const s=this.clone();return s.gradNode=[E(e),E(t)],s.referenceNode=this.getBase(),E(s)}depth(e){const t=this.clone();return t.depthNode=E(e),t.referenceNode=this.getBase(),E(t)}offset(e){const t=this.clone();return t.offsetNode=E(e),t.referenceNode=this.getBase(),E(t)}serialize(e){super.serialize(e),e.value=this.value.toJSON(e.meta).uuid,e.sampler=this.sampler,e.updateMatrix=this.updateMatrix,e.updateType=this.updateType}deserialize(e){super.deserialize(e),this.value=e.meta.textures[e.value],this.sampler=e.sampler,this.updateMatrix=e.updateMatrix,this.updateType=e.updateType}update(){const e=this.value,t=this._matrixUniform;t!==null&&(t.value=e.matrix),e.matrixAutoUpdate===!0&&e.updateMatrix()}clone(){const e=new this.constructor(this.value,this.uvNode,this.levelNode,this.biasNode);return e.sampler=this.sampler,e.depthNode=this.depthNode,e.compareNode=this.compareNode,e.gradNode=this.gradNode,e.offsetNode=this.offsetNode,e}}const hx=q(Ht).setParameterLength(1,4).setName("texture"),Q=(i=nl,e=null,t=null,s=null)=>{let n;return i&&i.isTextureNode===!0?(n=E(i.clone()),n.referenceNode=i.getBase(),e!==null&&(n.uvNode=E(e)),t!==null&&(n.levelNode=E(t)),s!==null&&(n.biasNode=E(s))):n=hx(i,e,t,s),n},px=(i=nl)=>Q(i),ve=(...i)=>Q(...i).setSampler(!1),fx=i=>(i.isNode===!0?i:Q(i)).convert("sampler"),mx=i=>(i.isNode===!0?i:Q(i)).convert("samplerComparison");class rl extends Fr{static get type(){return"BufferNode"}constructor(e,t,s=0){super(e,t),this.isBufferNode=!0,this.bufferType=t,this.bufferCount=s}getElementType(e){return this.getNodeType(e)}getInputType(){return"buffer"}}const Ir=(i,e,t)=>E(new rl(i,e,t));class gx extends rn{static get type(){return"UniformArrayElementNode"}constructor(e,t){super(e,t),this.isArrayBufferElementNode=!0}generate(e){const t=super.generate(e),s=this.getNodeType(),n=this.node.getPaddedType();return e.format(t,n,s)}}class yx extends rl{static get type(){return"UniformArrayNode"}constructor(e,t=null){super(null),this.array=e,this.elementType=t===null?ys(e[0]):t,this.paddedType=this.getPaddedType(),this.updateType=Y.RENDER,this.isArrayBufferNode=!0}getNodeType(){return this.paddedType}getElementType(){return this.elementType}getPaddedType(){const e=this.elementType;let t="vec4";return e==="mat2"?t="mat2":/mat/.test(e)===!0?t="mat4":e.charAt(0)==="i"?t="ivec4":e.charAt(0)==="u"&&(t="uvec4"),t}update(){const{array:e,value:t}=this,s=this.elementType;if(s==="float"||s==="int"||s==="uint")for(let n=0;n<e.length;n++){const r=n*4;t[r]=e[n]}else if(s==="color")for(let n=0;n<e.length;n++){const r=n*4,o=e[n];t[r]=o.r,t[r+1]=o.g,t[r+2]=o.b||0}else if(s==="mat2")for(let n=0;n<e.length;n++){const r=n*4,o=e[n];t[r]=o.elements[0],t[r+1]=o.elements[1],t[r+2]=o.elements[2],t[r+3]=o.elements[3]}else if(s==="mat3")for(let n=0;n<e.length;n++){const r=n*16,o=e[n];t[r]=o.elements[0],t[r+1]=o.elements[1],t[r+2]=o.elements[2],t[r+4]=o.elements[3],t[r+5]=o.elements[4],t[r+6]=o.elements[5],t[r+8]=o.elements[6],t[r+9]=o.elements[7],t[r+10]=o.elements[8],t[r+15]=1}else if(s==="mat4")for(let n=0;n<e.length;n++){const r=n*16,o=e[n];for(let a=0;a<o.elements.length;a++)t[r+a]=o.elements[a]}else for(let n=0;n<e.length;n++){const r=n*4,o=e[n];t[r]=o.x,t[r+1]=o.y,t[r+2]=o.z||0,t[r+3]=o.w||0}}setup(e){const t=this.array.length,s=this.elementType;let n=Float32Array;const r=this.paddedType,o=e.getTypeLength(r);return s.charAt(0)==="i"&&(n=Int32Array),s.charAt(0)==="u"&&(n=Uint32Array),this.value=new n(t*o),this.bufferCount=t,this.bufferType=r,super.setup(e)}element(e){return E(new gx(this,E(e)))}}const qe=(i,e)=>E(new yx(i,e));class _x extends k{constructor(e){super("float"),this.name=e,this.isBuiltinNode=!0}generate(){return this.name}}const ls=q(_x).setParameterLength(1);let Hn,qn;class me extends k{static get type(){return"ScreenNode"}constructor(e){super(),this.scope=e,this._output=null,this.isViewportNode=!0}getNodeType(){return this.scope===me.DPR?"float":this.scope===me.VIEWPORT?"vec4":"vec2"}getUpdateType(){let e=Y.NONE;return(this.scope===me.SIZE||this.scope===me.VIEWPORT||this.scope===me.DPR)&&(e=Y.RENDER),this.updateType=e,e}update({renderer:e}){const t=e.getRenderTarget();this.scope===me.VIEWPORT?t!==null?qn.copy(t.viewport):(e.getViewport(qn),qn.multiplyScalar(e.getPixelRatio())):this.scope===me.DPR?this._output.value=e.getPixelRatio():t!==null?(Hn.width=t.width,Hn.height=t.height):e.getDrawingBufferSize(Hn)}setup(){const e=this.scope;let t=null;return e===me.SIZE?t=$(Hn||(Hn=new he)):e===me.VIEWPORT?t=$(qn||(qn=new _e)):e===me.DPR?t=$(1):t=M(Vr.div(tn)),this._output=t,t}generate(e){if(this.scope===me.COORDINATE){let t=e.getFragCoord();if(e.isFlipY()){const s=e.getNodeProperties(tn).outputNode.build(e);t=`${e.getType("vec2")}( ${t}.x, ${s}.y - ${t}.y )`}return t}return super.generate(e)}}me.COORDINATE="coordinate";me.VIEWPORT="viewport";me.SIZE="size";me.UV="uv";me.DPR="dpr";const of=U(me,me.DPR),ns=U(me,me.UV),tn=U(me,me.SIZE),Vr=U(me,me.COORDINATE),il=U(me,me.VIEWPORT),ol=il.zw,af=Vr.sub(il.xy),Tx=af.div(ol),xx=N(()=>(console.warn('THREE.TSL: "viewportResolution" is deprecated. Use "screenSize" instead.'),tn),"vec2").once()(),ws=$(0,"uint").setName("u_cameraIndex").setGroup(lo("cameraIndex")).toVarying("v_cameraIndex"),fs=$("float").setName("cameraNear").setGroup(z).onRenderUpdate(({camera:i})=>i.near),ms=$("float").setName("cameraFar").setGroup(z).onRenderUpdate(({camera:i})=>i.far),Gn=N(({camera:i})=>{let e;if(i.isArrayCamera&&i.cameras.length>0){const t=[];for(const n of i.cameras)t.push(n.projectionMatrix);e=qe(t).setGroup(z).setName("cameraProjectionMatrices").element(i.isMultiViewCamera?ls("gl_ViewID_OVR"):ws).toConst("cameraProjectionMatrix")}else e=$("mat4").setName("cameraProjectionMatrix").setGroup(z).onRenderUpdate(({camera:t})=>t.projectionMatrix);return e}).once()(),bx=N(({camera:i})=>{let e;if(i.isArrayCamera&&i.cameras.length>0){const t=[];for(const n of i.cameras)t.push(n.projectionMatrixInverse);e=qe(t).setGroup(z).setName("cameraProjectionMatricesInverse").element(i.isMultiViewCamera?ls("gl_ViewID_OVR"):ws).toConst("cameraProjectionMatrixInverse")}else e=$("mat4").setName("cameraProjectionMatrixInverse").setGroup(z).onRenderUpdate(({camera:t})=>t.projectionMatrixInverse);return e}).once()(),St=N(({camera:i})=>{let e;if(i.isArrayCamera&&i.cameras.length>0){const t=[];for(const n of i.cameras)t.push(n.matrixWorldInverse);e=qe(t).setGroup(z).setName("cameraViewMatrices").element(i.isMultiViewCamera?ls("gl_ViewID_OVR"):ws).toConst("cameraViewMatrix")}else e=$("mat4").setName("cameraViewMatrix").setGroup(z).onRenderUpdate(({camera:t})=>t.matrixWorldInverse);return e}).once()(),Nx=N(({camera:i})=>{let e;if(i.isArrayCamera&&i.cameras.length>0){const t=[];for(const n of i.cameras)t.push(n.matrixWorld);e=qe(t).setGroup(z).setName("cameraWorldMatrices").element(i.isMultiViewCamera?ls("gl_ViewID_OVR"):ws).toConst("cameraWorldMatrix")}else e=$("mat4").setName("cameraWorldMatrix").setGroup(z).onRenderUpdate(({camera:t})=>t.matrixWorld);return e}).once()(),Sx=N(({camera:i})=>{let e;if(i.isArrayCamera&&i.cameras.length>0){const t=[];for(const n of i.cameras)t.push(n.normalMatrix);e=qe(t).setGroup(z).setName("cameraNormalMatrices").element(i.isMultiViewCamera?ls("gl_ViewID_OVR"):ws).toConst("cameraNormalMatrix")}else e=$("mat3").setName("cameraNormalMatrix").setGroup(z).onRenderUpdate(({camera:t})=>t.normalMatrix);return e}).once()(),uf=N(({camera:i})=>{let e;if(i.isArrayCamera&&i.cameras.length>0){const t=[];for(let n=0,r=i.cameras.length;n<r;n++)t.push(new j);e=qe(t).setGroup(z).setName("cameraPositions").onRenderUpdate(({camera:n},r)=>{const o=n.cameras,a=r.array;for(let u=0,l=o.length;u<l;u++)a[u].setFromMatrixPosition(o[u].matrixWorld)}).element(i.isMultiViewCamera?ls("gl_ViewID_OVR"):ws).toConst("cameraPosition")}else e=$(new j).setName("cameraPosition").setGroup(z).onRenderUpdate(({camera:t},s)=>s.value.setFromMatrixPosition(t.matrixWorld));return e}).once()(),vx=N(({camera:i})=>{let e;if(i.isArrayCamera&&i.cameras.length>0){const t=[];for(const n of i.cameras)t.push(n.viewport);e=qe(t,"vec4").setGroup(z).setName("cameraViewports").element(ws).toConst("cameraViewport")}else e=W(0,0,tn.x,tn.y).toConst("cameraViewport");return e}).once()(),dc=new yy;class J extends k{static get type(){return"Object3DNode"}constructor(e,t=null){super(),this.scope=e,this.object3d=t,this.updateType=Y.OBJECT,this.uniformNode=new Fr(null)}getNodeType(){const e=this.scope;if(e===J.WORLD_MATRIX)return"mat4";if(e===J.POSITION||e===J.VIEW_POSITION||e===J.DIRECTION||e===J.SCALE)return"vec3";if(e===J.RADIUS)return"float"}update(e){const t=this.object3d,s=this.uniformNode,n=this.scope;if(n===J.WORLD_MATRIX)s.value=t.matrixWorld;else if(n===J.POSITION)s.value=s.value||new j,s.value.setFromMatrixPosition(t.matrixWorld);else if(n===J.SCALE)s.value=s.value||new j,s.value.setFromMatrixScale(t.matrixWorld);else if(n===J.DIRECTION)s.value=s.value||new j,t.getWorldDirection(s.value);else if(n===J.VIEW_POSITION){const r=e.camera;s.value=s.value||new j,s.value.setFromMatrixPosition(t.matrixWorld),s.value.applyMatrix4(r.matrixWorldInverse)}else if(n===J.RADIUS){const r=e.object.geometry;r.boundingSphere===null&&r.computeBoundingSphere(),dc.copy(r.boundingSphere).applyMatrix4(t.matrixWorld),s.value=dc.radius}}generate(e){const t=this.scope;return t===J.WORLD_MATRIX?this.uniformNode.nodeType="mat4":t===J.POSITION||t===J.VIEW_POSITION||t===J.DIRECTION||t===J.SCALE?this.uniformNode.nodeType="vec3":t===J.RADIUS&&(this.uniformNode.nodeType="float"),this.uniformNode.build(e)}serialize(e){super.serialize(e),e.scope=this.scope}deserialize(e){super.deserialize(e),this.scope=e.scope}}J.WORLD_MATRIX="worldMatrix";J.POSITION="position";J.SCALE="scale";J.VIEW_POSITION="viewPosition";J.DIRECTION="direction";J.RADIUS="radius";const Rx=q(J,J.DIRECTION).setParameterLength(1),Ax=q(J,J.WORLD_MATRIX).setParameterLength(1),lf=q(J,J.POSITION).setParameterLength(1),Ex=q(J,J.SCALE).setParameterLength(1),wx=q(J,J.VIEW_POSITION).setParameterLength(1),Cx=q(J,J.RADIUS).setParameterLength(1);class bt extends J{static get type(){return"ModelNode"}constructor(e){super(e)}update(e){this.object3d=e.object,super.update(e)}}const Mx=U(bt,bt.DIRECTION),gt=U(bt,bt.WORLD_MATRIX),Bx=U(bt,bt.POSITION),Px=U(bt,bt.SCALE),Fx=U(bt,bt.VIEW_POSITION),Lx=U(bt,bt.RADIUS),cf=$(new Pr).onObjectUpdate(({object:i},e)=>e.value.getNormalMatrix(i.matrixWorld)),Dx=$(new Ge).onObjectUpdate(({object:i},e)=>e.value.copy(i.matrixWorld).invert()),on=N(i=>i.renderer.overrideNodes.modelViewMatrix||df).once()().toVar("modelViewMatrix"),df=St.mul(gt),Ha=N(i=>(i.context.isHighPrecisionModelViewMatrix=!0,$("mat4").onObjectUpdate(({object:e,camera:t})=>e.modelViewMatrix.multiplyMatrices(t.matrixWorldInverse,e.matrixWorld)))).once()().toVar("highpModelViewMatrix"),qa=N(i=>{const e=i.context.isHighPrecisionModelViewMatrix;return $("mat3").onObjectUpdate(({object:t,camera:s})=>(e!==!0&&t.modelViewMatrix.multiplyMatrices(s.matrixWorldInverse,t.matrixWorld),t.normalMatrix.getNormalMatrix(t.modelViewMatrix)))}).once()().toVar("highpModelNormalViewMatrix"),Or=as("position","vec3"),Ae=Or.toVarying("positionLocal"),Hi=Or.toVarying("positionPrevious"),zt=N(i=>gt.mul(Ae).xyz.toVarying(i.getSubBuildProperty("v_positionWorld")),"vec3").once(["POSITION"])(),al=N(()=>Ae.transformDirection(gt).toVarying("v_positionWorldDirection").normalize().toVar("positionWorldDirection"),"vec3").once(["POSITION"])(),Ee=N(i=>i.context.setupPositionView().toVarying("v_positionView"),"vec3").once(["POSITION"])(),Te=Ee.negate().toVarying("v_positionViewDirection").normalize().toVar("positionViewDirection");class Ux extends k{static get type(){return"FrontFacingNode"}constructor(){super("bool"),this.isFrontFacingNode=!0}generate(e){if(e.shaderStage!=="fragment")return"true";const{material:t}=e;return t.side===nt?"false":e.getFrontFacing()}}const hf=U(Ux),ul=g(hf).mul(2).sub(1),kn=N(([i],{material:e})=>{const t=e.side;return t===nt?i=i.mul(-1):t===Xs&&(i=i.mul(ul)),i}),yo=as("normal","vec3"),it=N(i=>i.geometry.hasAttribute("normal")===!1?(console.warn('THREE.TSL: Vertex attribute "normal" not found on geometry.'),b(0,1,0)):yo,"vec3").once()().toVar("normalLocal"),pf=Ee.dFdx().cross(Ee.dFdy()).normalize().toVar("normalFlat"),Ln=N(i=>{let e;return i.material.flatShading===!0?e=pf:e=ll(it).toVarying("v_normalViewGeometry").normalize(),e},"vec3").once()().toVar("normalViewGeometry"),ff=N(i=>{let e=Ln.transformDirection(St);return i.material.flatShading!==!0&&(e=e.toVarying("v_normalWorldGeometry")),e.normalize().toVar("normalWorldGeometry")},"vec3").once()(),ue=N(({subBuildFn:i,material:e,context:t})=>{let s;return i==="NORMAL"||i==="VERTEX"?(s=Ln,e.flatShading!==!0&&(s=kn(s))):s=t.setupNormal().context({getUV:null}),s},"vec3").once(["NORMAL","VERTEX"])().toVar("normalView"),Cs=ue.transformDirection(St).toVar("normalWorld"),qs=N(({subBuildFn:i,context:e})=>{let t;return i==="NORMAL"||i==="VERTEX"?t=ue:t=e.setupClearcoatNormal().context({getUV:null}),t},"vec3").once(["NORMAL","VERTEX"])().toVar("clearcoatNormalView"),mf=N(([i,e=gt])=>{const t=Xe(e),s=i.div(b(t[0].dot(t[0]),t[1].dot(t[1]),t[2].dot(t[2])));return t.mul(s).xyz}),ll=N(([i],e)=>{const t=e.renderer.overrideNodes.modelNormalViewMatrix;if(t!==null)return t.transformDirection(i);const s=cf.mul(i);return St.transformDirection(s)}),Ix=N(()=>(console.warn('THREE.TSL: "transformedNormalView" is deprecated. Use "normalView" instead.'),ue)).once(["NORMAL","VERTEX"])(),Vx=N(()=>(console.warn('THREE.TSL: "transformedNormalWorld" is deprecated. Use "normalWorld" instead.'),Cs)).once(["NORMAL","VERTEX"])(),Ox=N(()=>(console.warn('THREE.TSL: "transformedClearcoatNormalView" is deprecated. Use "clearcoatNormalView" instead.'),qs)).once(["NORMAL","VERTEX"])(),hc=new Rd,Uo=new Ge,gf=$(0).onReference(({material:i})=>i).onObjectUpdate(({material:i})=>i.refractionRatio),Ri=$(1).onReference(({material:i})=>i).onObjectUpdate(function({material:i,scene:e}){return i.envMap?i.envMapIntensity:e.environmentIntensity}),cl=$(new Ge).onReference(function(i){return i.material}).onObjectUpdate(function({material:i,scene:e}){const t=e.environment!==null&&i.envMap===null?e.environmentRotation:i.envMapRotation;return t?(hc.copy(t),Uo.makeRotationFromEuler(hc)):Uo.identity(),Uo}),yf=Te.negate().reflect(ue),_f=Te.negate().refract(ue,gf),Tf=yf.transformDirection(St).toVar("reflectVector"),xf=_f.transformDirection(St).toVar("reflectVector"),bf=new hu;class Gx extends Ht{static get type(){return"CubeTextureNode"}constructor(e,t=null,s=null,n=null){super(e,t,s,n),this.isCubeTextureNode=!0}getInputType(){return"cubeTexture"}getDefaultUV(){const e=this.value;return e.mapping===Mi?Tf:e.mapping===Bi?xf:(console.error('THREE.CubeTextureNode: Mapping "%s" not supported.',e.mapping),b(0,0,0))}setUpdateMatrix(){}setupUV(e,t){const s=this.value;return(e.renderer.coordinateSystem===Vn||!s.isRenderTargetTexture)&&(t=b(t.x.negate(),t.yz)),cl.mul(t)}generateUV(e,t){return t.build(e,"vec3")}}const dl=q(Gx).setParameterLength(1,4).setName("cubeTexture"),Dn=(i=bf,e=null,t=null,s=null)=>{let n;return i&&i.isCubeTextureNode===!0?(n=E(i.clone()),n.referenceNode=i,e!==null&&(n.uvNode=E(e)),t!==null&&(n.levelNode=E(t)),s!==null&&(n.biasNode=E(s))):n=dl(i,e,t,s),n},kx=(i=bf)=>dl(i);class zx extends rn{static get type(){return"ReferenceElementNode"}constructor(e,t){super(e,t),this.referenceNode=e,this.isReferenceElementNode=!0}getNodeType(){return this.referenceNode.uniformType}generate(e){const t=super.generate(e),s=this.referenceNode.getNodeType(),n=this.getNodeType();return e.format(t,s,n)}}class _o extends k{static get type(){return"ReferenceNode"}constructor(e,t,s=null,n=null){super(),this.property=e,this.uniformType=t,this.object=s,this.count=n,this.properties=e.split("."),this.reference=s,this.node=null,this.group=null,this.name=null,this.updateType=Y.OBJECT}element(e){return E(new zx(this,E(e)))}setGroup(e){return this.group=e,this}setName(e){return this.name=e,this}label(e){return console.warn('THREE.TSL: "label()" has been deprecated. Use "setName()" instead.'),this.setName(e)}setNodeType(e){let t=null;this.count!==null?t=Ir(null,e,this.count):Array.isArray(this.getValueFromReference())?t=qe(null,e):e==="texture"?t=Q(null):e==="cubeTexture"?t=Dn(null):t=$(null,e),this.group!==null&&t.setGroup(this.group),this.name!==null&&t.setName(this.name),this.node=t}getNodeType(e){return this.node===null&&(this.updateReference(e),this.updateValue()),this.node.getNodeType(e)}getValueFromReference(e=this.reference){const{properties:t}=this;let s=e[t[0]];for(let n=1;n<t.length;n++)s=s[t[n]];return s}updateReference(e){return this.reference=this.object!==null?this.object:e.object,this.reference}setup(){return this.updateValue(),this.node}update(){this.updateValue()}updateValue(){this.node===null&&this.setNodeType(this.uniformType);const e=this.getValueFromReference();Array.isArray(e)?this.node.array=e:this.node.value=e}}const fe=(i,e,t)=>E(new _o(i,e,t)),ja=(i,e,t,s)=>E(new _o(i,e,s,t));class $x extends _o{static get type(){return"MaterialReferenceNode"}constructor(e,t,s=null){super(e,t,s),this.material=s,this.isMaterialReferenceNode=!0}updateReference(e){return this.reference=this.material!==null?this.material:e.material,this.reference}}const ts=(i,e,t=null)=>E(new $x(i,e,t)),Nf=ce(),Wx=Ee.dFdx(),Hx=Ee.dFdy(),Sf=Nf.dFdx(),vf=Nf.dFdy(),Rf=ue,Af=Hx.cross(Rf),Ef=Rf.cross(Wx),Xa=Af.mul(Sf.x).add(Ef.mul(vf.x)),Ya=Af.mul(Sf.y).add(Ef.mul(vf.y)),pc=Xa.dot(Xa).max(Ya.dot(Ya)),wf=pc.equal(0).select(0,pc.inverseSqrt()),qx=Xa.mul(wf).toVar("tangentViewFrame"),jx=Ya.mul(wf).toVar("bitangentViewFrame"),To=N(i=>(i.geometry.hasAttribute("tangent")===!1&&i.geometry.computeTangents(),as("tangent","vec4")))(),Gr=To.xyz.toVar("tangentLocal"),xo=N(({subBuildFn:i,geometry:e,material:t})=>{let s;return i==="VERTEX"||e.hasAttribute("tangent")?s=on.mul(W(Gr,0)).xyz.toVarying("v_tangentView").normalize():s=qx,t.flatShading!==!0&&(s=kn(s)),s},"vec3").once(["NORMAL","VERTEX"])().toVar("tangentView"),Cf=xo.transformDirection(St).toVarying("v_tangentWorld").normalize().toVar("tangentWorld"),bo=N(([i,e],{subBuildFn:t,material:s})=>{let n=i.mul(To.w).xyz;return t==="NORMAL"&&s.flatShading!==!0&&(n=n.toVarying(e)),n}).once(["NORMAL"]),Xx=bo(yo.cross(To),"v_bitangentGeometry").normalize().toVar("bitangentGeometry"),Yx=bo(it.cross(Gr),"v_bitangentLocal").normalize().toVar("bitangentLocal"),Mf=N(({subBuildFn:i,geometry:e,material:t})=>{let s;return i==="VERTEX"||e.hasAttribute("tangent")?s=bo(ue.cross(xo),"v_bitangentView").normalize():s=jx,t.flatShading!==!0&&(s=kn(s)),s},"vec3").once(["NORMAL","VERTEX"])().toVar("bitangentView"),Kx=bo(Cs.cross(Cf),"v_bitangentWorld").normalize().toVar("bitangentWorld"),js=Xe(xo,Mf,ue).toVar("TBNViewMatrix"),Bf=Te.mul(js),Qx=(i,e)=>i.sub(Bf.mul(e)),Pf=N(()=>{let i=Js.cross(Te);return i=i.cross(Js).normalize(),i=ne(i,ue,ps.mul(Vt.oneMinus()).oneMinus().pow2().pow2()).normalize(),i}).once()();class Zx extends Ce{static get type(){return"NormalMapNode"}constructor(e,t=null){super("vec3"),this.node=e,this.scaleNode=t,this.normalMapType=Yl}setup({material:e}){const{normalMapType:t,scaleNode:s}=this;let n=this.node.mul(2).sub(1);if(s!==null){let o=s;e.flatShading===!0&&(o=kn(o)),n=b(n.xy.mul(o),n.z)}let r=null;return t===_y?r=ll(n):t===Yl?r=js.mul(n).normalize():(console.error(`THREE.NodeMaterial: Unsupported normal map type: ${t}`),r=ue),r}}const Ka=q(Zx).setParameterLength(1,2),Jx=N(({textureNode:i,bumpScale:e})=>{const t=n=>i.cache().context({getUV:r=>n(r.uvNode||ce()),forceUVContext:!0}),s=g(t(n=>n));return M(g(t(n=>n.add(n.dFdx()))).sub(s),g(t(n=>n.add(n.dFdy()))).sub(s)).mul(e)}),eb=N(i=>{const{surf_pos:e,surf_norm:t,dHdxy:s}=i,n=e.dFdx().normalize(),r=e.dFdy().normalize(),o=t,a=r.cross(o),u=o.cross(n),l=n.dot(a).mul(ul),c=l.sign().mul(s.x.mul(a).add(s.y.mul(u)));return l.abs().mul(t).sub(c).normalize()});class tb extends Ce{static get type(){return"BumpMapNode"}constructor(e,t=null){super("vec3"),this.textureNode=e,this.scaleNode=t}setup(){const e=this.scaleNode!==null?this.scaleNode:1,t=Jx({textureNode:this.textureNode,bumpScale:e});return eb({surf_pos:Ee,surf_norm:ue,dHdxy:t})}}const hl=q(tb).setParameterLength(1,2),fc=new Map;class w extends k{static get type(){return"MaterialNode"}constructor(e){super(),this.scope=e}getCache(e,t){let s=fc.get(e);return s===void 0&&(s=ts(e,t),fc.set(e,s)),s}getFloat(e){return this.getCache(e,"float")}getColor(e){return this.getCache(e,"color")}getTexture(e){return this.getCache(e==="map"?"map":e+"Map","texture")}setup(e){const t=e.context.material,s=this.scope;let n=null;if(s===w.COLOR){const r=t.color!==void 0?this.getColor(s):b();t.map&&t.map.isTexture===!0?n=r.mul(this.getTexture("map")):n=r}else if(s===w.OPACITY){const r=this.getFloat(s);t.alphaMap&&t.alphaMap.isTexture===!0?n=r.mul(this.getTexture("alpha")):n=r}else if(s===w.SPECULAR_STRENGTH)t.specularMap&&t.specularMap.isTexture===!0?n=this.getTexture("specular").r:n=g(1);else if(s===w.SPECULAR_INTENSITY){const r=this.getFloat(s);t.specularIntensityMap&&t.specularIntensityMap.isTexture===!0?n=r.mul(this.getTexture(s).a):n=r}else if(s===w.SPECULAR_COLOR){const r=this.getColor(s);t.specularColorMap&&t.specularColorMap.isTexture===!0?n=r.mul(this.getTexture(s).rgb):n=r}else if(s===w.ROUGHNESS){const r=this.getFloat(s);t.roughnessMap&&t.roughnessMap.isTexture===!0?n=r.mul(this.getTexture(s).g):n=r}else if(s===w.METALNESS){const r=this.getFloat(s);t.metalnessMap&&t.metalnessMap.isTexture===!0?n=r.mul(this.getTexture(s).b):n=r}else if(s===w.EMISSIVE){const r=this.getFloat("emissiveIntensity"),o=this.getColor(s).mul(r);t.emissiveMap&&t.emissiveMap.isTexture===!0?n=o.mul(this.getTexture(s)):n=o}else if(s===w.NORMAL)t.normalMap?(n=Ka(this.getTexture("normal"),this.getCache("normalScale","vec2")),n.normalMapType=t.normalMapType):t.bumpMap?n=hl(this.getTexture("bump").r,this.getFloat("bumpScale")):n=ue;else if(s===w.CLEARCOAT){const r=this.getFloat(s);t.clearcoatMap&&t.clearcoatMap.isTexture===!0?n=r.mul(this.getTexture(s).r):n=r}else if(s===w.CLEARCOAT_ROUGHNESS){const r=this.getFloat(s);t.clearcoatRoughnessMap&&t.clearcoatRoughnessMap.isTexture===!0?n=r.mul(this.getTexture(s).r):n=r}else if(s===w.CLEARCOAT_NORMAL)t.clearcoatNormalMap?n=Ka(this.getTexture(s),this.getCache(s+"Scale","vec2")):n=ue;else if(s===w.SHEEN){const r=this.getColor("sheenColor").mul(this.getFloat("sheen"));t.sheenColorMap&&t.sheenColorMap.isTexture===!0?n=r.mul(this.getTexture("sheenColor").rgb):n=r}else if(s===w.SHEEN_ROUGHNESS){const r=this.getFloat(s);t.sheenRoughnessMap&&t.sheenRoughnessMap.isTexture===!0?n=r.mul(this.getTexture(s).a):n=r,n=n.clamp(.07,1)}else if(s===w.ANISOTROPY)if(t.anisotropyMap&&t.anisotropyMap.isTexture===!0){const r=this.getTexture(s);n=oo(yn.x,yn.y,yn.y.negate(),yn.x).mul(r.rg.mul(2).sub(M(1)).normalize().mul(r.b))}else n=yn;else if(s===w.IRIDESCENCE_THICKNESS){const r=fe("1","float",t.iridescenceThicknessRange);if(t.iridescenceThicknessMap){const o=fe("0","float",t.iridescenceThicknessRange);n=r.sub(o).mul(this.getTexture(s).g).add(o)}else n=r}else if(s===w.TRANSMISSION){const r=this.getFloat(s);t.transmissionMap?n=r.mul(this.getTexture(s).r):n=r}else if(s===w.THICKNESS){const r=this.getFloat(s);t.thicknessMap?n=r.mul(this.getTexture(s).g):n=r}else if(s===w.IOR)n=this.getFloat(s);else if(s===w.LIGHT_MAP)n=this.getTexture(s).rgb.mul(this.getFloat("lightMapIntensity"));else if(s===w.AO)n=this.getTexture(s).r.sub(1).mul(this.getFloat("aoMapIntensity")).add(1);else if(s===w.LINE_DASH_OFFSET)n=t.dashOffset?this.getFloat(s):g(0);else{const r=this.getNodeType(e);n=this.getCache(s,r)}return n}}w.ALPHA_TEST="alphaTest";w.COLOR="color";w.OPACITY="opacity";w.SHININESS="shininess";w.SPECULAR="specular";w.SPECULAR_STRENGTH="specularStrength";w.SPECULAR_INTENSITY="specularIntensity";w.SPECULAR_COLOR="specularColor";w.REFLECTIVITY="reflectivity";w.ROUGHNESS="roughness";w.METALNESS="metalness";w.NORMAL="normal";w.CLEARCOAT="clearcoat";w.CLEARCOAT_ROUGHNESS="clearcoatRoughness";w.CLEARCOAT_NORMAL="clearcoatNormal";w.EMISSIVE="emissive";w.ROTATION="rotation";w.SHEEN="sheen";w.SHEEN_ROUGHNESS="sheenRoughness";w.ANISOTROPY="anisotropy";w.IRIDESCENCE="iridescence";w.IRIDESCENCE_IOR="iridescenceIOR";w.IRIDESCENCE_THICKNESS="iridescenceThickness";w.IOR="ior";w.TRANSMISSION="transmission";w.THICKNESS="thickness";w.ATTENUATION_DISTANCE="attenuationDistance";w.ATTENUATION_COLOR="attenuationColor";w.LINE_SCALE="scale";w.LINE_DASH_SIZE="dashSize";w.LINE_GAP_SIZE="gapSize";w.LINE_WIDTH="linewidth";w.LINE_DASH_OFFSET="dashOffset";w.POINT_SIZE="size";w.DISPERSION="dispersion";w.LIGHT_MAP="light";w.AO="ao";const Ff=U(w,w.ALPHA_TEST),Lf=U(w,w.COLOR),Df=U(w,w.SHININESS),Uf=U(w,w.EMISSIVE),pl=U(w,w.OPACITY),If=U(w,w.SPECULAR),Qa=U(w,w.SPECULAR_INTENSITY),Vf=U(w,w.SPECULAR_COLOR),yr=U(w,w.SPECULAR_STRENGTH),Ai=U(w,w.REFLECTIVITY),Of=U(w,w.ROUGHNESS),Gf=U(w,w.METALNESS),kf=U(w,w.NORMAL),zf=U(w,w.CLEARCOAT),$f=U(w,w.CLEARCOAT_ROUGHNESS),Wf=U(w,w.CLEARCOAT_NORMAL),Hf=U(w,w.ROTATION),qf=U(w,w.SHEEN),jf=U(w,w.SHEEN_ROUGHNESS),Xf=U(w,w.ANISOTROPY),Yf=U(w,w.IRIDESCENCE),Kf=U(w,w.IRIDESCENCE_IOR),Qf=U(w,w.IRIDESCENCE_THICKNESS),Zf=U(w,w.TRANSMISSION),Jf=U(w,w.THICKNESS),em=U(w,w.IOR),tm=U(w,w.ATTENUATION_DISTANCE),sm=U(w,w.ATTENUATION_COLOR),nm=U(w,w.LINE_SCALE),rm=U(w,w.LINE_DASH_SIZE),im=U(w,w.LINE_GAP_SIZE),sb=U(w,w.LINE_WIDTH),om=U(w,w.LINE_DASH_OFFSET),am=U(w,w.POINT_SIZE),um=U(w,w.DISPERSION),fl=U(w,w.LIGHT_MAP),lm=U(w,w.AO),yn=$(new he).onReference(function(i){return i.material}).onRenderUpdate(function({material:i}){this.value.set(i.anisotropy*Math.cos(i.anisotropyRotation),i.anisotropy*Math.sin(i.anisotropyRotation))}),ml=N(i=>i.context.setupModelViewProjection(),"vec4").once()().toVarying("v_modelViewProjection");class xe extends k{static get type(){return"IndexNode"}constructor(e){super("uint"),this.scope=e,this.isIndexNode=!0}generate(e){const t=this.getNodeType(e),s=this.scope;let n;if(s===xe.VERTEX)n=e.getVertexIndex();else if(s===xe.INSTANCE)n=e.getInstanceIndex();else if(s===xe.DRAW)n=e.getDrawIndex();else if(s===xe.INVOCATION_LOCAL)n=e.getInvocationLocalIndex();else if(s===xe.INVOCATION_SUBGROUP)n=e.getInvocationSubgroupIndex();else if(s===xe.SUBGROUP)n=e.getSubgroupIndex();else throw new Error("THREE.IndexNode: Unknown scope: "+s);let r;return e.shaderStage==="vertex"||e.shaderStage==="compute"?r=n:r=Yt(this).build(e,t),r}}xe.VERTEX="vertex";xe.INSTANCE="instance";xe.SUBGROUP="subgroup";xe.INVOCATION_LOCAL="invocationLocal";xe.INVOCATION_SUBGROUP="invocationSubgroup";xe.DRAW="draw";const cm=U(xe,xe.VERTEX),Ns=U(xe,xe.INSTANCE),nb=U(xe,xe.SUBGROUP),rb=U(xe,xe.INVOCATION_SUBGROUP),ib=U(xe,xe.INVOCATION_LOCAL),dm=U(xe,xe.DRAW);class hm extends k{static get type(){return"InstanceNode"}constructor(e,t,s=null){super("void"),this.count=e,this.instanceMatrix=t,this.instanceColor=s,this.instanceMatrixNode=null,this.instanceColorNode=null,this.updateType=Y.FRAME,this.buffer=null,this.bufferColor=null}setup(e){const{instanceMatrix:t,instanceColor:s}=this,{count:n}=t;let{instanceMatrixNode:r,instanceColorNode:o}=this;if(r===null){if(n<=1e3)r=Ir(t.array,"mat4",Math.max(n,1)).element(Ns);else{const u=new Ny(t.array,16,1);this.buffer=u;const l=t.usage===xn?Wa:Wi,c=[l(u,"vec4",16,0),l(u,"vec4",16,4),l(u,"vec4",16,8),l(u,"vec4",16,12)];r=Zs(...c)}this.instanceMatrixNode=r}if(s&&o===null){const u=new En(s.array,3),l=s.usage===xn?Wa:Wi;this.bufferColor=u,o=b(l(u,"vec3",3,0)),this.instanceColorNode=o}const a=r.mul(Ae).xyz;if(Ae.assign(a),e.hasGeometryAttribute("normal")){const u=mf(it,r);it.assign(u)}this.instanceColorNode!==null&&Ar("vec3","vInstanceColor").assign(this.instanceColorNode)}update(){this.instanceMatrix.usage!==xn&&this.buffer!==null&&this.instanceMatrix.version!==this.buffer.version&&(this.buffer.version=this.instanceMatrix.version),this.instanceColor&&this.instanceColor.usage!==xn&&this.bufferColor!==null&&this.instanceColor.version!==this.bufferColor.version&&(this.bufferColor.version=this.instanceColor.version)}}const ob=q(hm).setParameterLength(2,3);class ab extends hm{static get type(){return"InstancedMeshNode"}constructor(e){const{count:t,instanceMatrix:s,instanceColor:n}=e;super(t,s,n),this.instancedMesh=e}}const pm=q(ab).setParameterLength(1);class ub extends k{static get type(){return"BatchNode"}constructor(e){super("void"),this.batchMesh=e,this.batchingIdNode=null}setup(e){this.batchingIdNode===null&&(e.getDrawIndex()===null?this.batchingIdNode=Ns:this.batchingIdNode=dm);const s=N(([m])=>{const y=_(bs(ve(this.batchMesh._indirectTexture),0).x),x=_(m).mod(y),S=_(m).div(y);return ve(this.batchMesh._indirectTexture,Ie(x,S)).x}).setLayout({name:"getIndirectIndex",type:"uint",inputs:[{name:"id",type:"int"}]})(_(this.batchingIdNode)),n=this.batchMesh._matricesTexture,r=_(bs(ve(n),0).x),o=g(s).mul(4).toInt().toVar(),a=o.mod(r),u=o.div(r),l=Zs(ve(n,Ie(a,u)),ve(n,Ie(a.add(1),u)),ve(n,Ie(a.add(2),u)),ve(n,Ie(a.add(3),u))),c=this.batchMesh._colorsTexture;if(c!==null){const y=N(([x])=>{const S=_(bs(ve(c),0).x),R=x,C=R.mod(S),D=R.div(S);return ve(c,Ie(C,D)).rgb}).setLayout({name:"getBatchingColor",type:"vec3",inputs:[{name:"id",type:"int"}]})(s);Ar("vec3","vBatchColor").assign(y)}const d=Xe(l);Ae.assign(l.mul(Ae));const p=it.div(b(d[0].dot(d[0]),d[1].dot(d[1]),d[2].dot(d[2]))),f=d.mul(p).xyz;it.assign(f),e.hasGeometryAttribute("tangent")&&Gr.mulAssign(d)}}const fm=q(ub).setParameterLength(1);class lb extends rn{static get type(){return"StorageArrayElementNode"}constructor(e,t){super(e,t),this.isStorageArrayElementNode=!0}set storageBufferNode(e){this.node=e}get storageBufferNode(){return this.node}getMemberType(e,t){const s=this.storageBufferNode.structTypeNode;return s?s.getMemberType(e,t):"void"}setup(e){return e.isAvailable("storageBuffer")===!1&&this.node.isPBO===!0&&e.setupPBO(this.node),super.setup(e)}generate(e,t){let s;const n=e.context.assign;if(e.isAvailable("storageBuffer")===!1?this.node.isPBO===!0&&n!==!0&&(this.node.value.isInstancedBufferAttribute||e.shaderStage!=="compute")?s=e.generatePBO(this):s=this.node.build(e):s=super.generate(e),n!==!0){const r=this.getNodeType(e);s=e.format(s,r,t)}return s}}const cb=q(lb).setParameterLength(2);class db extends rl{static get type(){return"StorageBufferNode"}constructor(e,t=null,s=0){let n,r=null;t&&t.isStruct?(n="struct",r=t.layout,(e.isStorageBufferAttribute||e.isStorageInstancedBufferAttribute)&&(s=e.count)):t===null&&(e.isStorageBufferAttribute||e.isStorageInstancedBufferAttribute)?(n=gh(e.itemSize),s=e.count):n=t,super(e,n,s),this.isStorageBufferNode=!0,this.structTypeNode=r,this.access=$e.READ_WRITE,this.isAtomic=!1,this.isPBO=!1,this._attribute=null,this._varying=null,this.global=!0,e.isStorageBufferAttribute!==!0&&e.isStorageInstancedBufferAttribute!==!0&&(e.isInstancedBufferAttribute?e.isStorageInstancedBufferAttribute=!0:e.isStorageBufferAttribute=!0)}getHash(e){if(this.bufferCount===0){let t=e.globalCache.getData(this.value);return t===void 0&&(t={node:this},e.globalCache.setData(this.value,t)),t.node.uuid}return this.uuid}getInputType(){return this.value.isIndirectStorageBufferAttribute?"indirectStorageBuffer":"storageBuffer"}element(e){return cb(this,e)}setPBO(e){return this.isPBO=e,this}getPBO(){return this.isPBO}setAccess(e){return this.access=e,this}toReadOnly(){return this.setAccess($e.READ_ONLY)}setAtomic(e){return this.isAtomic=e,this}toAtomic(){return this.setAtomic(!0)}getAttributeData(){return this._attribute===null&&(this._attribute=Ur(this.value),this._varying=Yt(this._attribute)),{attribute:this._attribute,varying:this._varying}}getNodeType(e){if(this.structTypeNode!==null)return this.structTypeNode.getNodeType(e);if(e.isAvailable("storageBuffer")||e.isAvailable("indirectStorageBuffer"))return super.getNodeType(e);const{attribute:t}=this.getAttributeData();return t.getNodeType(e)}getMemberType(e,t){return this.structTypeNode!==null?this.structTypeNode.getMemberType(e,t):"void"}generate(e){if(this.structTypeNode!==null&&this.structTypeNode.build(e),e.isAvailable("storageBuffer")||e.isAvailable("indirectStorageBuffer"))return super.generate(e);const{attribute:t,varying:s}=this.getAttributeData(),n=s.build(e);return e.registerTransform(n,t),n}}const en=(i,e=null,t=0)=>E(new db(i,e,t)),hb=(i,e,t)=>(console.warn('THREE.TSL: "storageObject()" is deprecated. Use "storage().setPBO( true )" instead.'),en(i,e,t).setPBO(!0)),mc=new WeakMap;class mm extends k{static get type(){return"SkinningNode"}constructor(e){super("void"),this.skinnedMesh=e,this.updateType=Y.OBJECT,this.skinIndexNode=as("skinIndex","uvec4"),this.skinWeightNode=as("skinWeight","vec4"),this.bindMatrixNode=fe("bindMatrix","mat4"),this.bindMatrixInverseNode=fe("bindMatrixInverse","mat4"),this.boneMatricesNode=ja("skeleton.boneMatrices","mat4",e.skeleton.bones.length),this.positionNode=Ae,this.toPositionNode=Ae,this.previousBoneMatricesNode=null}getSkinnedPosition(e=this.boneMatricesNode,t=this.positionNode){const{skinIndexNode:s,skinWeightNode:n,bindMatrixNode:r,bindMatrixInverseNode:o}=this,a=e.element(s.x),u=e.element(s.y),l=e.element(s.z),c=e.element(s.w),d=r.mul(t),p=Be(a.mul(n.x).mul(d),u.mul(n.y).mul(d),l.mul(n.z).mul(d),c.mul(n.w).mul(d));return o.mul(p).xyz}getSkinnedNormal(e=this.boneMatricesNode,t=it){const{skinIndexNode:s,skinWeightNode:n,bindMatrixNode:r,bindMatrixInverseNode:o}=this,a=e.element(s.x),u=e.element(s.y),l=e.element(s.z),c=e.element(s.w);let d=Be(n.x.mul(a),n.y.mul(u),n.z.mul(l),n.w.mul(c));return d=o.mul(d).mul(r),d.transformDirection(t).xyz}getPreviousSkinnedPosition(e){const t=e.object;return this.previousBoneMatricesNode===null&&(t.skeleton.previousBoneMatrices=new Float32Array(t.skeleton.boneMatrices),this.previousBoneMatricesNode=ja("skeleton.previousBoneMatrices","mat4",t.skeleton.bones.length)),this.getSkinnedPosition(this.previousBoneMatricesNode,Hi)}needsPreviousBoneMatrices(e){const t=e.renderer.getMRT();return t&&t.has("velocity")||_h(e.object).useVelocity===!0}setup(e){this.needsPreviousBoneMatrices(e)&&Hi.assign(this.getPreviousSkinnedPosition(e));const t=this.getSkinnedPosition();if(this.toPositionNode&&this.toPositionNode.assign(t),e.hasGeometryAttribute("normal")){const s=this.getSkinnedNormal();it.assign(s),e.hasGeometryAttribute("tangent")&&Gr.assign(s)}return t}generate(e,t){if(t!=="void")return super.generate(e,t)}update(e){const t=e.object&&e.object.skeleton?e.object.skeleton:this.skinnedMesh.skeleton;mc.get(t)!==e.frameId&&(mc.set(t,e.frameId),this.previousBoneMatricesNode!==null&&t.previousBoneMatrices.set(t.boneMatrices),t.update())}}const gm=i=>E(new mm(i)),pb=(i,e=null)=>{const t=new mm(i);return t.positionNode=en(new En(i.geometry.getAttribute("position").array,3),"vec3").setPBO(!0).toReadOnly().element(Ns).toVar(),t.skinIndexNode=en(new En(new Uint32Array(i.geometry.getAttribute("skinIndex").array),4),"uvec4").setPBO(!0).toReadOnly().element(Ns).toVar(),t.skinWeightNode=en(new En(i.geometry.getAttribute("skinWeight").array,4),"vec4").setPBO(!0).toReadOnly().element(Ns).toVar(),t.bindMatrixNode=$(i.bindMatrix,"mat4"),t.bindMatrixInverseNode=$(i.bindMatrixInverse,"mat4"),t.boneMatricesNode=Ir(i.skeleton.boneMatrices,"mat4",i.skeleton.bones.length),t.toPositionNode=e,E(t)};class fb extends k{static get type(){return"LoopNode"}constructor(e=[]){super(),this.params=e}getVarName(e){return String.fromCharCode(105+e)}getProperties(e){const t=e.getNodeProperties(this);if(t.stackNode!==void 0)return t;const s={};for(let o=0,a=this.params.length-1;o<a;o++){const u=this.params[o],l=u.isNode!==!0&&u.name||this.getVarName(o),c=u.isNode!==!0&&u.type||"int";s[l]=os(l,c)}const n=e.addStack();t.returnsNode=this.params[this.params.length-1](s,e),t.stackNode=n;const r=this.params[0];return r.isNode!==!0&&typeof r.update=="function"&&(t.updateNode=N(this.params[0].update)(s)),e.removeStack(),t}getNodeType(e){const{returnsNode:t}=this.getProperties(e);return t?t.getNodeType(e):"void"}setup(e){this.getProperties(e)}generate(e){const t=this.getProperties(e),s=this.params,n=t.stackNode;for(let a=0,u=s.length-1;a<u;a++){const l=s[a];let c=!1,d=null,p=null,f=null,m=null,y=null,x=null;l.isNode?l.getNodeType(e)==="bool"?(c=!0,m="bool",p=l.build(e,m)):(m="int",f=this.getVarName(a),d="0",p=l.build(e,m),y="<"):(m=l.type||"int",f=l.name||this.getVarName(a),d=l.start,p=l.end,y=l.condition,x=l.update,typeof d=="number"?d=e.generateConst(m,d):d&&d.isNode&&(d=d.build(e,m)),typeof p=="number"?p=e.generateConst(m,p):p&&p.isNode&&(p=p.build(e,m)),d!==void 0&&p===void 0?(d=d+" - 1",p="0",y=">="):p!==void 0&&d===void 0&&(d="0",y="<"),y===void 0&&(Number(d)>Number(p)?y=">=":y="<"));let S;if(c)S=`while ( ${p} )`;else{const R={start:d,end:p},C=R.start,D=R.end;let P;const F=()=>y.includes("<")?"+=":"-=";if(x!=null)switch(typeof x){case"function":P=e.flowStagesNode(t.updateNode,"void").code.replace(/\t|;/g,"");break;case"number":P=f+" "+F()+" "+e.generateConst(m,x);break;case"string":P=f+" "+x;break;default:x.isNode?P=f+" "+F()+" "+x.build(e):(console.error("THREE.TSL: 'Loop( { update: ... } )' is not a function, string or number."),P="break /* invalid update */")}else m==="int"||m==="uint"?x=y.includes("<")?"++":"--":x=F()+" 1.",P=f+" "+x;const B=e.getVar(m,f)+" = "+C,V=f+" "+y+" "+D;S=`for ( ${B}; ${V}; ${P} )`}e.addFlowCode((a===0?`
`:"")+e.tab+S+` {

`).addFlowTab()}const r=n.build(e,"void"),o=t.returnsNode?t.returnsNode.build(e):"";e.removeFlowTab().addFlowCode(`
`+e.tab+r);for(let a=0,u=this.params.length-1;a<u;a++)e.addFlowCode((a===0?"":e.tab)+`}

`).removeFlowTab();return e.addFlowTab(),o}}const le=(...i)=>E(new fb(Qs(i,"int"))).toStack(),mb=()=>os("continue").toStack(),ym=()=>os("break").toStack(),Io=new WeakMap,at=new _e,gc=N(({bufferMap:i,influence:e,stride:t,width:s,depth:n,offset:r})=>{const o=_(cm).mul(t).add(r),a=o.div(s),u=o.sub(a.mul(s));return ve(i,Ie(u,a)).depth(n).xyz.mul(e)});function gb(i){const e=i.morphAttributes.position!==void 0,t=i.morphAttributes.normal!==void 0,s=i.morphAttributes.color!==void 0,n=i.morphAttributes.position||i.morphAttributes.normal||i.morphAttributes.color,r=n!==void 0?n.length:0;let o=Io.get(i);if(o===void 0||o.count!==r){let S=function(){y.dispose(),Io.delete(i),i.removeEventListener("dispose",S)};o!==void 0&&o.texture.dispose();const a=i.morphAttributes.position||[],u=i.morphAttributes.normal||[],l=i.morphAttributes.color||[];let c=0;e===!0&&(c=1),t===!0&&(c=2),s===!0&&(c=3);let d=i.attributes.position.count*c,p=1;const f=4096;d>f&&(p=Math.ceil(d/f),d=f);const m=new Float32Array(d*p*4*r),y=new Ay(m,d,p,r);y.type=ft,y.needsUpdate=!0;const x=c*4;for(let R=0;R<r;R++){const C=a[R],D=u[R],P=l[R],F=d*p*4*R;for(let B=0;B<C.count;B++){const V=B*x;e===!0&&(at.fromBufferAttribute(C,B),m[F+V+0]=at.x,m[F+V+1]=at.y,m[F+V+2]=at.z,m[F+V+3]=0),t===!0&&(at.fromBufferAttribute(D,B),m[F+V+4]=at.x,m[F+V+5]=at.y,m[F+V+6]=at.z,m[F+V+7]=0),s===!0&&(at.fromBufferAttribute(P,B),m[F+V+8]=at.x,m[F+V+9]=at.y,m[F+V+10]=at.z,m[F+V+11]=P.itemSize===4?at.w:1)}}o={count:r,texture:y,stride:c,size:new he(d,p)},Io.set(i,o),i.addEventListener("dispose",S)}return o}class yb extends k{static get type(){return"MorphNode"}constructor(e){super("void"),this.mesh=e,this.morphBaseInfluence=$(1),this.updateType=Y.OBJECT}setup(e){const{geometry:t}=e,s=t.morphAttributes.position!==void 0,n=t.hasAttribute("normal")&&t.morphAttributes.normal!==void 0,r=t.morphAttributes.position||t.morphAttributes.normal||t.morphAttributes.color,o=r!==void 0?r.length:0,{texture:a,stride:u,size:l}=gb(t);s===!0&&Ae.mulAssign(this.morphBaseInfluence),n===!0&&it.mulAssign(this.morphBaseInfluence);const c=_(l.width);le(o,({i:d})=>{const p=g(0).toVar();this.mesh.count>1&&this.mesh.morphTexture!==null&&this.mesh.morphTexture!==void 0?p.assign(ve(this.mesh.morphTexture,Ie(_(d).add(1),_(Ns))).r):p.assign(fe("morphTargetInfluences","float").element(d).toVar()),H(p.notEqual(0),()=>{s===!0&&Ae.addAssign(gc({bufferMap:a,influence:p,stride:u,width:c,depth:d,offset:_(0)})),n===!0&&it.addAssign(gc({bufferMap:a,influence:p,stride:u,width:c,depth:d,offset:_(1)}))})})}update(){const e=this.morphBaseInfluence;this.mesh.geometry.morphTargetsRelative?e.value=1:e.value=1-this.mesh.morphTargetInfluences.reduce((t,s)=>t+s,0)}}const _m=q(yb).setParameterLength(1);class zn extends k{static get type(){return"LightingNode"}constructor(){super("vec3"),this.isLightingNode=!0}}class _b extends zn{static get type(){return"AONode"}constructor(e=null){super(),this.aoNode=e}setup(e){e.context.ambientOcclusion.mulAssign(this.aoNode)}}class Tb extends Dp{static get type(){return"LightingContextNode"}constructor(e,t=null,s=null,n=null){super(e),this.lightingModel=t,this.backdropNode=s,this.backdropAlphaNode=n,this._value=null}getContext(){const{backdropNode:e,backdropAlphaNode:t}=this,s=b().toVar("directDiffuse"),n=b().toVar("directSpecular"),r=b().toVar("indirectDiffuse"),o=b().toVar("indirectSpecular"),a={directDiffuse:s,directSpecular:n,indirectDiffuse:r,indirectSpecular:o};return{radiance:b().toVar("radiance"),irradiance:b().toVar("irradiance"),iblIrradiance:b().toVar("iblIrradiance"),ambientOcclusion:g(1).toVar("ambientOcclusion"),reflectedLight:a,backdrop:e,backdropAlpha:t}}setup(e){return this.value=this._value||(this._value=this.getContext()),this.value.lightingModel=this.lightingModel||e.context.lightingModel,super.setup(e)}}const Tm=q(Tb);class xb extends zn{static get type(){return"IrradianceNode"}constructor(e){super(),this.node=e}setup(e){e.context.irradiance.addAssign(this.node)}}const un=new he;class No extends Ht{static get type(){return"ViewportTextureNode"}constructor(e=ns,t=null,s=null){let n=null;s===null?(n=new Ed,n.minFilter=Ys,s=n):n=s,super(s,e,t),this.generateMipmaps=!1,this.defaultFramebuffer=n,this.isOutputTextureNode=!0,this.updateBeforeType=Y.FRAME,this._cacheTextures=new WeakMap}getTextureForReference(e=null){let t,s;if(this.referenceNode?(t=this.referenceNode.defaultFramebuffer,s=this.referenceNode._cacheTextures):(t=this.defaultFramebuffer,s=this._cacheTextures),e===null)return t;if(s.has(e)===!1){const n=t.clone();s.set(e,n)}return s.get(e)}updateReference(e){const t=e.renderer.getRenderTarget();return this.value=this.getTextureForReference(t),this.value}updateBefore(e){const t=e.renderer,s=t.getRenderTarget();s===null?t.getDrawingBufferSize(un):un.set(s.width,s.height);const n=this.getTextureForReference(s);(n.image.width!==un.width||n.image.height!==un.height)&&(n.image.width=un.width,n.image.height=un.height,n.needsUpdate=!0);const r=n.generateMipmaps;n.generateMipmaps=this.generateMipmaps,t.copyFramebufferToTexture(n),n.generateMipmaps=r}clone(){const e=new this.constructor(this.uvNode,this.levelNode,this.value);return e.generateMipmaps=this.generateMipmaps,e}}const bb=q(No).setParameterLength(0,3),gl=q(No,null,null,{generateMipmaps:!0}).setParameterLength(0,3);let Xr=null;class Nb extends No{static get type(){return"ViewportDepthTextureNode"}constructor(e=ns,t=null){Xr===null&&(Xr=new Mt),super(e,t,Xr)}getTextureForReference(){return Xr}}const yl=q(Nb).setParameterLength(0,2);class tt extends k{static get type(){return"ViewportDepthNode"}constructor(e,t=null){super("float"),this.scope=e,this.valueNode=t,this.isViewportDepthNode=!0}generate(e){const{scope:t}=this;return t===tt.DEPTH_BASE?e.getFragDepth():super.generate(e)}setup({camera:e}){const{scope:t}=this,s=this.valueNode;let n=null;if(t===tt.DEPTH_BASE)s!==null&&(n=bm().assign(s));else if(t===tt.DEPTH)e.isPerspectiveCamera?n=xm(Ee.z,fs,ms):n=Bn(Ee.z,fs,ms);else if(t===tt.LINEAR_DEPTH)if(s!==null)if(e.isPerspectiveCamera){const r=_l(s,fs,ms);n=Bn(r,fs,ms)}else n=s;else n=Bn(Ee.z,fs,ms);return n}}tt.DEPTH_BASE="depthBase";tt.DEPTH="depth";tt.LINEAR_DEPTH="linearDepth";const Bn=(i,e,t)=>i.add(e).div(e.sub(t)),Sb=(i,e,t)=>e.sub(t).mul(i).sub(e),xm=(i,e,t)=>e.add(i).mul(t).div(t.sub(e).mul(i)),_l=(i,e,t)=>e.mul(t).div(t.sub(e).mul(i).sub(t)),Tl=(i,e,t)=>{e=e.max(1e-6).toVar();const s=Ot(i.negate().div(e)),n=Ot(t.div(e));return s.div(n)},vb=(i,e,t)=>{const s=i.mul(co(t.div(e)));return g(Math.E).pow(s).mul(e).negate()},bm=q(tt,tt.DEPTH_BASE),xl=U(tt,tt.DEPTH),qi=q(tt,tt.LINEAR_DEPTH).setParameterLength(0,1),Rb=qi(yl());xl.assign=i=>bm(i);class _t extends k{static get type(){return"ClippingNode"}constructor(e=_t.DEFAULT){super(),this.scope=e}setup(e){super.setup(e);const t=e.clippingContext,{intersectionPlanes:s,unionPlanes:n}=t;return this.hardwareClipping=e.material.hardwareClipping,this.scope===_t.ALPHA_TO_COVERAGE?this.setupAlphaToCoverage(s,n):this.scope===_t.HARDWARE?this.setupHardwareClipping(n,e):this.setupDefault(s,n)}setupAlphaToCoverage(e,t){return N(()=>{const s=g().toVar("distanceToPlane"),n=g().toVar("distanceToGradient"),r=g(1).toVar("clipOpacity"),o=t.length;if(this.hardwareClipping===!1&&o>0){const u=qe(t).setGroup(z);le(o,({i:l})=>{const c=u.element(l);s.assign(Ee.dot(c.xyz).negate().add(c.w)),n.assign(s.fwidth().div(2)),r.mulAssign(Wt(n.negate(),n,s))})}const a=e.length;if(a>0){const u=qe(e).setGroup(z),l=g(1).toVar("intersectionClipOpacity");le(a,({i:c})=>{const d=u.element(c);s.assign(Ee.dot(d.xyz).negate().add(d.w)),n.assign(s.fwidth().div(2)),l.mulAssign(Wt(n.negate(),n,s).oneMinus())}),r.mulAssign(l.oneMinus())}re.a.mulAssign(r),re.a.equal(0).discard()})()}setupDefault(e,t){return N(()=>{const s=t.length;if(this.hardwareClipping===!1&&s>0){const r=qe(t).setGroup(z);le(s,({i:o})=>{const a=r.element(o);Ee.dot(a.xyz).greaterThan(a.w).discard()})}const n=e.length;if(n>0){const r=qe(e).setGroup(z),o=Tt(!0).toVar("clipped");le(n,({i:a})=>{const u=r.element(a);o.assign(Ee.dot(u.xyz).greaterThan(u.w).and(o))}),o.discard()}})()}setupHardwareClipping(e,t){const s=e.length;return t.enableHardwareClipping(s),N(()=>{const n=qe(e).setGroup(z),r=ls(t.getClipDistance());le(s,({i:o})=>{const a=n.element(o),u=Ee.dot(a.xyz).sub(a.w).negate();r.element(o).assign(u)})})()}}_t.ALPHA_TO_COVERAGE="alphaToCoverage";_t.DEFAULT="default";_t.HARDWARE="hardware";const Ab=()=>E(new _t),Eb=()=>E(new _t(_t.ALPHA_TO_COVERAGE)),wb=()=>E(new _t(_t.HARDWARE)),Cb=.05,yc=N(([i])=>us(X(1e4,lt(X(17,i.x).add(X(.1,i.y)))).mul(Be(.1,ge(lt(X(13,i.y).add(i.x))))))),_c=N(([i])=>yc(M(yc(i.xy),i.z))),Mb=N(([i])=>{const e=Se(kt($u(i.xyz)),kt(Wu(i.xyz))),t=g(1).div(g(Cb).mul(e)).toVar("pixScale"),s=M(Fn(Gt(Ot(t))),Fn(ho(Ot(t)))),n=M(_c(Gt(s.x.mul(i.xyz))),_c(Gt(s.y.mul(i.xyz)))),r=us(Ot(t)),o=Be(X(r.oneMinus(),n.x),X(r,n.y)),a=rt(r,r.oneMinus()),u=b(o.mul(o).div(X(2,a).mul(Z(1,a))),o.sub(X(.5,a)).div(Z(1,a)),Z(1,Z(1,o).mul(Z(1,o)).div(X(2,a).mul(Z(1,a))))),l=o.lessThan(a.oneMinus()).select(o.lessThan(a).select(u.x,u.y),u.z);return xt(l,1e-6,1)}).setLayout({name:"getAlphaHashThreshold",type:"float",inputs:[{name:"position",type:"vec3"}]});class Bb extends rf{static get type(){return"VertexColorNode"}constructor(e){super(null,"vec4"),this.isVertexColorNode=!0,this.index=e}getAttributeName(){const e=this.index;return"color"+(e>0?e:"")}generate(e){const t=this.getAttributeName(e),s=e.hasGeometryAttribute(t);let n;return s===!0?n=super.generate(e):n=e.generateConst(this.nodeType,new _e(1,1,1,1)),n}serialize(e){super.serialize(e),e.index=this.index}deserialize(e){super.deserialize(e),this.index=e.index}}const Nm=(i=0)=>E(new Bb(i)),Sm=N(([i,e])=>rt(1,i.oneMinus().div(e)).oneMinus()).setLayout({name:"blendBurn",type:"vec3",inputs:[{name:"base",type:"vec3"},{name:"blend",type:"vec3"}]}),vm=N(([i,e])=>rt(i.div(e.oneMinus()),1)).setLayout({name:"blendDodge",type:"vec3",inputs:[{name:"base",type:"vec3"},{name:"blend",type:"vec3"}]}),Rm=N(([i,e])=>i.oneMinus().mul(e.oneMinus()).oneMinus()).setLayout({name:"blendScreen",type:"vec3",inputs:[{name:"base",type:"vec3"},{name:"blend",type:"vec3"}]}),Am=N(([i,e])=>ne(i.mul(2).mul(e),i.oneMinus().mul(2).mul(e.oneMinus()).oneMinus(),fo(.5,i))).setLayout({name:"blendOverlay",type:"vec3",inputs:[{name:"base",type:"vec3"},{name:"blend",type:"vec3"}]}),Pb=N(([i,e])=>{const t=e.a.add(i.a.mul(e.a.oneMinus()));return W(e.rgb.mul(e.a).add(i.rgb.mul(i.a).mul(e.a.oneMinus())).div(t),t)}).setLayout({name:"blendColor",type:"vec4",inputs:[{name:"base",type:"vec4"},{name:"blend",type:"vec4"}]}),Em=N(([i])=>W(i.rgb.mul(i.a),i.a),{color:"vec4",return:"vec4"}),Fb=N(([i])=>(H(i.a.equal(0),()=>W(0)),W(i.rgb.div(i.a),i.a)),{color:"vec4",return:"vec4"}),Lb=(...i)=>(console.warn('THREE.TSL: "burn" has been renamed. Use "blendBurn" instead.'),Sm(i)),Db=(...i)=>(console.warn('THREE.TSL: "dodge" has been renamed. Use "blendDodge" instead.'),vm(i)),Ub=(...i)=>(console.warn('THREE.TSL: "screen" has been renamed. Use "blendScreen" instead.'),Rm(i)),Ib=(...i)=>(console.warn('THREE.TSL: "overlay" has been renamed. Use "blendOverlay" instead.'),Am(i));class we extends Kl{static get type(){return"NodeMaterial"}get type(){return this.constructor.type}set type(e){}constructor(){super(),this.isNodeMaterial=!0,this.fog=!0,this.lights=!1,this.hardwareClipping=!1,this.lightsNode=null,this.envNode=null,this.aoNode=null,this.colorNode=null,this.normalNode=null,this.opacityNode=null,this.backdropNode=null,this.backdropAlphaNode=null,this.alphaTestNode=null,this.maskNode=null,this.positionNode=null,this.geometryNode=null,this.depthNode=null,this.receivedShadowPositionNode=null,this.castShadowPositionNode=null,this.receivedShadowNode=null,this.castShadowNode=null,this.outputNode=null,this.mrtNode=null,this.fragmentNode=null,this.vertexNode=null,Object.defineProperty(this,"shadowPositionNode",{get:()=>this.receivedShadowPositionNode,set:e=>{console.warn('THREE.NodeMaterial: ".shadowPositionNode" was renamed to ".receivedShadowPositionNode".'),this.receivedShadowPositionNode=e}})}customProgramCacheKey(){return this.type+mh(this)}build(e){this.setup(e)}setupObserver(e){return new uT(e)}setup(e){e.context.setupNormal=()=>Mn(this.setupNormal(e),"NORMAL","vec3"),e.context.setupPositionView=()=>this.setupPositionView(e),e.context.setupModelViewProjection=()=>this.setupModelViewProjection(e);const t=e.renderer,s=t.getRenderTarget();e.addStack();const n=Mn(this.setupVertex(e),"VERTEX"),r=this.vertexNode||n;e.stack.outputNode=r,this.setupHardwareClipping(e),this.geometryNode!==null&&(e.stack.outputNode=e.stack.outputNode.bypass(this.geometryNode)),e.addFlow("vertex",e.removeStack()),e.addStack();let o;const a=this.setupClipping(e);if((this.depthWrite===!0||this.depthTest===!0)&&(s!==null?s.depthBuffer===!0&&this.setupDepth(e):t.depth===!0&&this.setupDepth(e)),this.fragmentNode===null){this.setupDiffuseColor(e),this.setupVariants(e);const u=this.setupLighting(e);a!==null&&e.stack.add(a);const l=W(u,re.a).max(0);o=this.setupOutput(e,l),Cn.assign(o);const c=this.outputNode!==null;if(c&&(o=this.outputNode),s!==null){const d=t.getMRT(),p=this.mrtNode;d!==null?(c&&Cn.assign(o),o=d,p!==null&&(o=d.merge(p))):p!==null&&(o=p)}}else{let u=this.fragmentNode;u.isOutputStructNode!==!0&&(u=W(u)),o=this.setupOutput(e,u)}e.stack.outputNode=o,e.addFlow("fragment",e.removeStack()),e.observer=this.setupObserver(e)}setupClipping(e){if(e.clippingContext===null)return null;const{unionPlanes:t,intersectionPlanes:s}=e.clippingContext;let n=null;if(t.length>0||s.length>0){const r=e.renderer.samples;this.alphaToCoverage&&r>1?n=Eb():e.stack.add(Ab())}return n}setupHardwareClipping(e){if(this.hardwareClipping=!1,e.clippingContext===null)return;const t=e.clippingContext.unionPlanes.length;t>0&&t<=8&&e.isAvailable("clipDistance")&&(e.stack.add(wb()),this.hardwareClipping=!0)}setupDepth(e){const{renderer:t,camera:s}=e;let n=this.depthNode;if(n===null){const r=t.getMRT();r&&r.has("depth")?n=r.get("depth"):t.logarithmicDepthBuffer===!0&&(s.isPerspectiveCamera?n=Tl(Ee.z,fs,ms):n=Bn(Ee.z,fs,ms))}n!==null&&xl.assign(n).toStack()}setupPositionView(){return on.mul(Ae).xyz}setupModelViewProjection(){return Gn.mul(Ee)}setupVertex(e){return e.addStack(),this.setupPosition(e),e.context.vertex=e.removeStack(),ml}setupPosition(e){const{object:t,geometry:s}=e;if((s.morphAttributes.position||s.morphAttributes.normal||s.morphAttributes.color)&&_m(t).toStack(),t.isSkinnedMesh===!0&&gm(t).toStack(),this.displacementMap){const n=ts("displacementMap","texture"),r=ts("displacementScale","float"),o=ts("displacementBias","float");Ae.addAssign(it.normalize().mul(n.x.mul(r).add(o)))}return t.isBatchedMesh&&fm(t).toStack(),t.isInstancedMesh&&t.instanceMatrix&&t.instanceMatrix.isInstancedBufferAttribute===!0&&pm(t).toStack(),this.positionNode!==null&&Ae.assign(Mn(this.positionNode,"POSITION","vec3")),Ae}setupDiffuseColor({object:e,geometry:t}){this.maskNode!==null&&Tt(this.maskNode).not().discard();let s=this.colorNode?W(this.colorNode):Lf;this.vertexColors===!0&&t.hasAttribute("color")&&(s=s.mul(Nm())),e.instanceColor&&(s=Ar("vec3","vInstanceColor").mul(s)),e.isBatchedMesh&&e._colorsTexture&&(s=Ar("vec3","vBatchColor").mul(s)),re.assign(s);const n=this.opacityNode?g(this.opacityNode):pl;re.a.assign(re.a.mul(n));let r=null;(this.alphaTestNode!==null||this.alphaTest>0)&&(r=this.alphaTestNode!==null?g(this.alphaTestNode):Ff,re.a.lessThanEqual(r).discard()),this.alphaHash===!0&&re.a.lessThan(Mb(Ae)).discard(),this.transparent===!1&&this.blending===Ks&&this.alphaToCoverage===!1?re.a.assign(1):r===null&&re.a.lessThanEqual(0).discard()}setupVariants(){}setupOutgoingLight(){return this.lights===!0?b(0):re.rgb}setupNormal(){return this.normalNode?b(this.normalNode):kf}setupEnvironment(){let e=null;return this.envNode?e=this.envNode:this.envMap&&(e=this.envMap.isCubeTexture?ts("envMap","cubeTexture"):ts("envMap","texture")),e}setupLightMap(e){let t=null;return e.material.lightMap&&(t=new xb(fl)),t}setupLights(e){const t=[],s=this.setupEnvironment(e);s&&s.isLightingNode&&t.push(s);const n=this.setupLightMap(e);if(n&&n.isLightingNode&&t.push(n),this.aoNode!==null||e.material.aoMap){const o=this.aoNode!==null?this.aoNode:lm;t.push(new _b(o))}let r=this.lightsNode||e.lightsNode;return t.length>0&&(r=e.renderer.lighting.createNode([...r.getLights(),...t])),r}setupLightingModel(){}setupLighting(e){const{material:t}=e,{backdropNode:s,backdropAlphaNode:n,emissiveNode:r}=this,a=this.lights===!0||this.lightsNode!==null?this.setupLights(e):null;let u=this.setupOutgoingLight(e);if(a&&a.getScope().hasLights){const l=this.setupLightingModel(e)||null;u=Tm(a,l,s,n)}else s!==null&&(u=b(n!==null?ne(u,s,n):s));return(r&&r.isNode===!0||t.emissive&&t.emissive.isColor===!0)&&(za.assign(b(r||Uf)),u=u.add(za)),u}setupFog(e,t){const s=e.fogNode;return s&&(Cn.assign(t),t=W(s.toVar())),t}setupPremultipliedAlpha(e,t){return Em(t)}setupOutput(e,t){return this.fog===!0&&(t=this.setupFog(e,t)),this.premultipliedAlpha===!0&&(t=this.setupPremultipliedAlpha(e,t)),t}setDefaultValues(e){for(const s in e){const n=e[s];this[s]===void 0&&(this[s]=n,n&&n.clone&&(this[s]=n.clone()))}const t=Object.getOwnPropertyDescriptors(e.constructor.prototype);for(const s in t)Object.getOwnPropertyDescriptor(this.constructor.prototype,s)===void 0&&t[s].get!==void 0&&Object.defineProperty(this.constructor.prototype,s,t[s])}toJSON(e){const t=e===void 0||typeof e=="string";t&&(e={textures:{},images:{},nodes:{}});const s=Kl.prototype.toJSON.call(this,e),n=Ii(this);s.inputNodes={};for(const{property:o,childNode:a}of n)s.inputNodes[o]=a.toJSON(e).uuid;function r(o){const a=[];for(const u in o){const l=o[u];delete l.metadata,a.push(l)}return a}if(t){const o=r(e.textures),a=r(e.images),u=r(e.nodes);o.length>0&&(s.textures=o),a.length>0&&(s.images=a),u.length>0&&(s.nodes=u)}return s}copy(e){return this.lightsNode=e.lightsNode,this.envNode=e.envNode,this.colorNode=e.colorNode,this.normalNode=e.normalNode,this.opacityNode=e.opacityNode,this.backdropNode=e.backdropNode,this.backdropAlphaNode=e.backdropAlphaNode,this.alphaTestNode=e.alphaTestNode,this.maskNode=e.maskNode,this.positionNode=e.positionNode,this.geometryNode=e.geometryNode,this.depthNode=e.depthNode,this.receivedShadowPositionNode=e.receivedShadowPositionNode,this.castShadowPositionNode=e.castShadowPositionNode,this.receivedShadowNode=e.receivedShadowNode,this.castShadowNode=e.castShadowNode,this.outputNode=e.outputNode,this.mrtNode=e.mrtNode,this.fragmentNode=e.fragmentNode,this.vertexNode=e.vertexNode,super.copy(e)}}const Vb=new u_;class Ob extends we{static get type(){return"LineBasicNodeMaterial"}constructor(e){super(),this.isLineBasicNodeMaterial=!0,this.setDefaultValues(Vb),this.setValues(e)}}const Gb=new l_;class kb extends we{static get type(){return"LineDashedNodeMaterial"}constructor(e){super(),this.isLineDashedNodeMaterial=!0,this.setDefaultValues(Gb),this.dashOffset=0,this.offsetNode=null,this.dashScaleNode=null,this.dashSizeNode=null,this.gapSizeNode=null,this.setValues(e)}setupVariants(){const e=this.offsetNode?g(this.offsetNode):om,t=this.dashScaleNode?g(this.dashScaleNode):nm,s=this.dashSizeNode?g(this.dashSizeNode):rm,n=this.gapSizeNode?g(this.gapSizeNode):im;Ni.assign(s),$a.assign(n);const r=Yt(as("lineDistance").mul(t));(e?r.add(e):r).mod(Ni.add($a)).greaterThan(Ni).discard()}}let Yr=null;class zb extends No{static get type(){return"ViewportSharedTextureNode"}constructor(e=ns,t=null){Yr===null&&(Yr=new Ed),super(e,t,Yr)}getTextureForReference(){return Yr}updateReference(){return this}}const $b=q(zb).setParameterLength(0,2),wm=i=>E(i).mul(.5).add(.5),Wb=i=>E(i).mul(2).sub(1),Hb=new o_;class qb extends we{static get type(){return"MeshNormalNodeMaterial"}constructor(e){super(),this.isMeshNormalNodeMaterial=!0,this.setDefaultValues(Hb),this.setValues(e)}setupDiffuseColor(){const e=this.opacityNode?g(this.opacityNode):pl;re.assign(go(W(wm(ue),e),Pd))}}const bl=N(([i=al])=>{const e=i.z.atan(i.x).mul(1/(Math.PI*2)).add(.5),t=i.y.clamp(-1,1).asin().mul(1/Math.PI).add(.5);return M(e,t)});class Cm extends O_{constructor(e=1,t={}){super(e,t),this.isCubeRenderTarget=!0}fromEquirectangularTexture(e,t){const s=t.minFilter,n=t.generateMipmaps;t.generateMipmaps=!0,this.texture.type=t.type,this.texture.colorSpace=t.colorSpace,this.texture.generateMipmaps=t.generateMipmaps,this.texture.minFilter=t.minFilter,this.texture.magFilter=t.magFilter;const r=new Md(5,5,5),o=bl(al),a=new we;a.colorNode=Q(t,o,0),a.side=nt,a.blending=br;const u=new Ss(r,a),l=new Qi;l.add(u),t.minFilter===Ys&&(t.minFilter=rs);const c=new G_(1,10,this),d=e.getMRT();return e.setMRT(null),c.update(e,l),e.setMRT(d),t.minFilter=s,t.currentGenerateMipmaps=n,u.geometry.dispose(),u.material.dispose(),this}}const _r=new WeakMap;class jb extends Ce{static get type(){return"CubeMapNode"}constructor(e){super("vec3"),this.envNode=e,this._cubeTexture=null,this._cubeTextureNode=Dn(null);const t=new hu;t.isRenderTargetTexture=!0,this._defaultTexture=t,this.updateBeforeType=Y.RENDER}updateBefore(e){const{renderer:t,material:s}=e,n=this.envNode;if(n.isTextureNode||n.isMaterialReferenceNode){const r=n.isTextureNode?n.value:s[n.property];if(r&&r.isTexture){const o=r.mapping;if(o===gu||o===yu){if(_r.has(r)){const a=_r.get(r);Tc(a,r.mapping),this._cubeTexture=a}else{const a=r.image;if(Xb(a)){const u=new Cm(a.height);u.fromEquirectangularTexture(t,r),Tc(u.texture,r.mapping),this._cubeTexture=u.texture,_r.set(r,u.texture),r.addEventListener("dispose",Mm)}else this._cubeTexture=this._defaultTexture}this._cubeTextureNode.value=this._cubeTexture}else this._cubeTextureNode=this.envNode}}}setup(e){return this.updateBefore(e),this._cubeTextureNode}}function Xb(i){return i==null?!1:i.height>0}function Mm(i){const e=i.target;e.removeEventListener("dispose",Mm);const t=_r.get(e);t!==void 0&&(_r.delete(e),t.dispose())}function Tc(i,e){e===gu?i.mapping=Mi:e===yu&&(i.mapping=Bi)}const Bm=q(jb).setParameterLength(1);class Nl extends zn{static get type(){return"BasicEnvironmentNode"}constructor(e=null){super(),this.envNode=e}setup(e){e.context.environment=Bm(this.envNode)}}class Yb extends zn{static get type(){return"BasicLightMapNode"}constructor(e=null){super(),this.lightMapNode=e}setup(e){const t=g(1/Math.PI);e.context.irradianceLightMap=this.lightMapNode.mul(t)}}class So{start(e){e.lightsNode.setupLights(e,e.lightsNode.getLightNodes(e)),this.indirect(e)}finish(){}direct(){}directRectArea(){}indirect(){}ambientOcclusion(){}}class Pm extends So{constructor(){super()}indirect({context:e}){const t=e.ambientOcclusion,s=e.reflectedLight,n=e.irradianceLightMap;s.indirectDiffuse.assign(W(0)),n?s.indirectDiffuse.addAssign(n):s.indirectDiffuse.addAssign(W(1,1,1,0)),s.indirectDiffuse.mulAssign(t),s.indirectDiffuse.mulAssign(re.rgb)}finish(e){const{material:t,context:s}=e,n=s.outgoingLight,r=e.context.environment;if(r)switch(t.combine){case V_:n.rgb.assign(ne(n.rgb,n.rgb.mul(r.rgb),yr.mul(Ai)));break;case I_:n.rgb.assign(ne(n.rgb,r.rgb,yr.mul(Ai)));break;case U_:n.rgb.addAssign(r.rgb.mul(yr.mul(Ai)));break;default:console.warn("THREE.BasicLightingModel: Unsupported .combine value:",t.combine);break}}}const Kb=new ks;class Qb extends we{static get type(){return"MeshBasicNodeMaterial"}constructor(e){super(),this.isMeshBasicNodeMaterial=!0,this.lights=!0,this.setDefaultValues(Kb),this.setValues(e)}setupNormal(){return kn(Ln)}setupEnvironment(e){const t=super.setupEnvironment(e);return t?new Nl(t):null}setupLightMap(e){let t=null;return e.material.lightMap&&(t=new Yb(fl)),t}setupOutgoingLight(){return re.rgb}setupLightingModel(){return new Pm}}const Un=N(({f0:i,f90:e,dotVH:t})=>{const s=t.mul(-5.55473).sub(6.98316).mul(t).exp2();return i.mul(s.oneMinus()).add(e.mul(s))}),sn=N(i=>i.diffuseColor.mul(1/Math.PI)),Zb=()=>g(.25),Jb=N(({dotNH:i})=>ki.mul(g(.5)).add(1).mul(g(1/Math.PI)).mul(i.pow(ki))),eN=N(({lightDirection:i})=>{const e=i.add(Te).normalize(),t=ue.dot(e).clamp(),s=Te.dot(e).clamp(),n=Un({f0:Je,f90:1,dotVH:s}),r=Zb(),o=Jb({dotNH:t});return n.mul(r).mul(o)});class Fm extends Pm{constructor(e=!0){super(),this.specular=e}direct({lightDirection:e,lightColor:t,reflectedLight:s}){const r=ue.dot(e).clamp().mul(t);s.directDiffuse.addAssign(r.mul(sn({diffuseColor:re.rgb}))),this.specular===!0&&s.directSpecular.addAssign(r.mul(eN({lightDirection:e})).mul(yr))}indirect(e){const{ambientOcclusion:t,irradiance:s,reflectedLight:n}=e.context;n.indirectDiffuse.addAssign(s.mul(sn({diffuseColor:re}))),n.indirectDiffuse.mulAssign(t)}}const tN=new i_;class sN extends we{static get type(){return"MeshLambertNodeMaterial"}constructor(e){super(),this.isMeshLambertNodeMaterial=!0,this.lights=!0,this.setDefaultValues(tN),this.setValues(e)}setupEnvironment(e){const t=super.setupEnvironment(e);return t?new Nl(t):null}setupLightingModel(){return new Fm(!1)}}const nN=new s_;class rN extends we{static get type(){return"MeshPhongNodeMaterial"}constructor(e){super(),this.isMeshPhongNodeMaterial=!0,this.lights=!0,this.shininessNode=null,this.specularNode=null,this.setDefaultValues(nN),this.setValues(e)}setupEnvironment(e){const t=super.setupEnvironment(e);return t?new Nl(t):null}setupLightingModel(){return new Fm}setupVariants(){const e=(this.shininessNode?g(this.shininessNode):Df).max(1e-4);ki.assign(e);const t=this.specularNode||If;Je.assign(t)}copy(e){return this.shininessNode=e.shininessNode,this.specularNode=e.specularNode,super.copy(e)}}const Lm=N(i=>{if(i.geometry.hasAttribute("normal")===!1)return g(0);const e=Ln.dFdx().abs().max(Ln.dFdy().abs());return e.x.max(e.y).max(e.z)}),Sl=N(i=>{const{roughness:e}=i,t=Lm();let s=e.max(.0525);return s=s.add(t),s=s.min(1),s}),Dm=N(({alpha:i,dotNL:e,dotNV:t})=>{const s=i.pow2(),n=e.mul(s.add(s.oneMinus().mul(t.pow2())).sqrt()),r=t.mul(s.add(s.oneMinus().mul(e.pow2())).sqrt());return dt(.5,n.add(r).max(ap))}).setLayout({name:"V_GGX_SmithCorrelated",type:"float",inputs:[{name:"alpha",type:"float"},{name:"dotNL",type:"float"},{name:"dotNV",type:"float"}]}),iN=N(({alphaT:i,alphaB:e,dotTV:t,dotBV:s,dotTL:n,dotBL:r,dotNV:o,dotNL:a})=>{const u=a.mul(b(i.mul(t),e.mul(s),o).length()),l=o.mul(b(i.mul(n),e.mul(r),a).length());return dt(.5,u.add(l)).saturate()}).setLayout({name:"V_GGX_SmithCorrelated_Anisotropic",type:"float",inputs:[{name:"alphaT",type:"float",qualifier:"in"},{name:"alphaB",type:"float",qualifier:"in"},{name:"dotTV",type:"float",qualifier:"in"},{name:"dotBV",type:"float",qualifier:"in"},{name:"dotTL",type:"float",qualifier:"in"},{name:"dotBL",type:"float",qualifier:"in"},{name:"dotNV",type:"float",qualifier:"in"},{name:"dotNL",type:"float",qualifier:"in"}]}),Um=N(({alpha:i,dotNH:e})=>{const t=i.pow2(),s=e.pow2().mul(t.oneMinus()).oneMinus();return t.div(s.pow2()).mul(1/Math.PI)}).setLayout({name:"D_GGX",type:"float",inputs:[{name:"alpha",type:"float"},{name:"dotNH",type:"float"}]}),oN=g(1/Math.PI),aN=N(({alphaT:i,alphaB:e,dotNH:t,dotTH:s,dotBH:n})=>{const r=i.mul(e),o=b(e.mul(s),i.mul(n),r.mul(t)),a=o.dot(o),u=r.div(a);return oN.mul(r.mul(u.pow2()))}).setLayout({name:"D_GGX_Anisotropic",type:"float",inputs:[{name:"alphaT",type:"float",qualifier:"in"},{name:"alphaB",type:"float",qualifier:"in"},{name:"dotNH",type:"float",qualifier:"in"},{name:"dotTH",type:"float",qualifier:"in"},{name:"dotBH",type:"float",qualifier:"in"}]}),Za=N(({lightDirection:i,f0:e,f90:t,roughness:s,f:n,normalView:r=ue,USE_IRIDESCENCE:o,USE_ANISOTROPY:a})=>{const u=s.pow2(),l=i.add(Te).normalize(),c=r.dot(i).clamp(),d=r.dot(Te).clamp(),p=r.dot(l).clamp(),f=Te.dot(l).clamp();let m=Un({f0:e,f90:t,dotVH:f}),y,x;if(vr(o)&&(m=uo.mix(m,n)),vr(a)){const S=fr.dot(i),R=fr.dot(Te),C=fr.dot(l),D=Js.dot(i),P=Js.dot(Te),F=Js.dot(l);y=iN({alphaT:Gi,alphaB:u,dotTV:R,dotBV:P,dotTL:S,dotBL:D,dotNV:d,dotNL:c}),x=aN({alphaT:Gi,alphaB:u,dotNH:p,dotTH:C,dotBH:F})}else y=Dm({alpha:u,dotNL:c,dotNV:d}),x=Um({alpha:u,dotNH:p});return m.mul(y).mul(x)}),vl=N(({roughness:i,dotNV:e})=>{const t=W(-1,-.0275,-.572,.022),s=W(1,.0425,1.04,-.04),n=i.mul(t).add(s),r=n.x.mul(n.x).min(e.mul(-9.28).exp2()).mul(n.x).add(n.y);return M(-1.04,1.04).mul(r).add(n.zw)}).setLayout({name:"DFGApprox",type:"vec2",inputs:[{name:"roughness",type:"float"},{name:"dotNV",type:"vec3"}]}),Im=N(i=>{const{dotNV:e,specularColor:t,specularF90:s,roughness:n}=i,r=vl({dotNV:e,roughness:n});return t.mul(r.x).add(s.mul(r.y))}),Vm=N(({f:i,f90:e,dotVH:t})=>{const s=t.oneMinus().saturate(),n=s.mul(s),r=s.mul(n,n).clamp(0,.9999);return i.sub(b(e).mul(r)).div(r.oneMinus())}).setLayout({name:"Schlick_to_F0",type:"vec3",inputs:[{name:"f",type:"vec3"},{name:"f90",type:"float"},{name:"dotVH",type:"float"}]}),uN=N(({roughness:i,dotNH:e})=>{const t=i.pow2(),s=g(1).div(t),r=e.pow2().oneMinus().max(.0078125);return g(2).add(s).mul(r.pow(s.mul(.5))).div(2*Math.PI)}).setLayout({name:"D_Charlie",type:"float",inputs:[{name:"roughness",type:"float"},{name:"dotNH",type:"float"}]}),lN=N(({dotNV:i,dotNL:e})=>g(1).div(g(4).mul(e.add(i).sub(e.mul(i))))).setLayout({name:"V_Neubelt",type:"float",inputs:[{name:"dotNV",type:"float"},{name:"dotNL",type:"float"}]}),cN=N(({lightDirection:i})=>{const e=i.add(Te).normalize(),t=ue.dot(i).clamp(),s=ue.dot(Te).clamp(),n=ue.dot(e).clamp(),r=uN({roughness:ao,dotNH:n}),o=lN({dotNV:s,dotNL:t});return Hs.mul(r).mul(o)}),dN=N(({N:i,V:e,roughness:t})=>{const r=.0078125,o=i.dot(e).saturate(),a=M(t,o.oneMinus().sqrt());return a.assign(a.mul(.984375).add(r)),a}).setLayout({name:"LTC_Uv",type:"vec2",inputs:[{name:"N",type:"vec3"},{name:"V",type:"vec3"},{name:"roughness",type:"float"}]}),hN=N(({f:i})=>{const e=i.length();return Se(e.mul(e).add(i.z).div(e.add(1)),0)}).setLayout({name:"LTC_ClippedSphereFormFactor",type:"float",inputs:[{name:"f",type:"vec3"}]}),Kr=N(({v1:i,v2:e})=>{const t=i.dot(e),s=t.abs().toVar(),n=s.mul(.0145206).add(.4965155).mul(s).add(.8543985).toVar(),r=s.add(4.1616724).mul(s).add(3.417594).toVar(),o=n.div(r),a=t.greaterThan(0).select(o,Se(t.mul(t).oneMinus(),1e-7).inverseSqrt().mul(.5).sub(o));return i.cross(e).mul(a)}).setLayout({name:"LTC_EdgeVectorFormFactor",type:"vec3",inputs:[{name:"v1",type:"vec3"},{name:"v2",type:"vec3"}]}),xc=N(({N:i,V:e,P:t,mInv:s,p0:n,p1:r,p2:o,p3:a})=>{const u=r.sub(n).toVar(),l=a.sub(n).toVar(),c=u.cross(l),d=b().toVar();return H(c.dot(t.sub(n)).greaterThanEqual(0),()=>{const p=e.sub(i.mul(e.dot(i))).normalize(),f=i.cross(p).negate(),m=s.mul(Xe(p,f,i).transpose()).toVar(),y=m.mul(n.sub(t)).normalize().toVar(),x=m.mul(r.sub(t)).normalize().toVar(),S=m.mul(o.sub(t)).normalize().toVar(),R=m.mul(a.sub(t)).normalize().toVar(),C=b(0).toVar();C.addAssign(Kr({v1:y,v2:x})),C.addAssign(Kr({v1:x,v2:S})),C.addAssign(Kr({v1:S,v2:R})),C.addAssign(Kr({v1:R,v2:y})),d.assign(b(hN({f:C})))}),d}).setLayout({name:"LTC_Evaluate",type:"vec3",inputs:[{name:"N",type:"vec3"},{name:"V",type:"vec3"},{name:"P",type:"vec3"},{name:"mInv",type:"mat3"},{name:"p0",type:"vec3"},{name:"p1",type:"vec3"},{name:"p2",type:"vec3"},{name:"p3",type:"vec3"}]}),vo=1/6,Om=i=>X(vo,X(i,X(i,i.negate().add(3)).sub(3)).add(1)),Ja=i=>X(vo,X(i,X(i,X(3,i).sub(6))).add(4)),Gm=i=>X(vo,X(i,X(i,X(-3,i).add(3)).add(3)).add(1)),eu=i=>X(vo,mt(i,3)),bc=i=>Om(i).add(Ja(i)),Nc=i=>Gm(i).add(eu(i)),Sc=i=>Be(-1,Ja(i).div(Om(i).add(Ja(i)))),vc=i=>Be(1,eu(i).div(Gm(i).add(eu(i)))),Rc=(i,e,t)=>{const s=i.uvNode,n=X(s,e.zw).add(.5),r=Gt(n),o=us(n),a=bc(o.x),u=Nc(o.x),l=Sc(o.x),c=vc(o.x),d=Sc(o.y),p=vc(o.y),f=M(r.x.add(l),r.y.add(d)).sub(.5).mul(e.xy),m=M(r.x.add(c),r.y.add(d)).sub(.5).mul(e.xy),y=M(r.x.add(l),r.y.add(p)).sub(.5).mul(e.xy),x=M(r.x.add(c),r.y.add(p)).sub(.5).mul(e.xy),S=bc(o.y).mul(Be(a.mul(i.sample(f).level(t)),u.mul(i.sample(m).level(t)))),R=Nc(o.y).mul(Be(a.mul(i.sample(y).level(t)),u.mul(i.sample(x).level(t))));return S.add(R)},Rl=N(([i,e])=>{const t=M(i.size(_(e))),s=M(i.size(_(e.add(1)))),n=dt(1,t),r=dt(1,s),o=Rc(i,W(n,t),Gt(e)),a=Rc(i,W(r,s),ho(e));return us(e).mix(o,a)}),pN=N(([i,e])=>{const t=e.mul(sl(i));return Rl(i,t)}),Ac=N(([i,e,t,s,n])=>{const r=b(Yu(e.negate(),is(i),dt(1,s))),o=b(kt(n[0].xyz),kt(n[1].xyz),kt(n[2].xyz));return is(r).mul(t.mul(o))}).setLayout({name:"getVolumeTransmissionRay",type:"vec3",inputs:[{name:"n",type:"vec3"},{name:"v",type:"vec3"},{name:"thickness",type:"float"},{name:"ior",type:"float"},{name:"modelMatrix",type:"mat4"}]}),fN=N(([i,e])=>i.mul(xt(e.mul(2).sub(2),0,1))).setLayout({name:"applyIorToRoughness",type:"float",inputs:[{name:"roughness",type:"float"},{name:"ior",type:"float"}]}),mN=gl(),gN=gl(),Ec=N(([i,e,t],{material:s})=>{const r=(s.side===nt?mN:gN).sample(i),o=Ot(tn.x).mul(fN(e,t));return Rl(r,o)}),wc=N(([i,e,t])=>(H(t.notEqual(0),()=>{const s=co(e).negate().div(t);return Gu(s.negate().mul(i))}),b(1))).setLayout({name:"volumeAttenuation",type:"vec3",inputs:[{name:"transmissionDistance",type:"float"},{name:"attenuationColor",type:"vec3"},{name:"attenuationDistance",type:"float"}]}),yN=N(([i,e,t,s,n,r,o,a,u,l,c,d,p,f,m])=>{let y,x;if(m){y=W().toVar(),x=b().toVar();const P=c.sub(1).mul(m.mul(.025)),F=b(c.sub(P),c,c.add(P));le({start:0,end:3},({i:B})=>{const V=F.element(B),G=Ac(i,e,d,V,a),te=o.add(G),se=l.mul(u.mul(W(te,1))),ye=M(se.xy.div(se.w)).toVar();ye.addAssign(1),ye.divAssign(2),ye.assign(M(ye.x,ye.y.oneMinus()));const de=Ec(ye,t,V);y.element(B).assign(de.element(B)),y.a.addAssign(de.a),x.element(B).assign(s.element(B).mul(wc(kt(G),p,f).element(B)))}),y.a.divAssign(3)}else{const P=Ac(i,e,d,c,a),F=o.add(P),B=l.mul(u.mul(W(F,1))),V=M(B.xy.div(B.w)).toVar();V.addAssign(1),V.divAssign(2),V.assign(M(V.x,V.y.oneMinus())),y=Ec(V,t,c),x=s.mul(wc(kt(P),p,f))}const S=x.rgb.mul(y.rgb),R=i.dot(e).clamp(),C=b(Im({dotNV:R,specularColor:n,specularF90:r,roughness:t})),D=x.r.add(x.g,x.b).div(3);return W(C.oneMinus().mul(S),y.a.oneMinus().mul(D).oneMinus())}),_N=Xe(3.2404542,-.969266,.0556434,-1.5371385,1.8760108,-.2040259,-.4985314,.041556,1.0572252),TN=i=>{const e=i.sqrt();return b(1).add(e).div(b(1).sub(e))},Cc=(i,e)=>i.sub(e).div(i.add(e)).pow2(),xN=(i,e)=>{const t=i.mul(2*Math.PI*1e-9),s=b(54856e-17,44201e-17,52481e-17),n=b(1681e3,1795300,2208400),r=b(43278e5,93046e5,66121e5),o=g(9747e-17*Math.sqrt(2*Math.PI*45282e5)).mul(t.mul(2239900).add(e.x).cos()).mul(t.pow2().mul(-45282e5).exp());let a=s.mul(r.mul(2*Math.PI).sqrt()).mul(n.mul(t).add(e).cos()).mul(t.pow2().negate().mul(r).exp());return a=b(a.x.add(o),a.y,a.z).div(10685e-11),_N.mul(a)},bN=N(({outsideIOR:i,eta2:e,cosTheta1:t,thinFilmThickness:s,baseF0:n})=>{const r=ne(i,e,Wt(0,.03,s)),a=i.div(r).pow2().mul(t.pow2().oneMinus()).oneMinus();H(a.lessThan(0),()=>b(1));const u=a.sqrt(),l=Cc(r,i),c=Un({f0:l,f90:1,dotVH:t}),d=c.oneMinus(),p=r.lessThan(i).select(Math.PI,0),f=g(Math.PI).sub(p),m=TN(n.clamp(0,.9999)),y=Cc(m,r.toVec3()),x=Un({f0:y,f90:1,dotVH:u}),S=b(m.x.lessThan(r).select(Math.PI,0),m.y.lessThan(r).select(Math.PI,0),m.z.lessThan(r).select(Math.PI,0)),R=r.mul(s,u,2),C=b(f).add(S),D=c.mul(x).clamp(1e-5,.9999),P=D.sqrt(),F=d.pow2().mul(x).div(b(1).sub(D)),V=c.add(F).toVar(),G=F.sub(d).toVar();return le({start:1,end:2,condition:"<=",name:"m"},({m:te})=>{G.mulAssign(P);const se=xN(g(te).mul(R),g(te).mul(C)).mul(2);V.addAssign(G.mul(se))}),V.max(b(0))}).setLayout({name:"evalIridescence",type:"vec3",inputs:[{name:"outsideIOR",type:"float"},{name:"eta2",type:"float"},{name:"cosTheta1",type:"float"},{name:"thinFilmThickness",type:"float"},{name:"baseF0",type:"vec3"}]}),NN=N(({normal:i,viewDir:e,roughness:t})=>{const s=i.dot(e).saturate(),n=t.pow2(),r=ke(t.lessThan(.25),g(-339.2).mul(n).add(g(161.4).mul(t)).sub(25.9),g(-8.48).mul(n).add(g(14.3).mul(t)).sub(9.95)),o=ke(t.lessThan(.25),g(44).mul(n).sub(g(23.7).mul(t)).add(3.26),g(1.97).mul(n).sub(g(3.27).mul(t)).add(.72));return ke(t.lessThan(.25),0,g(.1).mul(t).sub(.025)).add(r.mul(s).add(o).exp()).mul(1/Math.PI).saturate()}),Vo=b(.04),Oo=g(1);class km extends So{constructor(e=!1,t=!1,s=!1,n=!1,r=!1,o=!1){super(),this.clearcoat=e,this.sheen=t,this.iridescence=s,this.anisotropy=n,this.transmission=r,this.dispersion=o,this.clearcoatRadiance=null,this.clearcoatSpecularDirect=null,this.clearcoatSpecularIndirect=null,this.sheenSpecularDirect=null,this.sheenSpecularIndirect=null,this.iridescenceFresnel=null,this.iridescenceF0=null}start(e){if(this.clearcoat===!0&&(this.clearcoatRadiance=b().toVar("clearcoatRadiance"),this.clearcoatSpecularDirect=b().toVar("clearcoatSpecularDirect"),this.clearcoatSpecularIndirect=b().toVar("clearcoatSpecularIndirect")),this.sheen===!0&&(this.sheenSpecularDirect=b().toVar("sheenSpecularDirect"),this.sheenSpecularIndirect=b().toVar("sheenSpecularIndirect")),this.iridescence===!0){const t=ue.dot(Te).clamp();this.iridescenceFresnel=bN({outsideIOR:g(1),eta2:Bu,cosTheta1:t,thinFilmThickness:Pu,baseF0:Je}),this.iridescenceF0=Vm({f:this.iridescenceFresnel,f90:1,dotVH:t})}if(this.transmission===!0){const t=zt,s=uf.sub(zt).normalize(),n=Cs,r=e.context;r.backdrop=yN(n,s,Vt,re,Je,Cr,t,gt,St,Gn,mr,Fu,Du,Lu,this.dispersion?Uu:null),r.backdropAlpha=zi,re.a.mulAssign(ne(1,r.backdrop.a,zi))}super.start(e)}computeMultiscattering(e,t,s){const n=ue.dot(Te).clamp(),r=vl({roughness:Vt,dotNV:n}),a=(this.iridescenceF0?uo.mix(Je,this.iridescenceF0):Je).mul(r.x).add(s.mul(r.y)),l=r.x.add(r.y).oneMinus(),c=Je.add(Je.oneMinus().mul(.047619)),d=a.mul(c).div(l.mul(c).oneMinus());e.addAssign(a),t.addAssign(d.mul(l))}direct({lightDirection:e,lightColor:t,reflectedLight:s}){const r=ue.dot(e).clamp().mul(t);if(this.sheen===!0&&this.sheenSpecularDirect.addAssign(r.mul(cN({lightDirection:e}))),this.clearcoat===!0){const a=qs.dot(e).clamp().mul(t);this.clearcoatSpecularDirect.addAssign(a.mul(Za({lightDirection:e,f0:Vo,f90:Oo,roughness:wr,normalView:qs})))}s.directDiffuse.addAssign(r.mul(sn({diffuseColor:re.rgb}))),s.directSpecular.addAssign(r.mul(Za({lightDirection:e,f0:Je,f90:1,roughness:Vt,iridescence:this.iridescence,f:this.iridescenceFresnel,USE_IRIDESCENCE:this.iridescence,USE_ANISOTROPY:this.anisotropy})))}directRectArea({lightColor:e,lightPosition:t,halfWidth:s,halfHeight:n,reflectedLight:r,ltc_1:o,ltc_2:a}){const u=t.add(s).sub(n),l=t.sub(s).sub(n),c=t.sub(s).add(n),d=t.add(s).add(n),p=ue,f=Te,m=Ee.toVar(),y=dN({N:p,V:f,roughness:Vt}),x=o.sample(y).toVar(),S=a.sample(y).toVar(),R=Xe(b(x.x,0,x.y),b(0,1,0),b(x.z,0,x.w)).toVar(),C=Je.mul(S.x).add(Je.oneMinus().mul(S.y)).toVar();r.directSpecular.addAssign(e.mul(C).mul(xc({N:p,V:f,P:m,mInv:R,p0:u,p1:l,p2:c,p3:d}))),r.directDiffuse.addAssign(e.mul(re).mul(xc({N:p,V:f,P:m,mInv:Xe(1,0,0,0,1,0,0,0,1),p0:u,p1:l,p2:c,p3:d})))}indirect(e){this.indirectDiffuse(e),this.indirectSpecular(e),this.ambientOcclusion(e)}indirectDiffuse(e){const{irradiance:t,reflectedLight:s}=e.context;s.indirectDiffuse.addAssign(t.mul(sn({diffuseColor:re})))}indirectSpecular(e){const{radiance:t,iblIrradiance:s,reflectedLight:n}=e.context;if(this.sheen===!0&&this.sheenSpecularIndirect.addAssign(s.mul(Hs,NN({normal:ue,viewDir:Te,roughness:ao}))),this.clearcoat===!0){const c=qs.dot(Te).clamp(),d=Im({dotNV:c,specularColor:Vo,specularF90:Oo,roughness:wr});this.clearcoatSpecularIndirect.addAssign(this.clearcoatRadiance.mul(d))}const r=b().toVar("singleScattering"),o=b().toVar("multiScattering"),a=s.mul(1/Math.PI);this.computeMultiscattering(r,o,Cr);const u=r.add(o),l=re.mul(u.r.max(u.g).max(u.b).oneMinus());n.indirectSpecular.addAssign(t.mul(r)),n.indirectSpecular.addAssign(o.mul(a)),n.indirectDiffuse.addAssign(l.mul(a))}ambientOcclusion(e){const{ambientOcclusion:t,reflectedLight:s}=e.context,r=ue.dot(Te).clamp().add(t),o=Vt.mul(-16).oneMinus().negate().exp2(),a=t.sub(r.pow(o).oneMinus()).clamp();this.clearcoat===!0&&this.clearcoatSpecularIndirect.mulAssign(t),this.sheen===!0&&this.sheenSpecularIndirect.mulAssign(t),s.indirectDiffuse.mulAssign(t),s.indirectSpecular.mulAssign(a)}finish({context:e}){const{outgoingLight:t}=e;if(this.clearcoat===!0){const s=qs.dot(Te).clamp(),n=Un({dotVH:s,f0:Vo,f90:Oo}),r=t.mul(Oi.mul(n).oneMinus()).add(this.clearcoatSpecularDirect.add(this.clearcoatSpecularIndirect).mul(Oi));t.assign(r)}if(this.sheen===!0){const s=Hs.r.max(Hs.g).max(Hs.b).mul(.157).oneMinus(),n=t.mul(s).add(this.sheenSpecularDirect,this.sheenSpecularIndirect);t.assign(n)}}}const Mc=g(1),tu=g(-2),Qr=g(.8),Go=g(-1),Zr=g(.4),ko=g(2),Jr=g(.305),zo=g(3),Bc=g(.21),SN=g(4),Pc=g(4),vN=g(16),RN=N(([i])=>{const e=b(ge(i)).toVar(),t=g(-1).toVar();return H(e.x.greaterThan(e.z),()=>{H(e.x.greaterThan(e.y),()=>{t.assign(ke(i.x.greaterThan(0),0,3))}).Else(()=>{t.assign(ke(i.y.greaterThan(0),1,4))})}).Else(()=>{H(e.z.greaterThan(e.y),()=>{t.assign(ke(i.z.greaterThan(0),2,5))}).Else(()=>{t.assign(ke(i.y.greaterThan(0),1,4))})}),t}).setLayout({name:"getFace",type:"float",inputs:[{name:"direction",type:"vec3"}]}),AN=N(([i,e])=>{const t=M().toVar();return H(e.equal(0),()=>{t.assign(M(i.z,i.y).div(ge(i.x)))}).ElseIf(e.equal(1),()=>{t.assign(M(i.x.negate(),i.z.negate()).div(ge(i.y)))}).ElseIf(e.equal(2),()=>{t.assign(M(i.x.negate(),i.y).div(ge(i.z)))}).ElseIf(e.equal(3),()=>{t.assign(M(i.z.negate(),i.y).div(ge(i.x)))}).ElseIf(e.equal(4),()=>{t.assign(M(i.x.negate(),i.z).div(ge(i.y)))}).Else(()=>{t.assign(M(i.x,i.y).div(ge(i.z)))}),X(.5,t.add(1))}).setLayout({name:"getUV",type:"vec2",inputs:[{name:"direction",type:"vec3"},{name:"face",type:"float"}]}),EN=N(([i])=>{const e=g(0).toVar();return H(i.greaterThanEqual(Qr),()=>{e.assign(Mc.sub(i).mul(Go.sub(tu)).div(Mc.sub(Qr)).add(tu))}).ElseIf(i.greaterThanEqual(Zr),()=>{e.assign(Qr.sub(i).mul(ko.sub(Go)).div(Qr.sub(Zr)).add(Go))}).ElseIf(i.greaterThanEqual(Jr),()=>{e.assign(Zr.sub(i).mul(zo.sub(ko)).div(Zr.sub(Jr)).add(ko))}).ElseIf(i.greaterThanEqual(Bc),()=>{e.assign(Jr.sub(i).mul(SN.sub(zo)).div(Jr.sub(Bc)).add(zo))}).Else(()=>{e.assign(g(-2).mul(Ot(X(1.16,i))))}),e}).setLayout({name:"roughnessToMip",type:"float",inputs:[{name:"roughness",type:"float"}]}),zm=N(([i,e])=>{const t=i.toVar();t.assign(X(2,t).sub(1));const s=b(t,1).toVar();return H(e.equal(0),()=>{s.assign(s.zyx)}).ElseIf(e.equal(1),()=>{s.assign(s.xzy),s.xz.mulAssign(-1)}).ElseIf(e.equal(2),()=>{s.x.mulAssign(-1)}).ElseIf(e.equal(3),()=>{s.assign(s.zyx),s.xz.mulAssign(-1)}).ElseIf(e.equal(4),()=>{s.assign(s.xzy),s.xy.mulAssign(-1)}).ElseIf(e.equal(5),()=>{s.z.mulAssign(-1)}),s}).setLayout({name:"getDirection",type:"vec3",inputs:[{name:"uv",type:"vec2"},{name:"face",type:"float"}]}),$m=N(([i,e,t,s,n,r])=>{const o=g(t),a=b(e),u=xt(EN(o),tu,r),l=us(u),c=Gt(u),d=b(su(i,a,c,s,n,r)).toVar();return H(l.notEqual(0),()=>{const p=b(su(i,a,c.add(1),s,n,r)).toVar();d.assign(ne(d,p,l))}),d}),su=N(([i,e,t,s,n,r])=>{const o=g(t).toVar(),a=b(e),u=g(RN(a)).toVar(),l=g(Se(Pc.sub(o),0)).toVar();o.assign(Se(o,Pc));const c=g(Fn(o)).toVar(),d=M(AN(a,u).mul(c.sub(2)).add(1)).toVar();return H(u.greaterThan(2),()=>{d.y.addAssign(c),u.subAssign(3)}),d.x.addAssign(u.mul(c)),d.x.addAssign(l.mul(X(3,vN))),d.y.addAssign(X(4,Fn(r).sub(c))),d.x.mulAssign(s),d.y.mulAssign(n),i.sample(d).grad(M(),M())}),$o=N(({envMap:i,mipInt:e,outputDirection:t,theta:s,axis:n,CUBEUV_TEXEL_WIDTH:r,CUBEUV_TEXEL_HEIGHT:o,CUBEUV_MAX_MIP:a})=>{const u=Zt(s),l=t.mul(u).add(n.cross(t).mul(lt(s))).add(n.mul(n.dot(t).mul(u.oneMinus())));return su(i,l,e,r,o,a)}),Wm=N(({n:i,latitudinal:e,poleAxis:t,outputDirection:s,weights:n,samples:r,dTheta:o,mipInt:a,envMap:u,CUBEUV_TEXEL_WIDTH:l,CUBEUV_TEXEL_HEIGHT:c,CUBEUV_MAX_MIP:d})=>{const p=b(ke(e,t,mo(t,s))).toVar();H(p.equal(b(0)),()=>{p.assign(b(s.z,0,s.x.negate()))}),p.assign(is(p));const f=b().toVar();return f.addAssign(n.element(0).mul($o({theta:0,axis:p,outputDirection:s,mipInt:a,envMap:u,CUBEUV_TEXEL_WIDTH:l,CUBEUV_TEXEL_HEIGHT:c,CUBEUV_MAX_MIP:d}))),le({start:_(1),end:i},({i:m})=>{H(m.greaterThanEqual(r),()=>{ym()});const y=g(o.mul(g(m))).toVar();f.addAssign(n.element(m).mul($o({theta:y.mul(-1),axis:p,outputDirection:s,mipInt:a,envMap:u,CUBEUV_TEXEL_WIDTH:l,CUBEUV_TEXEL_HEIGHT:c,CUBEUV_MAX_MIP:d}))),f.addAssign(n.element(m).mul($o({theta:y,axis:p,outputDirection:s,mipInt:a,envMap:u,CUBEUV_TEXEL_WIDTH:l,CUBEUV_TEXEL_HEIGHT:c,CUBEUV_MAX_MIP:d})))}),W(f,1)}),vn=4,Fc=[.125,.215,.35,.446,.526,.582],zs=20,Wo=new Cd(-1,1,1,-1,0,1),wN=new xr(90,1),Lc=new jt;let Ho=null,qo=0,jo=0;const Gs=(1+Math.sqrt(5))/2,ln=1/Gs,Dc=[new j(-Gs,ln,0),new j(Gs,ln,0),new j(-ln,0,Gs),new j(ln,0,Gs),new j(0,Gs,-ln),new j(0,Gs,ln),new j(-1,1,-1),new j(1,1,-1),new j(-1,1,1),new j(1,1,1)],CN=new j,Hm=new WeakMap,MN=[3,1,5,0,4,2],Xo=zm(ce(),as("faceIndex")).normalize(),Al=b(Xo.x,Xo.y,Xo.z);class BN{constructor(e){this._renderer=e,this._pingPongRenderTarget=null,this._lodMax=0,this._cubeSize=0,this._lodPlanes=[],this._sizeLods=[],this._sigmas=[],this._lodMeshes=[],this._blurMaterial=null,this._cubemapMaterial=null,this._equirectMaterial=null,this._backgroundBox=null}get _hasInitialized(){return this._renderer.hasInitialized()}fromScene(e,t=0,s=.1,n=100,r={}){const{size:o=256,position:a=CN,renderTarget:u=null}=r;if(this._setSize(o),this._hasInitialized===!1){console.warn("THREE.PMREMGenerator: .fromScene() called before the backend is initialized. Try using .fromSceneAsync() instead.");const c=u||this._allocateTarget();return r.renderTarget=c,this.fromSceneAsync(e,t,s,n,r),c}Ho=this._renderer.getRenderTarget(),qo=this._renderer.getActiveCubeFace(),jo=this._renderer.getActiveMipmapLevel();const l=u||this._allocateTarget();return l.depthBuffer=!0,this._init(l),this._sceneToCubeUV(e,s,n,l,a),t>0&&this._blur(l,0,0,t),this._applyPMREM(l),this._cleanup(l),l}async fromSceneAsync(e,t=0,s=.1,n=100,r={}){return this._hasInitialized===!1&&await this._renderer.init(),this.fromScene(e,t,s,n,r)}fromEquirectangular(e,t=null){if(this._hasInitialized===!1){console.warn("THREE.PMREMGenerator: .fromEquirectangular() called before the backend is initialized. Try using .fromEquirectangularAsync() instead."),this._setSizeFromTexture(e);const s=t||this._allocateTarget();return this.fromEquirectangularAsync(e,s),s}return this._fromTexture(e,t)}async fromEquirectangularAsync(e,t=null){return this._hasInitialized===!1&&await this._renderer.init(),this._fromTexture(e,t)}fromCubemap(e,t=null){if(this._hasInitialized===!1){console.warn("THREE.PMREMGenerator: .fromCubemap() called before the backend is initialized. Try using .fromCubemapAsync() instead."),this._setSizeFromTexture(e);const s=t||this._allocateTarget();return this.fromCubemapAsync(e,t),s}return this._fromTexture(e,t)}async fromCubemapAsync(e,t=null){return this._hasInitialized===!1&&await this._renderer.init(),this._fromTexture(e,t)}async compileCubemapShader(){this._cubemapMaterial===null&&(this._cubemapMaterial=Ic(),await this._compileMaterial(this._cubemapMaterial))}async compileEquirectangularShader(){this._equirectMaterial===null&&(this._equirectMaterial=Vc(),await this._compileMaterial(this._equirectMaterial))}dispose(){this._dispose(),this._cubemapMaterial!==null&&this._cubemapMaterial.dispose(),this._equirectMaterial!==null&&this._equirectMaterial.dispose(),this._backgroundBox!==null&&(this._backgroundBox.geometry.dispose(),this._backgroundBox.material.dispose())}_setSizeFromTexture(e){e.mapping===Mi||e.mapping===Bi?this._setSize(e.image.length===0?16:e.image[0].width||e.image[0].image.width):this._setSize(e.image.width/4)}_setSize(e){this._lodMax=Math.floor(Math.log2(e)),this._cubeSize=Math.pow(2,this._lodMax)}_dispose(){this._blurMaterial!==null&&this._blurMaterial.dispose(),this._pingPongRenderTarget!==null&&this._pingPongRenderTarget.dispose();for(let e=0;e<this._lodPlanes.length;e++)this._lodPlanes[e].dispose()}_cleanup(e){this._renderer.setRenderTarget(Ho,qo,jo),e.scissorTest=!1,ei(e,0,0,e.width,e.height)}_fromTexture(e,t){this._setSizeFromTexture(e),Ho=this._renderer.getRenderTarget(),qo=this._renderer.getActiveCubeFace(),jo=this._renderer.getActiveMipmapLevel();const s=t||this._allocateTarget();return this._init(s),this._textureToCubeUV(e,s),this._applyPMREM(s),this._cleanup(s),s}_allocateTarget(){const e=3*Math.max(this._cubeSize,112),t=4*this._cubeSize;return Uc(e,t)}_init(e){if(this._pingPongRenderTarget===null||this._pingPongRenderTarget.width!==e.width||this._pingPongRenderTarget.height!==e.height){this._pingPongRenderTarget!==null&&this._dispose(),this._pingPongRenderTarget=Uc(e.width,e.height);const{_lodMax:t}=this;({sizeLods:this._sizeLods,lodPlanes:this._lodPlanes,sigmas:this._sigmas,lodMeshes:this._lodMeshes}=PN(t)),this._blurMaterial=FN(t,e.width,e.height)}}async _compileMaterial(e){const t=new Ss(this._lodPlanes[0],e);await this._renderer.compile(t,Wo)}_sceneToCubeUV(e,t,s,n,r){const o=wN;o.near=t,o.far=s;const a=[1,1,1,1,-1,1],u=[1,-1,1,-1,1,-1],l=this._renderer,c=l.autoClear;l.getClearColor(Lc),l.autoClear=!1;let d=this._backgroundBox;if(d===null){const m=new ks({name:"PMREM.Background",side:nt,depthWrite:!1,depthTest:!1});d=new Ss(new Md,m)}let p=!1;const f=e.background;f?f.isColor&&(d.material.color.copy(f),e.background=null,p=!0):(d.material.color.copy(Lc),p=!0),l.setRenderTarget(n),l.clear(),p&&l.render(d,o);for(let m=0;m<6;m++){const y=m%3;y===0?(o.up.set(0,a[m],0),o.position.set(r.x,r.y,r.z),o.lookAt(r.x+u[m],r.y,r.z)):y===1?(o.up.set(0,0,a[m]),o.position.set(r.x,r.y,r.z),o.lookAt(r.x,r.y+u[m],r.z)):(o.up.set(0,a[m],0),o.position.set(r.x,r.y,r.z),o.lookAt(r.x,r.y,r.z+u[m]));const x=this._cubeSize;ei(n,y*x,m>2?x:0,x,x),l.render(e,o)}l.autoClear=c,e.background=f}_textureToCubeUV(e,t){const s=this._renderer,n=e.mapping===Mi||e.mapping===Bi;n?this._cubemapMaterial===null&&(this._cubemapMaterial=Ic(e)):this._equirectMaterial===null&&(this._equirectMaterial=Vc(e));const r=n?this._cubemapMaterial:this._equirectMaterial;r.fragmentNode.value=e;const o=this._lodMeshes[0];o.material=r;const a=this._cubeSize;ei(t,0,0,3*a,2*a),s.setRenderTarget(t),s.render(o,Wo)}_applyPMREM(e){const t=this._renderer,s=t.autoClear;t.autoClear=!1;const n=this._lodPlanes.length;for(let r=1;r<n;r++){const o=Math.sqrt(this._sigmas[r]*this._sigmas[r]-this._sigmas[r-1]*this._sigmas[r-1]),a=Dc[(n-r-1)%Dc.length];this._blur(e,r-1,r,o,a)}t.autoClear=s}_blur(e,t,s,n,r){const o=this._pingPongRenderTarget;this._halfBlur(e,o,t,s,n,"latitudinal",r),this._halfBlur(o,e,s,s,n,"longitudinal",r)}_halfBlur(e,t,s,n,r,o,a){const u=this._renderer,l=this._blurMaterial;o!=="latitudinal"&&o!=="longitudinal"&&console.error("blur direction must be either latitudinal or longitudinal!");const c=3,d=this._lodMeshes[n];d.material=l;const p=Hm.get(l),f=this._sizeLods[s]-1,m=isFinite(r)?Math.PI/(2*f):2*Math.PI/(2*zs-1),y=r/m,x=isFinite(r)?1+Math.floor(c*y):zs;x>zs&&console.warn(`sigmaRadians, ${r}, is too large and will clip, as it requested ${x} samples when the maximum is set to ${zs}`);const S=[];let R=0;for(let B=0;B<zs;++B){const V=B/y,G=Math.exp(-V*V/2);S.push(G),B===0?R+=G:B<x&&(R+=2*G)}for(let B=0;B<S.length;B++)S[B]=S[B]/R;e.texture.frame=(e.texture.frame||0)+1,p.envMap.value=e.texture,p.samples.value=x,p.weights.array=S,p.latitudinal.value=o==="latitudinal"?1:0,a&&(p.poleAxis.value=a);const{_lodMax:C}=this;p.dTheta.value=m,p.mipInt.value=C-s;const D=this._sizeLods[n],P=3*D*(n>C-vn?n-C+vn:0),F=4*(this._cubeSize-D);ei(t,P,F,3*D,2*D),u.setRenderTarget(t),u.render(d,Wo)}}function PN(i){const e=[],t=[],s=[],n=[];let r=i;const o=i-vn+1+Fc.length;for(let a=0;a<o;a++){const u=Math.pow(2,r);t.push(u);let l=1/u;a>i-vn?l=Fc[a-i+vn-1]:a===0&&(l=0),s.push(l);const c=1/(u-2),d=-c,p=1+c,f=[d,d,p,d,p,p,d,d,p,p,d,p],m=6,y=6,x=3,S=2,R=1,C=new Float32Array(x*y*m),D=new Float32Array(S*y*m),P=new Float32Array(R*y*m);for(let B=0;B<m;B++){const V=B%3*2/3-1,G=B>2?0:-1,te=[V,G,0,V+2/3,G,0,V+2/3,G+1,0,V,G,0,V+2/3,G+1,0,V,G+1,0],se=MN[B];C.set(te,x*y*se),D.set(f,S*y*se);const ye=[se,se,se,se,se,se];P.set(ye,R*y*se)}const F=new Bd;F.setAttribute("position",new yi(C,x)),F.setAttribute("uv",new yi(D,S)),F.setAttribute("faceIndex",new yi(P,R)),e.push(F),n.push(new Ss(F,null)),r>vn&&r--}return{lodPlanes:e,sizeLods:t,sigmas:s,lodMeshes:n}}function Uc(i,e){const t={magFilter:rs,minFilter:rs,generateMipmaps:!1,type:et,format:Ct,colorSpace:Ad},s=new As(i,e,t);return s.texture.mapping=fa,s.texture.name="PMREM.cubeUv",s.texture.isPMREMTexture=!0,s.scissorTest=!0,s}function ei(i,e,t,s,n){i.viewport.set(e,t,s,n),i.scissor.set(e,t,s,n)}function El(i){const e=new we;return e.depthTest=!1,e.depthWrite=!1,e.blending=br,e.name=`PMREM_${i}`,e}function FN(i,e,t){const s=qe(new Array(zs).fill(0)),n=$(new j(0,1,0)),r=$(0),o=g(zs),a=$(0),u=$(1),l=Q(null),c=$(0),d=g(1/e),p=g(1/t),f=g(i),m={n:o,latitudinal:a,weights:s,poleAxis:n,outputDirection:Al,dTheta:r,samples:u,envMap:l,mipInt:c,CUBEUV_TEXEL_WIDTH:d,CUBEUV_TEXEL_HEIGHT:p,CUBEUV_MAX_MIP:f},y=El("blur");return y.fragmentNode=Wm({...m,latitudinal:a.equal(1)}),Hm.set(y,m),y}function Ic(i){const e=El("cubemap");return e.fragmentNode=Dn(i,Al),e}function Vc(i){const e=El("equirect");return e.fragmentNode=Q(i,bl(Al),0),e}const Oc=new WeakMap;function LN(i){const e=Math.log2(i)-2,t=1/i;return{texelWidth:1/(3*Math.max(Math.pow(2,e),7*16)),texelHeight:t,maxMip:e}}function DN(i,e,t){const s=UN(e);let n=s.get(i);if((n!==void 0?n.pmremVersion:-1)!==i.pmremVersion){const o=i.image;if(i.isCubeTexture)if(VN(o))n=t.fromCubemap(i,n);else return null;else if(ON(o))n=t.fromEquirectangular(i,n);else return null;n.pmremVersion=i.pmremVersion,s.set(i,n)}return n.texture}function UN(i){let e=Oc.get(i);return e===void 0&&(e=new WeakMap,Oc.set(i,e)),e}class IN extends Ce{static get type(){return"PMREMNode"}constructor(e,t=null,s=null){super("vec3"),this._value=e,this._pmrem=null,this.uvNode=t,this.levelNode=s,this._generator=null;const n=new du;n.isRenderTargetTexture=!0,this._texture=Q(n),this._width=$(0),this._height=$(0),this._maxMip=$(0),this.updateBeforeType=Y.RENDER}set value(e){this._value=e,this._pmrem=null}get value(){return this._value}updateFromTexture(e){const t=LN(e.image.height);this._texture.value=e,this._width.value=t.texelWidth,this._height.value=t.texelHeight,this._maxMip.value=t.maxMip}updateBefore(e){let t=this._pmrem;const s=t?t.pmremVersion:-1,n=this._value;s!==n.pmremVersion&&(n.isPMREMTexture===!0?t=n:t=DN(n,e.renderer,this._generator),t!==null&&(this._pmrem=t,this.updateFromTexture(t)))}setup(e){this._generator===null&&(this._generator=new BN(e.renderer)),this.updateBefore(e);let t=this.uvNode;t===null&&e.context.getUV&&(t=e.context.getUV(this)),t=cl.mul(b(t.x,t.y.negate(),t.z));let s=this.levelNode;return s===null&&e.context.getTextureLevel&&(s=e.context.getTextureLevel(this)),$m(this._texture,t,s,this._width,this._height,this._maxMip)}dispose(){super.dispose(),this._generator!==null&&this._generator.dispose()}}function VN(i){if(i==null)return!1;let e=0;const t=6;for(let s=0;s<t;s++)i[s]!==void 0&&e++;return e===t}function ON(i){return i==null?!1:i.height>0}const wl=q(IN).setParameterLength(1,3),Gc=new WeakMap;class GN extends zn{static get type(){return"EnvironmentNode"}constructor(e=null){super(),this.envNode=e}setup(e){const{material:t}=e;let s=this.envNode;if(s.isTextureNode||s.isMaterialReferenceNode){const d=s.isTextureNode?s.value:t[s.property];let p=Gc.get(d);p===void 0&&(p=wl(d),Gc.set(d,p)),s=p}const r=t.useAnisotropy===!0||t.anisotropy>0?Pf:ue,o=s.context(kc(Vt,r)).mul(Ri),a=s.context(kN(Cs)).mul(Math.PI).mul(Ri),u=gr(o),l=gr(a);e.context.radiance.addAssign(u),e.context.iblIrradiance.addAssign(l);const c=e.context.lightingModel.clearcoatRadiance;if(c){const d=s.context(kc(wr,qs)).mul(Ri),p=gr(d);c.addAssign(p)}}}const kc=(i,e)=>{let t=null;return{getUV:()=>(t===null&&(t=Te.negate().reflect(e),t=i.mul(i).mix(t,e).normalize(),t=t.transformDirection(St)),t),getTextureLevel:()=>i}},kN=i=>({getUV:()=>i,getTextureLevel:()=>g(1)}),zN=new Ey;class qm extends we{static get type(){return"MeshStandardNodeMaterial"}constructor(e){super(),this.isMeshStandardNodeMaterial=!0,this.lights=!0,this.emissiveNode=null,this.metalnessNode=null,this.roughnessNode=null,this.setDefaultValues(zN),this.setValues(e)}setupEnvironment(e){let t=super.setupEnvironment(e);return t===null&&e.environmentNode&&(t=e.environmentNode),t?new GN(t):null}setupLightingModel(){return new km}setupSpecular(){const e=ne(b(.04),re.rgb,Er);Je.assign(e),Cr.assign(1)}setupVariants(){const e=this.metalnessNode?g(this.metalnessNode):Gf;Er.assign(e);let t=this.roughnessNode?g(this.roughnessNode):Of;t=Sl({roughness:t}),Vt.assign(t),this.setupSpecular(),re.assign(W(re.rgb.mul(e.oneMinus()),re.a))}copy(e){return this.emissiveNode=e.emissiveNode,this.metalnessNode=e.metalnessNode,this.roughnessNode=e.roughnessNode,super.copy(e)}}const $N=new n_;class WN extends qm{static get type(){return"MeshPhysicalNodeMaterial"}constructor(e){super(),this.isMeshPhysicalNodeMaterial=!0,this.clearcoatNode=null,this.clearcoatRoughnessNode=null,this.clearcoatNormalNode=null,this.sheenNode=null,this.sheenRoughnessNode=null,this.iridescenceNode=null,this.iridescenceIORNode=null,this.iridescenceThicknessNode=null,this.specularIntensityNode=null,this.specularColorNode=null,this.iorNode=null,this.transmissionNode=null,this.thicknessNode=null,this.attenuationDistanceNode=null,this.attenuationColorNode=null,this.dispersionNode=null,this.anisotropyNode=null,this.setDefaultValues($N),this.setValues(e)}get useClearcoat(){return this.clearcoat>0||this.clearcoatNode!==null}get useIridescence(){return this.iridescence>0||this.iridescenceNode!==null}get useSheen(){return this.sheen>0||this.sheenNode!==null}get useAnisotropy(){return this.anisotropy>0||this.anisotropyNode!==null}get useTransmission(){return this.transmission>0||this.transmissionNode!==null}get useDispersion(){return this.dispersion>0||this.dispersionNode!==null}setupSpecular(){const e=this.iorNode?g(this.iorNode):em;mr.assign(e),Je.assign(ne(rt(qu(mr.sub(1).div(mr.add(1))).mul(Vf),b(1)).mul(Qa),re.rgb,Er)),Cr.assign(ne(Qa,1,Er))}setupLightingModel(){return new km(this.useClearcoat,this.useSheen,this.useIridescence,this.useAnisotropy,this.useTransmission,this.useDispersion)}setupVariants(e){if(super.setupVariants(e),this.useClearcoat){const t=this.clearcoatNode?g(this.clearcoatNode):zf,s=this.clearcoatRoughnessNode?g(this.clearcoatRoughnessNode):$f;Oi.assign(t),wr.assign(Sl({roughness:s}))}if(this.useSheen){const t=this.sheenNode?b(this.sheenNode):qf,s=this.sheenRoughnessNode?g(this.sheenRoughnessNode):jf;Hs.assign(t),ao.assign(s)}if(this.useIridescence){const t=this.iridescenceNode?g(this.iridescenceNode):Yf,s=this.iridescenceIORNode?g(this.iridescenceIORNode):Kf,n=this.iridescenceThicknessNode?g(this.iridescenceThicknessNode):Qf;uo.assign(t),Bu.assign(s),Pu.assign(n)}if(this.useAnisotropy){const t=(this.anisotropyNode?M(this.anisotropyNode):Xf).toVar();ps.assign(t.length()),H(ps.equal(0),()=>{t.assign(M(1,0))}).Else(()=>{t.divAssign(M(ps)),ps.assign(ps.saturate())}),Gi.assign(ps.pow2().mix(Vt.pow2(),1)),fr.assign(js[0].mul(t.x).add(js[1].mul(t.y))),Js.assign(js[1].mul(t.x).sub(js[0].mul(t.y)))}if(this.useTransmission){const t=this.transmissionNode?g(this.transmissionNode):Zf,s=this.thicknessNode?g(this.thicknessNode):Jf,n=this.attenuationDistanceNode?g(this.attenuationDistanceNode):tm,r=this.attenuationColorNode?b(this.attenuationColorNode):sm;if(zi.assign(t),Fu.assign(s),Lu.assign(n),Du.assign(r),this.useDispersion){const o=this.dispersionNode?g(this.dispersionNode):um;Uu.assign(o)}}}setupClearcoatNormal(){return this.clearcoatNormalNode?b(this.clearcoatNormalNode):Wf}setup(e){e.context.setupClearcoatNormal=()=>Mn(this.setupClearcoatNormal(e),"NORMAL","vec3"),super.setup(e)}copy(e){return this.clearcoatNode=e.clearcoatNode,this.clearcoatRoughnessNode=e.clearcoatRoughnessNode,this.clearcoatNormalNode=e.clearcoatNormalNode,this.sheenNode=e.sheenNode,this.sheenRoughnessNode=e.sheenRoughnessNode,this.iridescenceNode=e.iridescenceNode,this.iridescenceIORNode=e.iridescenceIORNode,this.iridescenceThicknessNode=e.iridescenceThicknessNode,this.specularIntensityNode=e.specularIntensityNode,this.specularColorNode=e.specularColorNode,this.transmissionNode=e.transmissionNode,this.thicknessNode=e.thicknessNode,this.attenuationDistanceNode=e.attenuationDistanceNode,this.attenuationColorNode=e.attenuationColorNode,this.dispersionNode=e.dispersionNode,this.anisotropyNode=e.anisotropyNode,super.copy(e)}}const HN=N(({normal:i,lightDirection:e,builder:t})=>{const s=i.dot(e),n=M(s.mul(.5).add(.5),0);if(t.material.gradientMap){const r=ts("gradientMap","texture").context({getUV:()=>n});return b(r.r)}else{const r=n.fwidth().mul(.5);return ne(b(.7),b(1),Wt(g(.7).sub(r.x),g(.7).add(r.x),n.x))}});class qN extends So{direct({lightDirection:e,lightColor:t,reflectedLight:s},n){const r=HN({normal:yo,lightDirection:e,builder:n}).mul(t);s.directDiffuse.addAssign(r.mul(sn({diffuseColor:re.rgb})))}indirect(e){const{ambientOcclusion:t,irradiance:s,reflectedLight:n}=e.context;n.indirectDiffuse.addAssign(s.mul(sn({diffuseColor:re}))),n.indirectDiffuse.mulAssign(t)}}const jN=new r_;class XN extends we{static get type(){return"MeshToonNodeMaterial"}constructor(e){super(),this.isMeshToonNodeMaterial=!0,this.lights=!0,this.setDefaultValues(jN),this.setValues(e)}setupLightingModel(){return new qN}}const jm=N(()=>{const i=b(Te.z,0,Te.x.negate()).normalize(),e=Te.cross(i);return M(i.dot(ue),e.dot(ue)).mul(.495).add(.5)}).once(["NORMAL","VERTEX"])().toVar("matcapUV"),YN=new a_;class KN extends we{static get type(){return"MeshMatcapNodeMaterial"}constructor(e){super(),this.isMeshMatcapNodeMaterial=!0,this.setDefaultValues(YN),this.setValues(e)}setupVariants(e){const t=jm;let s;e.material.matcap?s=ts("matcap","texture").context({getUV:()=>t}):s=b(ne(.2,.8,t.y)),re.rgb.mulAssign(s.rgb)}}class QN extends Ce{static get type(){return"RotateNode"}constructor(e,t){super(),this.positionNode=e,this.rotationNode=t}getNodeType(e){return this.positionNode.getNodeType(e)}setup(e){const{rotationNode:t,positionNode:s}=this;if(this.getNodeType(e)==="vec2"){const r=t.cos(),o=t.sin();return oo(r,o,o.negate(),r).mul(s)}else{const r=t,o=Zs(W(1,0,0,0),W(0,Zt(r.x),lt(r.x).negate(),0),W(0,lt(r.x),Zt(r.x),0),W(0,0,0,1)),a=Zs(W(Zt(r.y),0,lt(r.y),0),W(0,1,0,0),W(lt(r.y).negate(),0,Zt(r.y),0),W(0,0,0,1)),u=Zs(W(Zt(r.z),lt(r.z).negate(),0,0),W(lt(r.z),Zt(r.z),0,0),W(0,0,1,0),W(0,0,0,1));return o.mul(a).mul(u).mul(W(s,1)).xyz}}}const kr=q(QN).setParameterLength(2),ZN=new d_;class Xm extends we{static get type(){return"SpriteNodeMaterial"}constructor(e){super(),this.isSpriteNodeMaterial=!0,this._useSizeAttenuation=!0,this.positionNode=null,this.rotationNode=null,this.scaleNode=null,this.transparent=!0,this.setDefaultValues(ZN),this.setValues(e)}setupPositionView(e){const{object:t,camera:s}=e,{positionNode:n,rotationNode:r,scaleNode:o,sizeAttenuation:a}=this,u=on.mul(b(n||0));let l=M(gt[0].xyz.length(),gt[1].xyz.length());o!==null&&(l=l.mul(M(o))),s.isPerspectiveCamera&&a===!1&&(l=l.mul(u.z.negate()));let c=Or.xy;if(t.center&&t.center.isVector2===!0){const f=JT("center","vec2",t);c=c.sub(f.sub(.5))}c=c.mul(l);const d=g(r||Hf),p=kr(c,d);return W(u.xy.add(p),u.zw)}copy(e){return this.positionNode=e.positionNode,this.rotationNode=e.rotationNode,this.scaleNode=e.scaleNode,super.copy(e)}get sizeAttenuation(){return this._useSizeAttenuation}set sizeAttenuation(e){this._useSizeAttenuation!==e&&(this._useSizeAttenuation=e,this.needsUpdate=!0)}}const JN=new c_,eS=new he;class tS extends Xm{static get type(){return"PointsNodeMaterial"}constructor(e){super(),this.sizeNode=null,this.isPointsNodeMaterial=!0,this.setDefaultValues(JN),this.setValues(e)}setupPositionView(){const{positionNode:e}=this;return on.mul(b(e||Ae)).xyz}setupVertexSprite(e){const{material:t,camera:s}=e,{rotationNode:n,scaleNode:r,sizeNode:o,sizeAttenuation:a}=this;let u=super.setupVertex(e);if(t.isNodeMaterial!==!0)return u;let l=o!==null?M(o):am;l=l.mul(of),s.isPerspectiveCamera&&a===!0&&(l=l.mul(sS.div(Ee.z.negate()))),r&&r.isNode&&(l=l.mul(M(r)));let c=Or.xy;if(n&&n.isNode){const d=g(n);c=kr(c,d)}return c=c.mul(l),c=c.div(ol.div(2)),c=c.mul(u.w),u=u.add(W(c,0,0)),u}setupVertex(e){return e.object.isPoints?super.setupVertex(e):this.setupVertexSprite(e)}get alphaToCoverage(){return this._useAlphaToCoverage}set alphaToCoverage(e){this._useAlphaToCoverage!==e&&(this._useAlphaToCoverage=e,this.needsUpdate=!0)}}const sS=$(1).onFrameUpdate(function({renderer:i}){const e=i.getSize(eS);this.value=.5*e.y});class nS extends So{constructor(){super(),this.shadowNode=g(1).toVar("shadowMask")}direct({lightNode:e}){e.shadowNode!==null&&this.shadowNode.mulAssign(e.shadowNode)}finish({context:e}){re.a.mulAssign(this.shadowNode.oneMinus()),e.outgoingLight.rgb.assign(re.rgb)}}const rS=new h_;class iS extends we{static get type(){return"ShadowNodeMaterial"}constructor(e){super(),this.isShadowNodeMaterial=!0,this.lights=!0,this.transparent=!0,this.setDefaultValues(rS),this.setValues(e)}setupLightingModel(){return new nS}}ss("vec3");ss("vec3");ss("vec3");class oS{constructor(e,t){this.nodes=e,this.info=t,this._context=typeof self<"u"?self:null,this._animationLoop=null,this._requestId=null}start(){const e=(t,s)=>{this._requestId=this._context.requestAnimationFrame(e),this.info.autoReset===!0&&this.info.reset(),this.nodes.nodeFrame.update(),this.info.frame=this.nodes.nodeFrame.frameId,this._animationLoop!==null&&this._animationLoop(t,s)};e()}stop(){this._context.cancelAnimationFrame(this._requestId),this._requestId=null}getAnimationLoop(){return this._animationLoop}setAnimationLoop(e){this._animationLoop=e}getContext(){return this._context}setContext(e){this._context=e}dispose(){this.stop()}}class Pt{constructor(){this.weakMap=new WeakMap}get(e){let t=this.weakMap;for(let s=0;s<e.length-1;s++)if(t=t.get(e[s]),t===void 0)return;return t.get(e[e.length-1])}set(e,t){let s=this.weakMap;for(let n=0;n<e.length-1;n++){const r=e[n];s.has(r)===!1&&s.set(r,new WeakMap),s=s.get(r)}return s.set(e[e.length-1],t),this}delete(e){let t=this.weakMap;for(let s=0;s<e.length-1;s++)if(t=t.get(e[s]),t===void 0)return!1;return t.delete(e[e.length-1])}}let aS=0;function uS(i){const e=Object.keys(i);let t=Object.getPrototypeOf(i);for(;t;){const s=Object.getOwnPropertyDescriptors(t);for(const n in s)if(s[n]!==void 0){const r=s[n];r&&typeof r.get=="function"&&e.push(n)}t=Object.getPrototypeOf(t)}return e}class lS{constructor(e,t,s,n,r,o,a,u,l,c){this.id=aS++,this._nodes=e,this._geometries=t,this.renderer=s,this.object=n,this.material=r,this.scene=o,this.camera=a,this.lightsNode=u,this.context=l,this.geometry=n.geometry,this.version=r.version,this.drawRange=null,this.attributes=null,this.attributesId=null,this.pipeline=null,this.group=null,this.vertexBuffers=null,this.drawParams=null,this.bundle=null,this.clippingContext=c,this.clippingContextCacheKey=c!==null?c.cacheKey:"",this.initialNodesCacheKey=this.getDynamicCacheKey(),this.initialCacheKey=this.getCacheKey(),this._nodeBuilderState=null,this._bindings=null,this._monitor=null,this.onDispose=null,this.isRenderObject=!0,this.onMaterialDispose=()=>{this.dispose()},this.onGeometryDispose=()=>{this.attributes=null,this.attributesId=null},this.material.addEventListener("dispose",this.onMaterialDispose),this.geometry.addEventListener("dispose",this.onGeometryDispose)}updateClipping(e){this.clippingContext=e}get clippingNeedsUpdate(){return this.clippingContext===null||this.clippingContext.cacheKey===this.clippingContextCacheKey?!1:(this.clippingContextCacheKey=this.clippingContext.cacheKey,!0)}get hardwareClippingPlanes(){return this.material.hardwareClipping===!0?this.clippingContext.unionClippingCount:0}getNodeBuilderState(){return this._nodeBuilderState||(this._nodeBuilderState=this._nodes.getForRender(this))}getMonitor(){return this._monitor||(this._monitor=this.getNodeBuilderState().observer)}getBindings(){return this._bindings||(this._bindings=this.getNodeBuilderState().createBindings())}getBindingGroup(e){for(const t of this.getBindings())if(t.name===e)return t}getIndex(){return this._geometries.getIndex(this)}getIndirect(){return this._geometries.getIndirect(this)}getChainArray(){return[this.object,this.material,this.context,this.lightsNode]}setGeometry(e){this.geometry=e,this.attributes=null,this.attributesId=null}getAttributes(){if(this.attributes!==null)return this.attributes;const e=this.getNodeBuilderState().nodeAttributes,t=this.geometry,s=[],n=new Set,r={};for(const o of e){let a;if(o.node&&o.node.attribute?a=o.node.attribute:(a=t.getAttribute(o.name),r[o.name]=a.version),a===void 0)continue;s.push(a);const u=a.isInterleavedBufferAttribute?a.data:a;n.add(u)}return this.attributes=s,this.attributesId=r,this.vertexBuffers=Array.from(n.values()),s}getVertexBuffers(){return this.vertexBuffers===null&&this.getAttributes(),this.vertexBuffers}getDrawParameters(){const{object:e,material:t,geometry:s,group:n,drawRange:r}=this,o=this.drawParams||(this.drawParams={vertexCount:0,firstVertex:0,instanceCount:0,firstInstance:0}),a=this.getIndex(),u=a!==null;let l=1;if(s.isInstancedBufferGeometry===!0?l=s.instanceCount:e.count!==void 0&&(l=Math.max(0,e.count)),l===0)return null;if(o.instanceCount=l,e.isBatchedMesh===!0)return o;let c=1;t.wireframe===!0&&!e.isPoints&&!e.isLineSegments&&!e.isLine&&!e.isLineLoop&&(c=2);let d=r.start*c,p=(r.start+r.count)*c;n!==null&&(d=Math.max(d,n.start*c),p=Math.min(p,(n.start+n.count)*c));const f=s.attributes.position;let m=1/0;u?m=a.count:f!=null&&(m=f.count),d=Math.max(d,0),p=Math.min(p,m);const y=p-d;return y<0||y===1/0?null:(o.vertexCount=y,o.firstVertex=d,o)}getGeometryCacheKey(){const{geometry:e}=this;let t="";for(const s of Object.keys(e.attributes).sort()){const n=e.attributes[s];t+=s+",",n.data&&(t+=n.data.stride+","),n.offset&&(t+=n.offset+","),n.itemSize&&(t+=n.itemSize+","),n.normalized&&(t+="n,")}for(const s of Object.keys(e.morphAttributes).sort()){const n=e.morphAttributes[s];t+="morph-"+s+",";for(let r=0,o=n.length;r<o;r++){const a=n[r];t+=a.id+","}}return e.index&&(t+="index,"),t}getMaterialCacheKey(){const{object:e,material:t,renderer:s}=this;let n=t.customProgramCacheKey();for(const r of uS(t)){if(/^(is[A-Z]|_)|^(visible|version|uuid|name|opacity|userData)$/.test(r))continue;const o=t[r];let a;if(o!==null){const u=typeof o;u==="number"?a=o!==0?"1":"0":u==="object"?(a="{",o.isTexture&&(a+=o.mapping,s.backend.isWebGPUBackend===!0&&(a+=o.magFilter,a+=o.minFilter,a+=o.wrapS,a+=o.wrapT,a+=o.wrapR)),a+="}"):a=String(o)}else a=String(o);n+=a+","}return n+=this.clippingContextCacheKey+",",e.geometry&&(n+=this.getGeometryCacheKey()),e.skeleton&&(n+=e.skeleton.bones.length+","),e.isBatchedMesh&&(n+=e._matricesTexture.uuid+",",e._colorsTexture!==null&&(n+=e._colorsTexture.uuid+",")),(e.isInstancedMesh||e.count>1)&&(n+=e.uuid+","),n+=e.receiveShadow+",",fh(n)}get needsGeometryUpdate(){if(this.geometry.id!==this.object.geometry.id)return!0;if(this.attributes!==null){const e=this.attributesId;for(const t in e){const s=this.geometry.getAttribute(t);if(s===void 0||e[t]!==s.id)return!0}}return!1}get needsUpdate(){return this.initialNodesCacheKey!==this.getDynamicCacheKey()||this.clippingNeedsUpdate}getDynamicCacheKey(){let e=0;return this.material.isShadowPassMaterial!==!0&&(e=this._nodes.getCacheKey(this.scene,this.lightsNode)),this.camera.isArrayCamera&&(e=Ui(e,this.camera.cameras.length)),this.object.receiveShadow&&(e=Ui(e,1)),e}getCacheKey(){return this.getMaterialCacheKey()+this.getDynamicCacheKey()}dispose(){this.material.removeEventListener("dispose",this.onMaterialDispose),this.geometry.removeEventListener("dispose",this.onGeometryDispose),this.onDispose()}}const Fs=[];class cS{constructor(e,t,s,n,r,o){this.renderer=e,this.nodes=t,this.geometries=s,this.pipelines=n,this.bindings=r,this.info=o,this.chainMaps={}}get(e,t,s,n,r,o,a,u){const l=this.getChainMap(u);Fs[0]=e,Fs[1]=t,Fs[2]=o,Fs[3]=r;let c=l.get(Fs);return c===void 0?(c=this.createRenderObject(this.nodes,this.geometries,this.renderer,e,t,s,n,r,o,a,u),l.set(Fs,c)):(c.updateClipping(a),c.needsGeometryUpdate&&c.setGeometry(e.geometry),(c.version!==t.version||c.needsUpdate)&&(c.initialCacheKey!==c.getCacheKey()?(c.dispose(),c=this.get(e,t,s,n,r,o,a,u)):c.version=t.version)),Fs.length=0,c}getChainMap(e="default"){return this.chainMaps[e]||(this.chainMaps[e]=new Pt)}dispose(){this.chainMaps={}}createRenderObject(e,t,s,n,r,o,a,u,l,c,d){const p=this.getChainMap(d),f=new lS(e,t,s,n,r,o,a,u,l,c);return f.onDispose=()=>{this.pipelines.delete(f),this.bindings.delete(f),this.nodes.delete(f),p.delete(f.getChainArray())},f}}class Ms{constructor(){this.data=new WeakMap}get(e){let t=this.data.get(e);return t===void 0&&(t={},this.data.set(e,t)),t}delete(e){let t=null;return this.data.has(e)&&(t=this.data.get(e),this.data.delete(e)),t}has(e){return this.data.has(e)}dispose(){this.data=new WeakMap}}const yt={VERTEX:1,INDEX:2,STORAGE:3,INDIRECT:4},gs=16,dS=211,hS=212;class pS extends Ms{constructor(e){super(),this.backend=e}delete(e){const t=super.delete(e);return t!==null&&this.backend.destroyAttribute(e),t}update(e,t){const s=this.get(e);if(s.version===void 0)t===yt.VERTEX?this.backend.createAttribute(e):t===yt.INDEX?this.backend.createIndexAttribute(e):t===yt.STORAGE?this.backend.createStorageAttribute(e):t===yt.INDIRECT&&this.backend.createIndirectStorageAttribute(e),s.version=this._getBufferAttribute(e).version;else{const n=this._getBufferAttribute(e);(s.version<n.version||n.usage===xn)&&(this.backend.updateAttribute(e),s.version=n.version)}}_getBufferAttribute(e){return e.isInterleavedBufferAttribute&&(e=e.data),e}}function Ym(i){return i.index!==null?i.index.version:i.attributes.position.version}function zc(i){const e=[],t=i.index,s=i.attributes.position;if(t!==null){const r=t.array;for(let o=0,a=r.length;o<a;o+=3){const u=r[o+0],l=r[o+1],c=r[o+2];e.push(u,l,l,c,c,u)}}else{const r=s.array;for(let o=0,a=r.length/3-1;o<a;o+=3){const u=o+0,l=o+1,c=o+2;e.push(u,l,l,c,c,u)}}const n=new(g_(e)?f_:m_)(e,1);return n.version=Ym(i),n}class fS extends Ms{constructor(e,t){super(),this.attributes=e,this.info=t,this.wireframes=new WeakMap,this.attributeCall=new WeakMap}has(e){const t=e.geometry;return super.has(t)&&this.get(t).initialized===!0}updateForRender(e){this.has(e)===!1&&this.initGeometry(e),this.updateAttributes(e)}initGeometry(e){const t=e.geometry,s=this.get(t);s.initialized=!0,this.info.memory.geometries++;const n=()=>{this.info.memory.geometries--;const r=t.index,o=e.getAttributes();r!==null&&this.attributes.delete(r);for(const u of o)this.attributes.delete(u);const a=this.wireframes.get(t);a!==void 0&&this.attributes.delete(a),t.removeEventListener("dispose",n)};t.addEventListener("dispose",n)}updateAttributes(e){const t=e.getAttributes();for(const r of t)r.isStorageBufferAttribute||r.isStorageInstancedBufferAttribute?this.updateAttribute(r,yt.STORAGE):this.updateAttribute(r,yt.VERTEX);const s=this.getIndex(e);s!==null&&this.updateAttribute(s,yt.INDEX);const n=e.geometry.indirect;n!==null&&this.updateAttribute(n,yt.INDIRECT)}updateAttribute(e,t){const s=this.info.render.calls;e.isInterleavedBufferAttribute?this.attributeCall.get(e)===void 0?(this.attributes.update(e,t),this.attributeCall.set(e,s)):this.attributeCall.get(e.data)!==s&&(this.attributes.update(e,t),this.attributeCall.set(e.data,s),this.attributeCall.set(e,s)):this.attributeCall.get(e)!==s&&(this.attributes.update(e,t),this.attributeCall.set(e,s))}getIndirect(e){return e.geometry.indirect}getIndex(e){const{geometry:t,material:s}=e;let n=t.index;if(s.wireframe===!0){const r=this.wireframes;let o=r.get(t);o===void 0?(o=zc(t),r.set(t,o)):o.version!==Ym(t)&&(this.attributes.delete(o),o=zc(t),r.set(t,o)),n=o}return n}}class mS{constructor(){this.autoReset=!0,this.frame=0,this.calls=0,this.render={calls:0,frameCalls:0,drawCalls:0,triangles:0,points:0,lines:0,timestamp:0},this.compute={calls:0,frameCalls:0,timestamp:0},this.memory={geometries:0,textures:0}}update(e,t,s){this.render.drawCalls++,e.isMesh||e.isSprite?this.render.triangles+=s*(t/3):e.isPoints?this.render.points+=s*t:e.isLineSegments?this.render.lines+=s*(t/2):e.isLine?this.render.lines+=s*(t-1):console.error("THREE.WebGPUInfo: Unknown object type.")}reset(){this.render.drawCalls=0,this.render.frameCalls=0,this.compute.frameCalls=0,this.render.triangles=0,this.render.points=0,this.render.lines=0}dispose(){this.reset(),this.calls=0,this.render.calls=0,this.compute.calls=0,this.render.timestamp=0,this.compute.timestamp=0,this.memory.geometries=0,this.memory.textures=0}}class Km{constructor(e){this.cacheKey=e,this.usedTimes=0}}class gS extends Km{constructor(e,t,s){super(e),this.vertexProgram=t,this.fragmentProgram=s}}class yS extends Km{constructor(e,t){super(e),this.computeProgram=t,this.isComputePipeline=!0}}let _S=0;class Yo{constructor(e,t,s,n=null,r=null){this.id=_S++,this.code=e,this.stage=t,this.name=s,this.transforms=n,this.attributes=r,this.usedTimes=0}}class TS extends Ms{constructor(e,t){super(),this.backend=e,this.nodes=t,this.bindings=null,this.caches=new Map,this.programs={vertex:new Map,fragment:new Map,compute:new Map}}getForCompute(e,t){const{backend:s}=this,n=this.get(e);if(this._needsComputeUpdate(e)){const r=n.pipeline;r&&(r.usedTimes--,r.computeProgram.usedTimes--);const o=this.nodes.getForCompute(e);let a=this.programs.compute.get(o.computeShader);a===void 0&&(r&&r.computeProgram.usedTimes===0&&this._releaseProgram(r.computeProgram),a=new Yo(o.computeShader,"compute",e.name,o.transforms,o.nodeAttributes),this.programs.compute.set(o.computeShader,a),s.createProgram(a));const u=this._getComputeCacheKey(e,a);let l=this.caches.get(u);l===void 0&&(r&&r.usedTimes===0&&this._releasePipeline(r),l=this._getComputePipeline(e,a,u,t)),l.usedTimes++,a.usedTimes++,n.version=e.version,n.pipeline=l}return n.pipeline}getForRender(e,t=null){const{backend:s}=this,n=this.get(e);if(this._needsRenderUpdate(e)){const r=n.pipeline;r&&(r.usedTimes--,r.vertexProgram.usedTimes--,r.fragmentProgram.usedTimes--);const o=e.getNodeBuilderState(),a=e.material?e.material.name:"";let u=this.programs.vertex.get(o.vertexShader);u===void 0&&(r&&r.vertexProgram.usedTimes===0&&this._releaseProgram(r.vertexProgram),u=new Yo(o.vertexShader,"vertex",a),this.programs.vertex.set(o.vertexShader,u),s.createProgram(u));let l=this.programs.fragment.get(o.fragmentShader);l===void 0&&(r&&r.fragmentProgram.usedTimes===0&&this._releaseProgram(r.fragmentProgram),l=new Yo(o.fragmentShader,"fragment",a),this.programs.fragment.set(o.fragmentShader,l),s.createProgram(l));const c=this._getRenderCacheKey(e,u,l);let d=this.caches.get(c);d===void 0?(r&&r.usedTimes===0&&this._releasePipeline(r),d=this._getRenderPipeline(e,u,l,c,t)):e.pipeline=d,d.usedTimes++,u.usedTimes++,l.usedTimes++,n.pipeline=d}return n.pipeline}delete(e){const t=this.get(e).pipeline;return t&&(t.usedTimes--,t.usedTimes===0&&this._releasePipeline(t),t.isComputePipeline?(t.computeProgram.usedTimes--,t.computeProgram.usedTimes===0&&this._releaseProgram(t.computeProgram)):(t.fragmentProgram.usedTimes--,t.vertexProgram.usedTimes--,t.vertexProgram.usedTimes===0&&this._releaseProgram(t.vertexProgram),t.fragmentProgram.usedTimes===0&&this._releaseProgram(t.fragmentProgram))),super.delete(e)}dispose(){super.dispose(),this.caches=new Map,this.programs={vertex:new Map,fragment:new Map,compute:new Map}}updateForRender(e){this.getForRender(e)}_getComputePipeline(e,t,s,n){s=s||this._getComputeCacheKey(e,t);let r=this.caches.get(s);return r===void 0&&(r=new yS(s,t),this.caches.set(s,r),this.backend.createComputePipeline(r,n)),r}_getRenderPipeline(e,t,s,n,r){n=n||this._getRenderCacheKey(e,t,s);let o=this.caches.get(n);return o===void 0&&(o=new gS(n,t,s),this.caches.set(n,o),e.pipeline=o,this.backend.createRenderPipeline(e,r)),o}_getComputeCacheKey(e,t){return e.id+","+t.id}_getRenderCacheKey(e,t,s){return t.id+","+s.id+","+this.backend.getRenderCacheKey(e)}_releasePipeline(e){this.caches.delete(e.cacheKey)}_releaseProgram(e){const t=e.code,s=e.stage;this.programs[s].delete(t)}_needsComputeUpdate(e){const t=this.get(e);return t.pipeline===void 0||t.version!==e.version}_needsRenderUpdate(e){return this.get(e).pipeline===void 0||this.backend.needsRenderUpdate(e)}}class xS extends Ms{constructor(e,t,s,n,r,o){super(),this.backend=e,this.textures=s,this.pipelines=r,this.attributes=n,this.nodes=t,this.info=o,this.pipelines.bindings=this}getForRender(e){const t=e.getBindings();for(const s of t){const n=this.get(s);n.bindGroup===void 0&&(this._init(s),this.backend.createBindings(s,t,0),n.bindGroup=s)}return t}getForCompute(e){const t=this.nodes.getForCompute(e).bindings;for(const s of t){const n=this.get(s);n.bindGroup===void 0&&(this._init(s),this.backend.createBindings(s,t,0),n.bindGroup=s)}return t}updateForCompute(e){this._updateBindings(this.getForCompute(e))}updateForRender(e){this._updateBindings(this.getForRender(e))}_updateBindings(e){for(const t of e)this._update(t,e)}_init(e){for(const t of e.bindings)if(t.isSampledTexture)this.textures.updateTexture(t.texture);else if(t.isStorageBuffer){const s=t.attribute,n=s.isIndirectStorageBufferAttribute?yt.INDIRECT:yt.STORAGE;this.attributes.update(s,n)}}_update(e,t){const{backend:s}=this;let n=!1,r=!0,o=0,a=0;for(const u of e.bindings)if(!(u.isNodeUniformsGroup&&this.nodes.updateGroup(u)===!1)){if(u.isStorageBuffer){const l=u.attribute,c=l.isIndirectStorageBufferAttribute?yt.INDIRECT:yt.STORAGE;this.attributes.update(l,c)}if(u.isUniformBuffer)u.update()&&s.updateBinding(u);else if(u.isSampledTexture){const l=u.update(),c=u.texture,d=this.textures.get(c);if(l&&(this.textures.updateTexture(c),u.generation!==d.generation&&(u.generation=d.generation,n=!0,r=!1)),s.get(c).externalTexture!==void 0||d.isDefaultTexture?r=!1:(o=o*10+c.id,a+=c.version),c.isStorageTexture===!0){const f=this.get(c);u.store===!0?f.needsMipmap=!0:this.textures.needsMipmaps(c)&&f.needsMipmap===!0&&(this.backend.generateMipmaps(c),f.needsMipmap=!1)}}else u.isSampler&&u.update()}n===!0&&this.backend.updateBindings(e,t,r?o:0,a)}}function bS(i,e){return i.groupOrder!==e.groupOrder?i.groupOrder-e.groupOrder:i.renderOrder!==e.renderOrder?i.renderOrder-e.renderOrder:i.z!==e.z?i.z-e.z:i.id-e.id}function $c(i,e){return i.groupOrder!==e.groupOrder?i.groupOrder-e.groupOrder:i.renderOrder!==e.renderOrder?i.renderOrder-e.renderOrder:i.z!==e.z?e.z-i.z:i.id-e.id}function Wc(i){return(i.transmission>0||i.transmissionNode)&&i.side===Xs&&i.forceSinglePass===!1}class NS{constructor(e,t,s){this.renderItems=[],this.renderItemsIndex=0,this.opaque=[],this.transparentDoublePass=[],this.transparent=[],this.bundles=[],this.lightsNode=e.getNode(t,s),this.lightsArray=[],this.scene=t,this.camera=s,this.occlusionQueryCount=0}begin(){return this.renderItemsIndex=0,this.opaque.length=0,this.transparentDoublePass.length=0,this.transparent.length=0,this.bundles.length=0,this.lightsArray.length=0,this.occlusionQueryCount=0,this}getNextRenderItem(e,t,s,n,r,o,a){let u=this.renderItems[this.renderItemsIndex];return u===void 0?(u={id:e.id,object:e,geometry:t,material:s,groupOrder:n,renderOrder:e.renderOrder,z:r,group:o,clippingContext:a},this.renderItems[this.renderItemsIndex]=u):(u.id=e.id,u.object=e,u.geometry=t,u.material=s,u.groupOrder=n,u.renderOrder=e.renderOrder,u.z=r,u.group=o,u.clippingContext=a),this.renderItemsIndex++,u}push(e,t,s,n,r,o,a){const u=this.getNextRenderItem(e,t,s,n,r,o,a);e.occlusionTest===!0&&this.occlusionQueryCount++,s.transparent===!0||s.transmission>0?(Wc(s)&&this.transparentDoublePass.push(u),this.transparent.push(u)):this.opaque.push(u)}unshift(e,t,s,n,r,o,a){const u=this.getNextRenderItem(e,t,s,n,r,o,a);s.transparent===!0||s.transmission>0?(Wc(s)&&this.transparentDoublePass.unshift(u),this.transparent.unshift(u)):this.opaque.unshift(u)}pushBundle(e){this.bundles.push(e)}pushLight(e){this.lightsArray.push(e)}sort(e,t){this.opaque.length>1&&this.opaque.sort(e||bS),this.transparentDoublePass.length>1&&this.transparentDoublePass.sort(t||$c),this.transparent.length>1&&this.transparent.sort(t||$c)}finish(){this.lightsNode.setLights(this.lightsArray);for(let e=this.renderItemsIndex,t=this.renderItems.length;e<t;e++){const s=this.renderItems[e];if(s.id===null)break;s.id=null,s.object=null,s.geometry=null,s.material=null,s.groupOrder=null,s.renderOrder=null,s.z=null,s.group=null,s.clippingContext=null}}}const jn=[];class SS{constructor(e){this.lighting=e,this.lists=new Pt}get(e,t){const s=this.lists;jn[0]=e,jn[1]=t;let n=s.get(jn);return n===void 0&&(n=new NS(this.lighting,e,t),s.set(jn,n)),jn.length=0,n}dispose(){this.lists=new Pt}}let vS=0;class RS{constructor(){this.id=vS++,this.color=!0,this.clearColor=!0,this.clearColorValue={r:0,g:0,b:0,a:1},this.depth=!0,this.clearDepth=!0,this.clearDepthValue=1,this.stencil=!1,this.clearStencil=!0,this.clearStencilValue=1,this.viewport=!1,this.viewportValue=new _e,this.scissor=!1,this.scissorValue=new _e,this.renderTarget=null,this.textures=null,this.depthTexture=null,this.activeCubeFace=0,this.activeMipmapLevel=0,this.sampleCount=1,this.width=0,this.height=0,this.occlusionQueryCount=0,this.clippingContext=null,this.isRenderContext=!0}getCacheKey(){return Qm(this)}}function Qm(i){const{textures:e,activeCubeFace:t,activeMipmapLevel:s}=i,n=[t,s];for(const r of e)n.push(r.id);return eo(n)}const Xn=[],AS=new Qi,ES=new qy;class wS{constructor(){this.chainMaps={}}get(e,t,s=null){Xn[0]=e,Xn[1]=t;let n;if(s===null)n="default";else{const a=s.texture.format;n=`${s.textures.length}:${a}:${s.samples}:${s.depthBuffer}:${s.stencilBuffer}`}const r=this._getChainMap(n);let o=r.get(Xn);return o===void 0&&(o=new RS,r.set(Xn,o)),Xn.length=0,s!==null&&(o.sampleCount=s.samples===0?1:s.samples),o}getForClear(e=null){return this.get(AS,ES,e)}_getChainMap(e){return this.chainMaps[e]||(this.chainMaps[e]=new Pt)}dispose(){this.chainMaps={}}}const CS=new j;class MS extends Ms{constructor(e,t,s){super(),this.renderer=e,this.backend=t,this.info=s}updateRenderTarget(e,t=0){const s=this.get(e),n=e.samples===0?1:e.samples,r=s.depthTextureMips||(s.depthTextureMips={}),o=e.textures,a=this.getSize(o[0]),u=a.width>>t,l=a.height>>t;let c=e.depthTexture||r[t];const d=e.depthBuffer===!0||e.stencilBuffer===!0;let p=!1;c===void 0&&d&&(c=new Mt,c.format=e.stencilBuffer?Ts:xs,c.type=e.stencilBuffer?_s:Fe,c.image.width=u,c.image.height=l,c.image.depth=a.depth,c.isArrayTexture=e.multiview===!0&&a.depth>1,r[t]=c),(s.width!==a.width||a.height!==s.height)&&(p=!0,c&&(c.needsUpdate=!0,c.image.width=u,c.image.height=l,c.image.depth=c.isArrayTexture?c.image.depth:1)),s.width=a.width,s.height=a.height,s.textures=o,s.depthTexture=c||null,s.depth=e.depthBuffer,s.stencil=e.stencilBuffer,s.renderTarget=e,s.sampleCount!==n&&(p=!0,c&&(c.needsUpdate=!0),s.sampleCount=n);const f={sampleCount:n};if(e.isXRRenderTarget!==!0){for(let m=0;m<o.length;m++){const y=o[m];p&&(y.needsUpdate=!0),this.updateTexture(y,f)}c&&this.updateTexture(c,f)}if(s.initialized!==!0){s.initialized=!0;const m=()=>{e.removeEventListener("dispose",m);for(let y=0;y<o.length;y++)this._destroyTexture(o[y]);c&&this._destroyTexture(c),this.delete(e),this.backend.delete(e)};e.addEventListener("dispose",m)}}updateTexture(e,t={}){const s=this.get(e);if(s.initialized===!0&&s.version===e.version)return;const n=e.isRenderTargetTexture||e.isDepthTexture||e.isFramebufferTexture,r=this.backend;if(n&&s.initialized===!0&&(r.destroySampler(e),r.destroyTexture(e)),e.isFramebufferTexture){const l=this.renderer.getRenderTarget();l?e.type=l.texture.type:e.type=ct}const{width:o,height:a,depth:u}=this.getSize(e);if(t.width=o,t.height=a,t.depth=u,t.needsMipmaps=this.needsMipmaps(e),t.levels=t.needsMipmaps?this.getMipLevels(e,o,a):1,e.isCubeTexture&&e.mipmaps.length>0&&t.levels++,n||e.isStorageTexture===!0||e.isExternalTexture===!0)r.createSampler(e),r.createTexture(e,t),s.generation=e.version;else if(s.initialized!==!0&&r.createSampler(e),e.version>0){const c=e.image;if(c===void 0)console.warn("THREE.Renderer: Texture marked for update but image is undefined.");else if(c.complete===!1)console.warn("THREE.Renderer: Texture marked for update but image is incomplete.");else{if(e.images){const d=[];for(const p of e.images)d.push(p);t.images=d}else t.image=c;(s.isDefaultTexture===void 0||s.isDefaultTexture===!0)&&(r.createTexture(e,t),s.isDefaultTexture=!1,s.generation=e.version),e.source.dataReady===!0&&r.updateTexture(e,t),t.needsMipmaps&&e.mipmaps.length===0&&r.generateMipmaps(e),e.onUpdate&&e.onUpdate(e)}}else r.createDefaultTexture(e),s.isDefaultTexture=!0,s.generation=e.version;if(s.initialized!==!0){s.initialized=!0,s.generation=e.version,this.info.memory.textures++,e.isVideoTexture&&Re.getTransfer(e.colorSpace)!==K&&console.warn("WebGPURenderer: Video textures must use a color space with a sRGB transfer function, e.g. SRGBColorSpace.");const l=()=>{e.removeEventListener("dispose",l),this._destroyTexture(e)};e.addEventListener("dispose",l)}s.version=e.version}getSize(e,t=CS){let s=e.images?e.images[0]:e.image;return s?(s.image!==void 0&&(s=s.image),typeof HTMLVideoElement<"u"&&s instanceof HTMLVideoElement?(t.width=s.videoWidth||1,t.height=s.videoHeight||1,t.depth=1):s instanceof VideoFrame?(t.width=s.displayWidth||1,t.height=s.displayHeight||1,t.depth=1):(t.width=s.width||1,t.height=s.height||1,t.depth=e.isCubeTexture?6:s.depth||1)):t.width=t.height=t.depth=1,t}getMipLevels(e,t,s){let n;return e.mipmaps.length>0?n=e.mipmaps.length:e.isCompressedTexture===!0?n=1:n=Math.floor(Math.log2(Math.max(t,s)))+1,n}needsMipmaps(e){return e.generateMipmaps===!0||e.mipmaps.length>0}_destroyTexture(e){this.has(e)===!0&&(this.backend.destroySampler(e),this.backend.destroyTexture(e),this.delete(e),this.info.memory.textures--)}}class Cl extends jt{constructor(e,t,s,n=1){super(e,t,s),this.a=n}set(e,t,s,n=1){return this.a=n,super.set(e,t,s)}copy(e){return e.a!==void 0&&(this.a=e.a),super.copy(e)}clone(){return new this.constructor(this.r,this.g,this.b,this.a)}}class Zm extends oe{static get type(){return"ParameterNode"}constructor(e,t=null){super(e,t),this.isParameterNode=!0}getHash(){return this.uuid}generate(){return this.name}}const BS=(i,e)=>E(new Zm(i,e));class PS extends k{static get type(){return"StackNode"}constructor(e=null){super(),this.nodes=[],this.outputNode=null,this.parent=e,this._currentCond=null,this._expressionNode=null,this.isStackNode=!0}getNodeType(e){return this.hasOutput?this.outputNode.getNodeType(e):"void"}getMemberType(e,t){return this.hasOutput?this.outputNode.getMemberType(e,t):"void"}add(e){return e.isNode!==!0?(console.error("THREE.TSL: Invalid node added to stack."),this):(this.nodes.push(e),this)}If(e,t){const s=new Sn(t);return this._currentCond=ke(e,s),this.add(this._currentCond)}ElseIf(e,t){const s=new Sn(t),n=ke(e,s);return this._currentCond.elseNode=n,this._currentCond=n,this}Else(e){return this._currentCond.elseNode=new Sn(e),this}Switch(e){return this._expressionNode=E(e),this}Case(...e){const t=[];if(e.length>=2)for(let a=0;a<e.length-1;a++)t.push(this._expressionNode.equal(E(e[a])));else console.error("THREE.TSL: Invalid parameter length. Case() requires at least two parameters.");const s=e[e.length-1],n=new Sn(s);let r=t[0];for(let a=1;a<t.length;a++)r=r.or(t[a]);const o=ke(r,n);return this._currentCond===null?(this._currentCond=o,this.add(this._currentCond)):(this._currentCond.elseNode=o,this._currentCond=o,this)}Default(e){return this.Else(e),this}setup(e){const t=e.getNodeProperties(this);let s=0;for(const n of this.getChildren())n.isVarNode&&n.intent===!0&&e.getNodeProperties(n).assign!==!0||(t["node"+s++]=n);return t.outputNode||null}get hasOutput(){return this.outputNode&&this.outputNode.isNode}build(e,...t){const s=e.currentStack,n=ro();Rr(this),e.currentStack=this;const r=e.buildStage;for(const a of this.nodes)if(!(a.isVarNode&&a.intent===!0&&e.getNodeProperties(a).assign!==!0)){if(r==="setup")a.build(e);else if(r==="analyze")a.build(e,this);else if(r==="generate"){const u=e.getDataFromNode(a,"any").stages,l=u&&u[e.shaderStage];if(a.isVarNode&&l&&l.length===1&&l[0]&&l[0].isStackNode)continue;a.build(e,"void")}}let o;return this.hasOutput?o=this.outputNode.build(e,...t):o=super.build(e,...t),Rr(n),e.currentStack=s,o}}const Ei=q(PS).setParameterLength(0,1);function FS(i){return Object.entries(i).map(([e,t])=>typeof t=="string"?{name:e,type:t,atomic:!1}:{name:e,type:t.type,atomic:t.atomic||!1})}class LS extends k{static get type(){return"StructTypeNode"}constructor(e,t=null){super("struct"),this.membersLayout=FS(e),this.name=t,this.isStructLayoutNode=!0}getLength(){const t=Float32Array.BYTES_PER_ELEMENT;let s=0;for(const n of this.membersLayout){const r=n.type,o=cT(r)*t,a=dT(r),u=s%8,l=u%a,c=u+l;s+=l,c!==0&&8-c<o&&(s+=8-c),s+=o}return Math.ceil(s/8)*8/t}getMemberType(e,t){const s=this.membersLayout.find(n=>n.name===t);return s?s.type:"void"}getNodeType(e){return e.getStructTypeFromNode(this,this.membersLayout,this.name).name}setup(e){e.getStructTypeFromNode(this,this.membersLayout,this.name),e.addInclude(this)}generate(e){return this.getNodeType(e)}}class DS extends k{static get type(){return"StructNode"}constructor(e,t){super("vec3"),this.structTypeNode=e,this.values=t,this.isStructNode=!0}getNodeType(e){return this.structTypeNode.getNodeType(e)}getMemberType(e,t){return this.structTypeNode.getMemberType(e,t)}generate(e){const t=e.getVarFromNode(this),s=t.type,n=e.getPropertyName(t);return e.addLineFlowCode(`${n} = ${e.generateStruct(s,this.structTypeNode.membersLayout,this.values)}`,this),t.name}}const US=(i,e=null)=>{const t=new LS(i,e),s=(...n)=>{let r=null;if(n.length>0)if(n[0].isNode){r={};const o=Object.keys(i);for(let a=0;a<n.length;a++)r[o[a]]=n[a]}else r=n[0];return E(new DS(t,r))};return s.layout=t,s.isStruct=!0,s};class Jm extends k{static get type(){return"OutputStructNode"}constructor(...e){super(),this.members=e,this.isOutputStructNode=!0}getNodeType(e){const t=e.getNodeProperties(this);if(t.membersLayout===void 0){const s=this.members,n=[];for(let r=0;r<s.length;r++){const o="m"+r,a=s[r].getNodeType(e);n.push({name:o,type:a,index:r})}t.membersLayout=n,t.structType=e.getOutputStructTypeFromNode(this,t.membersLayout)}return t.structType.name}generate(e){const t=e.getOutputStructName(),s=this.members,n=t!==""?t+".":"";for(let r=0;r<s.length;r++){const o=s[r].build(e);e.addLineFlowCode(`${n}m${r} = ${o}`,this)}return t}}const IS=q(Jm);function eg(i,e){for(let t=0;t<i.length;t++)if(i[t].name===e)return t;return-1}class VS extends Jm{static get type(){return"MRTNode"}constructor(e){super(),this.outputNodes=e,this.isMRTNode=!0}has(e){return this.outputNodes[e]!==void 0}get(e){return this.outputNodes[e]}merge(e){const t={...this.outputNodes,...e.outputNodes};return tg(t)}setup(e){const t=this.outputNodes,s=e.renderer.getRenderTarget(),n=[],r=s.textures;for(const o in t){const a=eg(r,o);n[a]=W(t[o])}return this.members=n,super.setup(e)}}const tg=q(VS);class zr extends Ce{static get type(){return"BitcastNode"}constructor(e,t,s=null){super(),this.valueNode=e,this.conversionType=t,this.inputType=s,this.isBitcastNode=!0}getNodeType(e){if(this.inputType!==null){const t=this.valueNode.getNodeType(e),s=e.getTypeLength(t);return e.getTypeFromLength(s,this.conversionType)}return this.conversionType}generate(e){const t=this.getNodeType(e);let s="";if(this.inputType!==null){const n=this.valueNode.getNodeType(e);s=e.getTypeLength(n)===1?this.inputType:e.changeComponentType(n,this.inputType)}else s=this.valueNode.getNodeType(e);return`${e.getBitcastMethod(t,s)}( ${this.valueNode.build(e,s)} )`}}const OS=L(zr).setParameterLength(2),GS=i=>new zr(i,"int","float"),kS=i=>new zr(i,"uint","float"),zS=i=>new zr(i,"float","int"),$S=i=>new zr(i,"float","uint"),WS=N(([i])=>{const e=i.toUint().mul(747796405).add(2891336453),t=e.shiftRight(e.shiftRight(28).add(4)).bitXor(e).mul(277803737);return t.shiftRight(22).bitXor(t).toFloat().mul(1/2**32)}),nu=(i,e)=>mt(X(4,i.mul(Z(1,i))),e),HS=(i,e)=>i.lessThan(.5)?nu(i.mul(2),e).div(2):Z(1,nu(X(Z(1,i),2),e).div(2)),qS=(i,e,t)=>mt(dt(mt(i,e),Be(mt(i,e),mt(Z(1,i),t))),1/e),jS=(i,e)=>lt($i.mul(e.mul(i).sub(1))).div($i.mul(e.mul(i).sub(1))),Jt=N(([i])=>i.fract().sub(.5).abs()).setLayout({name:"tri",type:"float",inputs:[{name:"x",type:"float"}]}),XS=N(([i])=>b(Jt(i.z.add(Jt(i.y.mul(1)))),Jt(i.z.add(Jt(i.x.mul(1)))),Jt(i.y.add(Jt(i.x.mul(1)))))).setLayout({name:"tri3",type:"vec3",inputs:[{name:"p",type:"vec3"}]}),YS=N(([i,e,t])=>{const s=b(i).toVar(),n=g(1.4).toVar(),r=g(0).toVar(),o=b(s).toVar();return le({start:g(0),end:g(3),type:"float",condition:"<="},()=>{const a=b(XS(o.mul(2))).toVar();s.addAssign(a.add(t.mul(g(.1).mul(e)))),o.mulAssign(1.8),n.mulAssign(1.5),s.mulAssign(1.2);const u=g(Jt(s.z.add(Jt(s.x.add(Jt(s.y)))))).toVar();r.addAssign(u.div(n)),o.addAssign(.14)}),r}).setLayout({name:"triNoise3D",type:"float",inputs:[{name:"position",type:"vec3"},{name:"speed",type:"float"},{name:"time",type:"float"}]});class KS extends k{static get type(){return"FunctionOverloadingNode"}constructor(e=[],...t){super(),this.functionNodes=e,this.parametersNodes=t,this._candidateFnCall=null,this.global=!0}getNodeType(){return this.functionNodes[0].shaderNode.layout.type}setup(e){const t=this.parametersNodes;let s=this._candidateFnCall;if(s===null){let n=null,r=-1;for(const o of this.functionNodes){const u=o.shaderNode.layout;if(u===null)throw new Error("FunctionOverloadingNode: FunctionNode must be a layout.");const l=u.inputs;if(t.length===l.length){let c=0;for(let d=0;d<t.length;d++){const p=t[d],f=l[d];p.getNodeType(e)===f.type?c++:c=0}c>r&&(n=o,r=c)}}this._candidateFnCall=s=n(...t)}return s}}const QS=q(KS),We=i=>(...e)=>QS(i,...e),$n=$(0).setGroup(z).onRenderUpdate(i=>i.time),ZS=$(0).setGroup(z).onRenderUpdate(i=>i.deltaTime),sg=$(0,"uint").setGroup(z).onRenderUpdate(i=>i.frameId),JS=(i=$n)=>i.add(.75).mul(Math.PI*2).sin().mul(.5).add(.5),ev=(i=$n)=>i.fract().round(),tv=(i=$n)=>i.add(.5).fract().mul(2).sub(1).abs(),sv=(i=$n)=>i.fract(),nv=N(([i,e,t=M(.5)])=>kr(i.sub(t),e).add(t)),rv=N(([i,e,t=M(.5)])=>{const s=i.sub(t),n=s.dot(s),o=n.mul(n).mul(e);return i.add(s.mul(o))}),iv=N(({position:i=null,horizontal:e=!0,vertical:t=!1})=>{let s;i!==null?(s=gt.toVar(),s[3][0]=i.x,s[3][1]=i.y,s[3][2]=i.z):s=gt;const n=St.mul(s);return vr(e)&&(n[0][0]=gt[0].length(),n[0][1]=0,n[0][2]=0),vr(t)&&(n[1][0]=0,n[1][1]=gt[1].length(),n[1][2]=0),n[2][0]=0,n[2][1]=0,n[2][2]=1,Gn.mul(n).mul(Ae)}),ov=N(([i=null])=>{const e=qi();return qi(yl(i)).sub(e).lessThan(0).select(ns,i)});class av extends k{static get type(){return"SpriteSheetUVNode"}constructor(e,t=ce(),s=g(0)){super("vec2"),this.countNode=e,this.uvNode=t,this.frameNode=s}setup(){const{frameNode:e,uvNode:t,countNode:s}=this,{width:n,height:r}=s,o=e.mod(n.mul(r)).floor(),a=o.mod(n),u=r.sub(o.add(1).div(n).ceil()),l=s.reciprocal(),c=M(a,u);return t.add(c).mul(l)}}const uv=q(av).setParameterLength(3),ng=N(([i,e=null,t=null,s=g(1),n=Ae,r=it])=>{let o=r.abs().normalize();o=o.div(o.dot(b(1)));const a=n.yz.mul(s),u=n.zx.mul(s),l=n.xy.mul(s),c=i.value,d=e!==null?e.value:c,p=t!==null?t.value:c,f=Q(c,a).mul(o.x),m=Q(d,u).mul(o.y),y=Q(p,l).mul(o.z);return Be(f,m,y)}),lv=(...i)=>ng(...i),cn=new lu,Ls=new j,dn=new j,Ko=new j,Yn=new Ge,ti=new j(0,0,-1),Ut=new _e,Kn=new j,si=new j,Qn=new _e,ni=new he,ji=new As,cv=ns.flipX();ji.depthTexture=new Mt(1,1);let ri=!1;class Ml extends Ht{static get type(){return"ReflectorNode"}constructor(e={}){super(e.defaultTexture||ji.texture,cv),this._reflectorBaseNode=e.reflector||new dv(this,e),this._depthNode=null,this.setUpdateMatrix(!1)}get reflector(){return this._reflectorBaseNode}get target(){return this._reflectorBaseNode.target}getDepthNode(){if(this._depthNode===null){if(this._reflectorBaseNode.depth!==!0)throw new Error("THREE.ReflectorNode: Depth node can only be requested when the reflector is created with { depth: true }. ");this._depthNode=E(new Ml({defaultTexture:ji.depthTexture,reflector:this._reflectorBaseNode}))}return this._depthNode}setup(e){return e.object.isQuadMesh||this._reflectorBaseNode.build(e),super.setup(e)}clone(){const e=new this.constructor(this.reflectorNode);return e.uvNode=this.uvNode,e.levelNode=this.levelNode,e.biasNode=this.biasNode,e.sampler=this.sampler,e.depthNode=this.depthNode,e.compareNode=this.compareNode,e.gradNode=this.gradNode,e._reflectorBaseNode=this._reflectorBaseNode,e}dispose(){super.dispose(),this._reflectorBaseNode.dispose()}}class dv extends k{static get type(){return"ReflectorBaseNode"}constructor(e,t={}){super();const{target:s=new vy,resolutionScale:n=1,generateMipmaps:r=!1,bounces:o=!0,depth:a=!1,samples:u=0}=t;this.textureNode=e,this.target=s,this.resolutionScale=n,t.resolution!==void 0&&(Bt('THREE.ReflectorNode: The "resolution" parameter has been renamed to "resolutionScale".'),this.resolutionScale=t.resolution),this.generateMipmaps=r,this.bounces=o,this.depth=a,this.samples=u,this.updateBeforeType=o?Y.RENDER:Y.FRAME,this.virtualCameras=new WeakMap,this.renderTargets=new Map,this.forceUpdate=!1,this.hasOutput=!1}_updateResolution(e,t){const s=this.resolutionScale;t.getDrawingBufferSize(ni),e.setSize(Math.round(ni.width*s),Math.round(ni.height*s))}setup(e){return this._updateResolution(ji,e.renderer),super.setup(e)}dispose(){super.dispose();for(const e of this.renderTargets.values())e.dispose()}getVirtualCamera(e){let t=this.virtualCameras.get(e);return t===void 0&&(t=e.clone(),this.virtualCameras.set(e,t)),t}getRenderTarget(e){let t=this.renderTargets.get(e);return t===void 0&&(t=new As(0,0,{type:et,samples:this.samples}),this.generateMipmaps===!0&&(t.texture.minFilter=Ry,t.texture.generateMipmaps=!0),this.depth===!0&&(t.depthTexture=new Mt),this.renderTargets.set(e,t)),t}updateBefore(e){if(this.bounces===!1&&ri)return!1;ri=!0;const{scene:t,camera:s,renderer:n,material:r}=e,{target:o}=this,a=this.getVirtualCamera(s),u=this.getRenderTarget(a);n.getDrawingBufferSize(ni),this._updateResolution(u,n),dn.setFromMatrixPosition(o.matrixWorld),Ko.setFromMatrixPosition(s.matrixWorld),Yn.extractRotation(o.matrixWorld),Ls.set(0,0,1),Ls.applyMatrix4(Yn),Kn.subVectors(dn,Ko);const l=Kn.dot(Ls)>0;let c=!1;if(l===!0&&this.forceUpdate===!1){if(this.hasOutput===!1){ri=!1;return}c=!0}Kn.reflect(Ls).negate(),Kn.add(dn),Yn.extractRotation(s.matrixWorld),ti.set(0,0,-1),ti.applyMatrix4(Yn),ti.add(Ko),si.subVectors(dn,ti),si.reflect(Ls).negate(),si.add(dn),a.coordinateSystem=s.coordinateSystem,a.position.copy(Kn),a.up.set(0,1,0),a.up.applyMatrix4(Yn),a.up.reflect(Ls),a.lookAt(si),a.near=s.near,a.far=s.far,a.updateMatrixWorld(),a.projectionMatrix.copy(s.projectionMatrix),cn.setFromNormalAndCoplanarPoint(Ls,dn),cn.applyMatrix4(a.matrixWorldInverse),Ut.set(cn.normal.x,cn.normal.y,cn.normal.z,cn.constant);const d=a.projectionMatrix;Qn.x=(Math.sign(Ut.x)+d.elements[8])/d.elements[0],Qn.y=(Math.sign(Ut.y)+d.elements[9])/d.elements[5],Qn.z=-1,Qn.w=(1+d.elements[10])/d.elements[14],Ut.multiplyScalar(1/Ut.dot(Qn));const p=0;d.elements[2]=Ut.x,d.elements[6]=Ut.y,d.elements[10]=n.coordinateSystem===Vn?Ut.z-p:Ut.z+1-p,d.elements[14]=Ut.w,this.textureNode.value=u.texture,this.depth===!0&&(this.textureNode.getDepthNode().value=u.depthTexture),r.visible=!1;const f=n.getRenderTarget(),m=n.getMRT(),y=n.autoClear;n.setMRT(null),n.setRenderTarget(u),n.autoClear=!0,c?(n.clear(),this.hasOutput=!1):(n.render(t,a),this.hasOutput=!0),n.setMRT(m),n.setRenderTarget(f),n.autoClear=y,r.visible=!0,ri=!1,this.forceUpdate=!1}get resolution(){return Bt('THREE.ReflectorNode: The "resolution" property has been renamed to "resolutionScale".'),this.resolutionScale}set resolution(e){Bt('THREE.ReflectorNode: The "resolution" property has been renamed to "resolutionScale".'),this.resolutionScale=e}}const hv=i=>E(new Ml(i)),Qo=new Cd(-1,1,1,-1,0,1);class pv extends Bd{constructor(e=!1){super();const t=e===!1?[0,-1,0,1,2,1]:[0,2,0,0,2,0];this.setAttribute("position",new Ql([-1,3,0,-1,-1,0,3,-1,0],3)),this.setAttribute("uv",new Ql(t,2))}}const fv=new pv;class Ro extends Ss{constructor(e=null){super(fv,e),this.camera=Qo,this.isQuadMesh=!0}async renderAsync(e){return e.renderAsync(this,Qo)}render(e){e.render(this,Qo)}}const mv=new he;class gv extends Ht{static get type(){return"RTTNode"}constructor(e,t=null,s=null,n={type:et}){const r=new As(t,s,n);super(r.texture,ce()),this.isRTTNode=!0,this.node=e,this.width=t,this.height=s,this.pixelRatio=1,this.renderTarget=r,this.textureNeedsUpdate=!0,this.autoUpdate=!0,this._rttNode=null,this._quadMesh=new Ro(new we),this.updateBeforeType=Y.RENDER}get autoResize(){return this.width===null}setup(e){return this._rttNode=this.node.context(e.getSharedContext()),this._quadMesh.material.name="RTT",this._quadMesh.material.needsUpdate=!0,super.setup(e)}setSize(e,t){this.width=e,this.height=t;const s=e*this.pixelRatio,n=t*this.pixelRatio;this.renderTarget.setSize(s,n),this.textureNeedsUpdate=!0}setPixelRatio(e){this.pixelRatio=e,this.setSize(this.width,this.height)}updateBefore({renderer:e}){if(this.textureNeedsUpdate===!1&&this.autoUpdate===!1)return;if(this.textureNeedsUpdate=!1,this.autoResize===!0){const s=e.getPixelRatio(),n=e.getSize(mv),r=n.width*s,o=n.height*s;(r!==this.renderTarget.width||o!==this.renderTarget.height)&&(this.renderTarget.setSize(r,o),this.textureNeedsUpdate=!0)}this._quadMesh.material.fragmentNode=this._rttNode;const t=e.getRenderTarget();e.setRenderTarget(this.renderTarget),this._quadMesh.render(e),e.setRenderTarget(t)}clone(){const e=new Ht(this.value,this.uvNode,this.levelNode);return e.sampler=this.sampler,e.referenceNode=this,e}}const rg=(i,...e)=>E(new gv(E(i),...e)),yv=(i,...e)=>i.isSampleNode||i.isTextureNode?i:i.isPassNode?i.getTextureNode():rg(i,...e),_n=N(([i,e,t],s)=>{let n;s.renderer.coordinateSystem===Vn?(i=M(i.x,i.y.oneMinus()).mul(2).sub(1),n=W(b(i,e),1)):n=W(b(i.x,i.y.oneMinus(),e).mul(2).sub(1),1);const r=W(t.mul(n));return r.xyz.div(r.w)}),_v=N(([i,e])=>{const t=e.mul(W(i,1)),s=t.xy.div(t.w).mul(.5).add(.5).toVar();return M(s.x,s.y.oneMinus())}),Tv=N(([i,e,t])=>{const s=bs(ve(e)),n=Ie(i.mul(s)).toVar(),r=ve(e,n).toVar(),o=ve(e,n.sub(Ie(2,0))).toVar(),a=ve(e,n.sub(Ie(1,0))).toVar(),u=ve(e,n.add(Ie(1,0))).toVar(),l=ve(e,n.add(Ie(2,0))).toVar(),c=ve(e,n.add(Ie(0,2))).toVar(),d=ve(e,n.add(Ie(0,1))).toVar(),p=ve(e,n.sub(Ie(0,1))).toVar(),f=ve(e,n.sub(Ie(0,2))).toVar(),m=ge(Z(g(2).mul(a).sub(o),r)).toVar(),y=ge(Z(g(2).mul(u).sub(l),r)).toVar(),x=ge(Z(g(2).mul(d).sub(c),r)).toVar(),S=ge(Z(g(2).mul(p).sub(f),r)).toVar(),R=_n(i,r,t).toVar(),C=m.lessThan(y).select(R.sub(_n(i.sub(M(g(1).div(s.x),0)),a,t)),R.negate().add(_n(i.add(M(g(1).div(s.x),0)),u,t))),D=x.lessThan(S).select(R.sub(_n(i.add(M(0,g(1).div(s.y))),d,t)),R.negate().add(_n(i.sub(M(0,g(1).div(s.y))),p,t)));return is(mo(C,D))});class xv extends k{static get type(){return"SampleNode"}constructor(e,t=null){super(),this.callback=e,this.uvNode=t,this.isSampleNode=!0}setup(){return this.sample(ce())}sample(e){return this.callback(e)}}const bv=(i,e=null)=>E(new xv(i,E(e)));class Rs extends k{static get type(){return"EventNode"}constructor(e,t){super("void"),this.eventType=e,this.callback=t,e===Rs.OBJECT?this.updateType=Y.OBJECT:e===Rs.MATERIAL&&(this.updateType=Y.RENDER)}update(e){this.callback(e)}}Rs.OBJECT="object";Rs.MATERIAL="material";const ig=(i,e)=>E(new Rs(i,e)).toStack(),Nv=i=>ig(Rs.OBJECT,i),Sv=i=>ig(Rs.MATERIAL,i);class vv extends En{constructor(e,t,s=Float32Array){const n=ArrayBuffer.isView(e)?e:new s(e*t);super(n,t),this.isStorageInstancedBufferAttribute=!0}}class Rv extends yi{constructor(e,t,s=Float32Array){const n=ArrayBuffer.isView(e)?e:new s(e*t);super(n,t),this.isStorageBufferAttribute=!0}}const Av=(i,e="float")=>{let t,s;e.isStruct===!0?(t=e.layout.getLength(),s=Vi("float")):(t=yh(e),s=Vi(e));const n=new Rv(i,t,s);return en(n,e,i)},Ev=(i,e="float")=>{let t,s;e.isStruct===!0?(t=e.layout.getLength(),s=Vi("float")):(t=yh(e),s=Vi(e));const n=new vv(i,t,s);return en(n,e,i)};class wv extends k{static get type(){return"PointUVNode"}constructor(){super("vec2"),this.isPointUVNode=!0}generate(){return"vec2( gl_PointCoord.x, 1.0 - gl_PointCoord.y )"}}const Cv=U(wv),Zn=new Rd,Zo=new Ge;class st extends k{static get type(){return"SceneNode"}constructor(e=st.BACKGROUND_BLURRINESS,t=null){super(),this.scope=e,this.scene=t}setup(e){const t=this.scope,s=this.scene!==null?this.scene:e.scene;let n;return t===st.BACKGROUND_BLURRINESS?n=fe("backgroundBlurriness","float",s):t===st.BACKGROUND_INTENSITY?n=fe("backgroundIntensity","float",s):t===st.BACKGROUND_ROTATION?n=$("mat4").setName("backgroundRotation").setGroup(z).onRenderUpdate(()=>{const r=s.background;return r!==null&&r.isTexture&&r.mapping!==Sy?(Zn.copy(s.backgroundRotation),Zn.x*=-1,Zn.y*=-1,Zn.z*=-1,Zo.makeRotationFromEuler(Zn)):Zo.identity(),Zo}):console.error("THREE.SceneNode: Unknown scope:",t),n}}st.BACKGROUND_BLURRINESS="backgroundBlurriness";st.BACKGROUND_INTENSITY="backgroundIntensity";st.BACKGROUND_ROTATION="backgroundRotation";const og=U(st,st.BACKGROUND_BLURRINESS),ru=U(st,st.BACKGROUND_INTENSITY),ag=U(st,st.BACKGROUND_ROTATION);class Mv extends Ht{static get type(){return"StorageTextureNode"}constructor(e,t,s=null){super(e,t),this.storeNode=s,this.isStorageTextureNode=!0,this.access=$e.WRITE_ONLY}getInputType(){return"storageTexture"}setup(e){super.setup(e);const t=e.getNodeProperties(this);return t.storeNode=this.storeNode,t}setAccess(e){return this.access=e,this}generate(e,t){let s;return this.storeNode!==null?s=this.generateStore(e):s=super.generate(e,t),s}toReadWrite(){return this.setAccess($e.READ_WRITE)}toReadOnly(){return this.setAccess($e.READ_ONLY)}toWriteOnly(){return this.setAccess($e.WRITE_ONLY)}generateStore(e){const t=e.getNodeProperties(this),{uvNode:s,storeNode:n,depthNode:r}=t,o=super.generate(e,"property"),a=s.build(e,this.value.is3DTexture===!0?"uvec3":"uvec2"),u=n.build(e,"vec4"),l=r?r.build(e,"int"):null,c=e.generateTextureStore(e,o,a,l,u);e.addLineFlowCode(c,this)}clone(){const e=super.clone();return e.storeNode=this.storeNode,e}}const ug=q(Mv).setParameterLength(1,3),Bv=(i,e,t)=>{const s=ug(i,e,t);return t!==null&&s.toStack(),s},Pv=N(({texture:i,uv:e})=>{const s=b().toVar();return H(e.x.lessThan(1e-4),()=>{s.assign(b(1,0,0))}).ElseIf(e.y.lessThan(1e-4),()=>{s.assign(b(0,1,0))}).ElseIf(e.z.lessThan(1e-4),()=>{s.assign(b(0,0,1))}).ElseIf(e.x.greaterThan(1-1e-4),()=>{s.assign(b(-1,0,0))}).ElseIf(e.y.greaterThan(1-1e-4),()=>{s.assign(b(0,-1,0))}).ElseIf(e.z.greaterThan(1-1e-4),()=>{s.assign(b(0,0,-1))}).Else(()=>{const r=i.sample(e.add(b(-.01,0,0))).r.sub(i.sample(e.add(b(.01,0,0))).r),o=i.sample(e.add(b(0,-.01,0))).r.sub(i.sample(e.add(b(0,.01,0))).r),a=i.sample(e.add(b(0,0,-.01))).r.sub(i.sample(e.add(b(0,0,.01))).r);s.assign(b(r,o,a))}),s.normalize()});class Fv extends Ht{static get type(){return"Texture3DNode"}constructor(e,t=null,s=null){super(e,t,s),this.isTexture3DNode=!0}getInputType(){return"texture3D"}getDefaultUV(){return b(.5,.5,.5)}setUpdateMatrix(){}setupUV(e,t){const s=this.value;return e.isFlipY()&&(s.isRenderTargetTexture===!0||s.isFramebufferTexture===!0)&&(this.sampler?t=t.flipY():t=t.setY(_(bs(this,this.levelNode).y).sub(t.y).sub(1))),t}generateUV(e,t){return t.build(e,"vec3")}generateOffset(e,t){return t.build(e,"ivec3")}normal(e){return Pv({texture:this,uv:e})}}const lg=q(Fv).setParameterLength(1,3);class Lv extends _o{static get type(){return"UserDataNode"}constructor(e,t,s=null){super(e,t,s),this.userData=s}updateReference(e){return this.reference=this.userData!==null?this.userData:e.object.userData,this.reference}}const Dv=(i,e,t)=>E(new Lv(i,e,t)),Hc=new WeakMap;class Uv extends Ce{static get type(){return"VelocityNode"}constructor(){super("vec2"),this.projectionMatrix=null,this.updateType=Y.OBJECT,this.updateAfterType=Y.OBJECT,this.previousModelWorldMatrix=$(new Ge),this.previousProjectionMatrix=$(new Ge).setGroup(z),this.previousCameraViewMatrix=$(new Ge)}setProjectionMatrix(e){this.projectionMatrix=e}update({frameId:e,camera:t,object:s}){const n=qc(s);this.previousModelWorldMatrix.value.copy(n);const r=cg(t);r.frameId!==e&&(r.frameId=e,r.previousProjectionMatrix===void 0?(r.previousProjectionMatrix=new Ge,r.previousCameraViewMatrix=new Ge,r.currentProjectionMatrix=new Ge,r.currentCameraViewMatrix=new Ge,r.previousProjectionMatrix.copy(this.projectionMatrix||t.projectionMatrix),r.previousCameraViewMatrix.copy(t.matrixWorldInverse)):(r.previousProjectionMatrix.copy(r.currentProjectionMatrix),r.previousCameraViewMatrix.copy(r.currentCameraViewMatrix)),r.currentProjectionMatrix.copy(this.projectionMatrix||t.projectionMatrix),r.currentCameraViewMatrix.copy(t.matrixWorldInverse),this.previousProjectionMatrix.value.copy(r.previousProjectionMatrix),this.previousCameraViewMatrix.value.copy(r.previousCameraViewMatrix))}updateAfter({object:e}){qc(e).copy(e.matrixWorld)}setup(){const e=this.projectionMatrix===null?Gn:$(this.projectionMatrix),t=this.previousCameraViewMatrix.mul(this.previousModelWorldMatrix),s=e.mul(on).mul(Ae),n=this.previousProjectionMatrix.mul(t).mul(Hi),r=s.xy.div(s.w),o=n.xy.div(n.w);return Z(r,o)}}function cg(i){let e=Hc.get(i);return e===void 0&&(e={},Hc.set(i,e)),e}function qc(i,e=0){const t=cg(i);let s=t[e];return s===void 0&&(t[e]=s=new Ge,t[e].copy(i.matrixWorld)),s}const Iv=U(Uv),Vv=N(([i])=>Bl(i.rgb)),Ov=N(([i,e=g(1)])=>e.mix(Bl(i.rgb),i.rgb)),Gv=N(([i,e=g(1)])=>{const t=Be(i.r,i.g,i.b).div(3),s=i.r.max(i.g.max(i.b)),n=s.sub(t).mul(e).mul(-3);return ne(i.rgb,s,n)}),kv=N(([i,e=g(1)])=>{const t=b(.57735,.57735,.57735),s=e.cos();return b(i.rgb.mul(s).add(t.cross(i.rgb).mul(e.sin()).add(t.mul(Es(t,i.rgb).mul(s.oneMinus())))))}),Bl=(i,e=b(Re.getLuminanceCoefficients(new j)))=>Es(i,e),zv=N(([i,e=b(1),t=b(0),s=b(1),n=g(1),r=b(Re.getLuminanceCoefficients(new j,Ad))])=>{const o=i.rgb.dot(b(r)),a=Se(i.rgb.mul(e).add(t),0).toVar(),u=a.pow(s).toVar();return H(a.r.greaterThan(0),()=>{a.r.assign(u.r)}),H(a.g.greaterThan(0),()=>{a.g.assign(u.g)}),H(a.b.greaterThan(0),()=>{a.b.assign(u.b)}),a.assign(o.add(a.sub(o).mul(n))),W(a.rgb,i.a)});class $v extends Ce{static get type(){return"PosterizeNode"}constructor(e,t){super(),this.sourceNode=e,this.stepsNode=t}setup(){const{sourceNode:e,stepsNode:t}=this;return e.mul(t).floor().div(t)}}const Wv=q($v).setParameterLength(2),ii=new he;class dg extends Ht{static get type(){return"PassTextureNode"}constructor(e,t){super(t),this.passNode=e,this.setUpdateMatrix(!1)}setup(e){return this.passNode.build(e),super.setup(e)}clone(){return new this.constructor(this.passNode,this.value)}}class jc extends dg{static get type(){return"PassMultipleTextureNode"}constructor(e,t,s=!1){super(e,null),this.textureName=t,this.previousTexture=s}updateTexture(){this.value=this.previousTexture?this.passNode.getPreviousTexture(this.textureName):this.passNode.getTexture(this.textureName)}setup(e){return this.updateTexture(),super.setup(e)}clone(){const e=new this.constructor(this.passNode,this.textureName,this.previousTexture);return e.uvNode=this.uvNode,e.levelNode=this.levelNode,e.biasNode=this.biasNode,e.sampler=this.sampler,e.depthNode=this.depthNode,e.compareNode=this.compareNode,e.gradNode=this.gradNode,e}}class qt extends Ce{static get type(){return"PassNode"}constructor(e,t,s,n={}){super("vec4"),this.scope=e,this.scene=t,this.camera=s,this.options=n,this._pixelRatio=1,this._width=1,this._height=1;const r=new Mt;r.isRenderTargetTexture=!0,r.name="depth";const o=new As(this._width*this._pixelRatio,this._height*this._pixelRatio,{type:et,...n});o.texture.name="output",o.depthTexture=r,this.renderTarget=o,this._textures={output:o.texture,depth:r},this._textureNodes={},this._linearDepthNodes={},this._viewZNodes={},this._previousTextures={},this._previousTextureNodes={},this._cameraNear=$(0),this._cameraFar=$(0),this._mrt=null,this._layers=null,this._resolution=1,this._viewport=null,this._scissor=null,this.isPassNode=!0,this.updateBeforeType=Y.FRAME,this.global=!0}setResolution(e){return this._resolution=e,this}getResolution(){return this._resolution}setLayers(e){return this._layers=e,this}getLayers(){return this._layers}setMRT(e){return this._mrt=e,this}getMRT(){return this._mrt}getTexture(e){let t=this._textures[e];return t===void 0&&(t=this.renderTarget.texture.clone(),t.name=e,this._textures[e]=t,this.renderTarget.textures.push(t)),t}getPreviousTexture(e){let t=this._previousTextures[e];return t===void 0&&(t=this.getTexture(e).clone(),this._previousTextures[e]=t),t}toggleTexture(e){const t=this._previousTextures[e];if(t!==void 0){const s=this._textures[e],n=this.renderTarget.textures.indexOf(s);this.renderTarget.textures[n]=t,this._textures[e]=t,this._previousTextures[e]=s,this._textureNodes[e].updateTexture(),this._previousTextureNodes[e].updateTexture()}}getTextureNode(e="output"){let t=this._textureNodes[e];return t===void 0&&(t=E(new jc(this,e)),t.updateTexture(),this._textureNodes[e]=t),t}getPreviousTextureNode(e="output"){let t=this._previousTextureNodes[e];return t===void 0&&(this._textureNodes[e]===void 0&&this.getTextureNode(e),t=E(new jc(this,e,!0)),t.updateTexture(),this._previousTextureNodes[e]=t),t}getViewZNode(e="depth"){let t=this._viewZNodes[e];if(t===void 0){const s=this._cameraNear,n=this._cameraFar;this._viewZNodes[e]=t=_l(this.getTextureNode(e),s,n)}return t}getLinearDepthNode(e="depth"){let t=this._linearDepthNodes[e];if(t===void 0){const s=this._cameraNear,n=this._cameraFar,r=this.getViewZNode(e);this._linearDepthNodes[e]=t=Bn(r,s,n)}return t}async compileAsync(e){const t=e.getRenderTarget(),s=e.getMRT();e.setRenderTarget(this.renderTarget),e.setMRT(this._mrt),await e.compileAsync(this.scene,this.camera),e.setRenderTarget(t),e.setMRT(s)}setup({renderer:e}){return this.renderTarget.samples=this.options.samples===void 0?e.samples:this.options.samples,this.renderTarget.texture.type=e.getColorBufferType(),this.scope===qt.COLOR?this.getTextureNode():this.getLinearDepthNode()}updateBefore(e){const{renderer:t}=e,{scene:s}=this;let n,r;const o=t.getOutputRenderTarget();o&&o.isXRRenderTarget===!0?(r=1,n=t.xr.getCamera(),t.xr.updateCamera(n),ii.set(o.width,o.height)):(n=this.camera,r=t.getPixelRatio(),t.getSize(ii)),this._pixelRatio=r,this.setSize(ii.width,ii.height);const a=t.getRenderTarget(),u=t.getMRT(),l=n.layers.mask;this._cameraNear.value=n.near,this._cameraFar.value=n.far,this._layers!==null&&(n.layers.mask=this._layers.mask);for(const c in this._previousTextures)this.toggleTexture(c);t.setRenderTarget(this.renderTarget),t.setMRT(this._mrt),t.render(s,n),t.setRenderTarget(a),t.setMRT(u),n.layers.mask=l}setSize(e,t){this._width=e,this._height=t;const s=this._width*this._pixelRatio*this._resolution,n=this._height*this._pixelRatio*this._resolution;this.renderTarget.setSize(s,n),this._scissor!==null&&this.renderTarget.scissor.copy(this._scissor),this._viewport!==null&&this.renderTarget.viewport.copy(this._viewport)}setScissor(e,t,s,n){e===null?this._scissor=null:(this._scissor===null&&(this._scissor=new _e),e.isVector4?this._scissor.copy(e):this._scissor.set(e,t,s,n),this._scissor.multiplyScalar(this._pixelRatio*this._resolution).floor())}setViewport(e,t,s,n){e===null?this._viewport=null:(this._viewport===null&&(this._viewport=new _e),e.isVector4?this._viewport.copy(e):this._viewport.set(e,t,s,n),this._viewport.multiplyScalar(this._pixelRatio*this._resolution).floor())}setPixelRatio(e){this._pixelRatio=e,this.setSize(this._width,this._height)}dispose(){this.renderTarget.dispose()}}qt.COLOR="color";qt.DEPTH="depth";const Hv=(i,e,t)=>E(new qt(qt.COLOR,i,e,t)),qv=(i,e)=>E(new dg(i,e)),jv=(i,e,t)=>E(new qt(qt.DEPTH,i,e,t));class Xv extends qt{static get type(){return"ToonOutlinePassNode"}constructor(e,t,s,n,r){super(qt.COLOR,e,t),this.colorNode=s,this.thicknessNode=n,this.alphaNode=r,this._materialCache=new WeakMap}updateBefore(e){const{renderer:t}=e,s=t.getRenderObjectFunction();t.setRenderObjectFunction((n,r,o,a,u,l,c,d)=>{if((u.isMeshToonMaterial||u.isMeshToonNodeMaterial)&&u.wireframe===!1){const p=this._getOutlineMaterial(u);t.renderObject(n,r,o,a,p,l,c,d)}t.renderObject(n,r,o,a,u,l,c,d)}),super.updateBefore(e),t.setRenderObjectFunction(s)}_createMaterial(){const e=new we;e.isMeshToonOutlineMaterial=!0,e.name="Toon_Outline",e.side=nt;const t=it.negate(),s=Gn.mul(on),n=g(1),r=s.mul(W(Ae,1)),o=s.mul(W(Ae.add(t),1)),a=is(r.sub(o));return e.vertexNode=r.add(a.mul(this.thicknessNode).mul(r.w).mul(n)),e.colorNode=W(this.colorNode,this.alphaNode),e}_getOutlineMaterial(e){let t=this._materialCache.get(e);return t===void 0&&(t=this._createMaterial(),this._materialCache.set(e,t)),t}}const Yv=(i,e,t=new jt(0,0,0),s=.003,n=1)=>E(new Xv(i,e,E(t),E(s),E(n))),hg=N(([i,e])=>i.mul(e).clamp()).setLayout({name:"linearToneMapping",type:"vec3",inputs:[{name:"color",type:"vec3"},{name:"exposure",type:"float"}]}),pg=N(([i,e])=>(i=i.mul(e),i.div(i.add(1)).clamp())).setLayout({name:"reinhardToneMapping",type:"vec3",inputs:[{name:"color",type:"vec3"},{name:"exposure",type:"float"}]}),fg=N(([i,e])=>{i=i.mul(e),i=i.sub(.004).max(0);const t=i.mul(i.mul(6.2).add(.5)),s=i.mul(i.mul(6.2).add(1.7)).add(.06);return t.div(s).pow(2.2)}).setLayout({name:"cineonToneMapping",type:"vec3",inputs:[{name:"color",type:"vec3"},{name:"exposure",type:"float"}]}),Kv=N(([i])=>{const e=i.mul(i.add(.0245786)).sub(90537e-9),t=i.mul(i.add(.432951).mul(.983729)).add(.238081);return e.div(t)}),mg=N(([i,e])=>{const t=Xe(.59719,.35458,.04823,.076,.90834,.01566,.0284,.13383,.83777),s=Xe(1.60475,-.53108,-.07367,-.10208,1.10813,-.00605,-.00327,-.07276,1.07602);return i=i.mul(e).div(.6),i=t.mul(i),i=Kv(i),i=s.mul(i),i.clamp()}).setLayout({name:"acesFilmicToneMapping",type:"vec3",inputs:[{name:"color",type:"vec3"},{name:"exposure",type:"float"}]}),Qv=Xe(b(1.6605,-.1246,-.0182),b(-.5876,1.1329,-.1006),b(-.0728,-.0083,1.1187)),Zv=Xe(b(.6274,.0691,.0164),b(.3293,.9195,.088),b(.0433,.0113,.8956)),Jv=N(([i])=>{const e=b(i).toVar(),t=b(e.mul(e)).toVar(),s=b(t.mul(t)).toVar();return g(15.5).mul(s.mul(t)).sub(X(40.14,s.mul(e))).add(X(31.96,s).sub(X(6.868,t.mul(e))).add(X(.4298,t).add(X(.1191,e).sub(.00232))))}),gg=N(([i,e])=>{const t=b(i).toVar(),s=Xe(b(.856627153315983,.137318972929847,.11189821299995),b(.0951212405381588,.761241990602591,.0767994186031903),b(.0482516061458583,.101439036467562,.811302368396859)),n=Xe(b(1.1271005818144368,-.1413297634984383,-.14132976349843826),b(-.11060664309660323,1.157823702216272,-.11060664309660294),b(-.016493938717834573,-.016493938717834257,1.2519364065950405)),r=g(-12.47393),o=g(4.026069);return t.mulAssign(e),t.assign(Zv.mul(t)),t.assign(s.mul(t)),t.assign(Se(t,1e-10)),t.assign(Ot(t)),t.assign(t.sub(r).div(o.sub(r))),t.assign(xt(t,0,1)),t.assign(Jv(t)),t.assign(n.mul(t)),t.assign(mt(Se(b(0),t),b(2.2))),t.assign(Qv.mul(t)),t.assign(xt(t,0,1)),t}).setLayout({name:"agxToneMapping",type:"vec3",inputs:[{name:"color",type:"vec3"},{name:"exposure",type:"float"}]}),yg=N(([i,e])=>{const t=g(.76),s=g(.15);i=i.mul(e);const n=rt(i.r,rt(i.g,i.b)),r=ke(n.lessThan(.08),n.sub(X(6.25,n.mul(n))),.04);i.subAssign(r);const o=Se(i.r,Se(i.g,i.b));H(o.lessThan(t),()=>i);const a=Z(1,t),u=Z(1,a.mul(a).div(o.add(a.sub(t))));i.mulAssign(u.div(o));const l=Z(1,dt(1,s.mul(o.sub(u)).add(1)));return ne(i,b(u),l)}).setLayout({name:"neutralToneMapping",type:"vec3",inputs:[{name:"color",type:"vec3"},{name:"exposure",type:"float"}]});class He extends k{static get type(){return"CodeNode"}constructor(e="",t=[],s=""){super("code"),this.isCodeNode=!0,this.global=!0,this.code=e,this.includes=t,this.language=s}setIncludes(e){return this.includes=e,this}getIncludes(){return this.includes}generate(e){const t=this.getIncludes(e);for(const n of t)n.build(e);const s=e.getCodeFromNode(this,this.getNodeType(e));return s.code=this.code,s.code}serialize(e){super.serialize(e),e.code=this.code,e.language=this.language}deserialize(e){super.deserialize(e),this.code=e.code,this.language=e.language}}const Ao=q(He).setParameterLength(1,3),eR=(i,e)=>Ao(i,e,"js"),tR=(i,e)=>Ao(i,e,"wgsl"),sR=(i,e)=>Ao(i,e,"glsl");class _g extends He{static get type(){return"FunctionNode"}constructor(e="",t=[],s=""){super(e,t,s)}getNodeType(e){return this.getNodeFunction(e).type}getMemberType(e,t){const s=this.getNodeType(e);return e.getStructTypeNode(s).getMemberType(e,t)}getInputs(e){return this.getNodeFunction(e).inputs}getNodeFunction(e){const t=e.getDataFromNode(this);let s=t.nodeFunction;return s===void 0&&(s=e.parser.parseFunction(this.code),t.nodeFunction=s),s}generate(e,t){super.generate(e);const s=this.getNodeFunction(e),n=s.name,r=s.type,o=e.getCodeFromNode(this,r);n!==""&&(o.name=n);const a=e.getPropertyName(o),u=this.getNodeFunction(e).getCode(a);return o.code=u+`
`,t==="property"?a:e.format(`${a}()`,r,t)}}const Tg=(i,e=[],t="")=>{for(let r=0;r<e.length;r++){const o=e[r];typeof o=="function"&&(e[r]=o.functionNode)}const s=E(new _g(i,e,t)),n=(...r)=>s.call(...r);return n.functionNode=s,n},nR=(i,e)=>Tg(i,e,"glsl"),rR=(i,e)=>Tg(i,e,"wgsl");class iR extends k{static get type(){return"ScriptableValueNode"}constructor(e=null){super(),this._value=e,this._cache=null,this.inputType=null,this.outputType=null,this.events=new pu,this.isScriptableValueNode=!0}get isScriptableOutputNode(){return this.outputType!==null}set value(e){this._value!==e&&(this._cache&&this.inputType==="URL"&&this.value.value instanceof ArrayBuffer&&(URL.revokeObjectURL(this._cache),this._cache=null),this._value=e,this.events.dispatchEvent({type:"change"}),this.refresh())}get value(){return this._value}refresh(){this.events.dispatchEvent({type:"refresh"})}getValue(){const e=this.value;if(e&&this._cache===null&&this.inputType==="URL"&&e.value instanceof ArrayBuffer)this._cache=URL.createObjectURL(new Blob([e.value]));else if(e&&e.value!==null&&e.value!==void 0&&((this.inputType==="URL"||this.inputType==="String")&&typeof e.value=="string"||this.inputType==="Number"&&typeof e.value=="number"||this.inputType==="Vector2"&&e.value.isVector2||this.inputType==="Vector3"&&e.value.isVector3||this.inputType==="Vector4"&&e.value.isVector4||this.inputType==="Color"&&e.value.isColor||this.inputType==="Matrix3"&&e.value.isMatrix3||this.inputType==="Matrix4"&&e.value.isMatrix4))return e.value;return this._cache||e}getNodeType(e){return this.value&&this.value.isNode?this.value.getNodeType(e):"float"}setup(){return this.value&&this.value.isNode?this.value:g()}serialize(e){super.serialize(e),this.value!==null?this.inputType==="ArrayBuffer"?e.value=Th(this.value):e.value=this.value?this.value.toJSON(e.meta).uuid:null:e.value=null,e.inputType=this.inputType,e.outputType=this.outputType}deserialize(e){super.deserialize(e);let t=null;e.value!==null&&(e.inputType==="ArrayBuffer"?t=xh(e.value):e.inputType==="Texture"?t=e.meta.textures[e.value]:t=e.meta.nodes[e.value]||null),this.value=t,this.inputType=e.inputType,this.outputType=e.outputType}}const wi=q(iR).setParameterLength(1);class xg extends Map{get(e,t=null,...s){if(this.has(e))return super.get(e);if(t!==null){const n=t(...s);return this.set(e,n),n}}}class oR{constructor(e){this.scriptableNode=e}get parameters(){return this.scriptableNode.parameters}get layout(){return this.scriptableNode.getLayout()}getInputLayout(e){return this.scriptableNode.getInputLayout(e)}get(e){const t=this.parameters[e];return t?t.getValue():null}}const Ci=new xg;class aR extends k{static get type(){return"ScriptableNode"}constructor(e=null,t={}){super(),this.codeNode=e,this.parameters=t,this._local=new xg,this._output=wi(null),this._outputs={},this._source=this.source,this._method=null,this._object=null,this._value=null,this._needsOutputUpdate=!0,this.onRefresh=this.onRefresh.bind(this),this.isScriptableNode=!0}get source(){return this.codeNode?this.codeNode.code:""}setLocal(e,t){return this._local.set(e,t)}getLocal(e){return this._local.get(e)}onRefresh(){this._refresh()}getInputLayout(e){for(const t of this.getLayout())if(t.inputType&&(t.id===e||t.name===e))return t}getOutputLayout(e){for(const t of this.getLayout())if(t.outputType&&(t.id===e||t.name===e))return t}setOutput(e,t){const s=this._outputs;return s[e]===void 0?s[e]=wi(t):s[e].value=t,this}getOutput(e){return this._outputs[e]}getParameter(e){return this.parameters[e]}setParameter(e,t){const s=this.parameters;return t&&t.isScriptableNode?(this.deleteParameter(e),s[e]=t,s[e].getDefaultOutput().events.addEventListener("refresh",this.onRefresh)):t&&t.isScriptableValueNode?(this.deleteParameter(e),s[e]=t,s[e].events.addEventListener("refresh",this.onRefresh)):s[e]===void 0?(s[e]=wi(t),s[e].events.addEventListener("refresh",this.onRefresh)):s[e].value=t,this}getValue(){return this.getDefaultOutput().getValue()}deleteParameter(e){let t=this.parameters[e];return t&&(t.isScriptableNode&&(t=t.getDefaultOutput()),t.events.removeEventListener("refresh",this.onRefresh)),this}clearParameters(){for(const e of Object.keys(this.parameters))this.deleteParameter(e);return this.needsUpdate=!0,this}call(e,...t){const n=this.getObject()[e];if(typeof n=="function")return n(...t)}async callAsync(e,...t){const n=this.getObject()[e];if(typeof n=="function")return n.constructor.name==="AsyncFunction"?await n(...t):n(...t)}getNodeType(e){return this.getDefaultOutputNode().getNodeType(e)}refresh(e=null){e!==null?this.getOutput(e).refresh():this._refresh()}getObject(){if(this.needsUpdate&&this.dispose(),this._object!==null)return this._object;const e=()=>this.refresh(),t=(l,c)=>this.setOutput(l,c),s=new oR(this),n=Ci.get("THREE"),r=Ci.get("TSL"),o=this.getMethod(),a=[s,this._local,Ci,e,t,n,r];this._object=o(...a);const u=this._object.layout;if(u&&(u.cache===!1&&this._local.clear(),this._output.outputType=u.outputType||null,Array.isArray(u.elements)))for(const l of u.elements){const c=l.id||l.name;l.inputType&&(this.getParameter(c)===void 0&&this.setParameter(c,null),this.getParameter(c).inputType=l.inputType),l.outputType&&(this.getOutput(c)===void 0&&this.setOutput(c,null),this.getOutput(c).outputType=l.outputType)}return this._object}deserialize(e){super.deserialize(e);for(const t in this.parameters){let s=this.parameters[t];s.isScriptableNode&&(s=s.getDefaultOutput()),s.events.addEventListener("refresh",this.onRefresh)}}getLayout(){return this.getObject().layout}getDefaultOutputNode(){const e=this.getDefaultOutput().value;return e&&e.isNode?e:g()}getDefaultOutput(){return this._exec()._output}getMethod(){if(this.needsUpdate&&this.dispose(),this._method!==null)return this._method;const e=["parameters","local","global","refresh","setOutput","THREE","TSL"],s=["layout","init","main","dispose"].join(", "),n="var "+s+`; var output = {};
`,r=`
return { ...output, `+s+" };",o=n+this.codeNode.code+r;return this._method=new Function(...e,o),this._method}dispose(){this._method!==null&&(this._object&&typeof this._object.dispose=="function"&&this._object.dispose(),this._method=null,this._object=null,this._source=null,this._value=null,this._needsOutputUpdate=!0,this._output.value=null,this._outputs={})}setup(){return this.getDefaultOutputNode()}getCacheKey(e){const t=[fh(this.source),this.getDefaultOutputNode().getCacheKey(e)];for(const s in this.parameters)t.push(this.parameters[s].getCacheKey(e));return eo(t)}set needsUpdate(e){e===!0&&this.dispose()}get needsUpdate(){return this.source!==this._source}_exec(){return this.codeNode===null?this:(this._needsOutputUpdate===!0&&(this._value=this.call("main"),this._needsOutputUpdate=!1),this._output.value=this._value,this)}_refresh(){this.needsUpdate=!0,this._exec(),this._output.refresh()}}const uR=q(aR).setParameterLength(1,2);function bg(i){let e;const t=i.context.getViewZ;return t!==void 0&&(e=t(this)),(e||Ee.z).negate()}const Pl=N(([i,e],t)=>{const s=bg(t);return Wt(i,e,s)}),Fl=N(([i],e)=>{const t=bg(e);return i.mul(i,t,t).negate().exp().oneMinus()}),Br=N(([i,e])=>W(e.toFloat().mix(Cn.rgb,i.toVec3()),Cn.a));function lR(i,e,t){return console.warn('THREE.TSL: "rangeFog( color, near, far )" is deprecated. Use "fog( color, rangeFogFactor( near, far ) )" instead.'),Br(i,Pl(e,t))}function cR(i,e){return console.warn('THREE.TSL: "densityFog( color, density )" is deprecated. Use "fog( color, densityFogFactor( density ) )" instead.'),Br(i,Fl(e))}let Ds=null,Us=null;class dR extends k{static get type(){return"RangeNode"}constructor(e=g(),t=g()){super(),this.minNode=e,this.maxNode=t}getVectorLength(e){const t=e.getTypeLength(ys(this.minNode.value)),s=e.getTypeLength(ys(this.maxNode.value));return t>s?t:s}getNodeType(e){return e.object.count>1?e.getTypeFromLength(this.getVectorLength(e)):"float"}setup(e){const t=e.object;let s=null;if(t.count>1){const n=this.minNode.value,r=this.maxNode.value,o=e.getTypeLength(ys(n)),a=e.getTypeLength(ys(r));Ds=Ds||new _e,Us=Us||new _e,Ds.setScalar(0),Us.setScalar(0),o===1?Ds.setScalar(n):n.isColor?Ds.set(n.r,n.g,n.b,1):Ds.set(n.x,n.y,n.z||0,n.w||0),a===1?Us.setScalar(r):r.isColor?Us.set(r.r,r.g,r.b,1):Us.set(r.x,r.y,r.z||0,r.w||0);const u=4,l=u*t.count,c=new Float32Array(l);for(let p=0;p<l;p++){const f=p%u,m=Ds.getComponent(f),y=Us.getComponent(f);c[p]=cu.lerp(m,y,Math.random())}const d=this.getNodeType(e);if(t.count<=4096)s=Ir(c,"vec4",t.count).element(Ns).convert(d);else{const p=new En(c,4);e.geometry.setAttribute("__range"+this.id,p),s=Wi(p).convert(d)}}else s=g(0);return s}}const hR=q(dR).setParameterLength(2);class pR extends k{static get type(){return"ComputeBuiltinNode"}constructor(e,t){super(t),this._builtinName=e}getHash(e){return this.getBuiltinName(e)}getNodeType(){return this.nodeType}setBuiltinName(e){return this._builtinName=e,this}getBuiltinName(){return this._builtinName}hasBuiltin(e){return e.hasBuiltin(this._builtinName)}generate(e,t){const s=this.getBuiltinName(e),n=this.getNodeType(e);return e.shaderStage==="compute"?e.format(s,n,t):(console.warn(`ComputeBuiltinNode: Compute built-in value ${s} can not be accessed in the ${e.shaderStage} stage`),e.generateConst(n))}serialize(e){super.serialize(e),e.global=this.global,e._builtinName=this._builtinName}deserialize(e){super.deserialize(e),this.global=e.global,this._builtinName=e._builtinName}}const $r=(i,e)=>E(new pR(i,e)),fR=$r("numWorkgroups","uvec3"),mR=$r("workgroupId","uvec3"),gR=$r("globalId","uvec3"),yR=$r("localId","uvec3"),_R=$r("subgroupSize","uint");class TR extends k{constructor(e){super(),this.scope=e}generate(e){const{scope:t}=this,{renderer:s}=e;s.backend.isWebGLBackend===!0?e.addFlowCode(`	// ${t}Barrier 
`):e.addLineFlowCode(`${t}Barrier()`,this)}}const Ll=q(TR),xR=()=>Ll("workgroup").toStack(),bR=()=>Ll("storage").toStack(),NR=()=>Ll("texture").toStack();class SR extends rn{constructor(e,t){super(e,t),this.isWorkgroupInfoElementNode=!0}generate(e,t){let s;const n=e.context.assign;if(s=super.generate(e),n!==!0){const r=this.getNodeType(e);s=e.format(s,r,t)}return s}}class vR extends k{constructor(e,t,s=0){super(t),this.bufferType=t,this.bufferCount=s,this.isWorkgroupInfoNode=!0,this.elementType=t,this.scope=e,this.name=""}setName(e){return this.name=e,this}label(e){return console.warn('THREE.TSL: "label()" has been deprecated. Use "setName()" instead.'),this.setName(e)}setScope(e){return this.scope=e,this}getElementType(){return this.elementType}getInputType(){return`${this.scope}Array`}element(e){return E(new SR(this,e))}generate(e){const t=this.name!==""?this.name:`${this.scope}Array_${this.id}`;return e.getScopedArray(t,this.scope.toLowerCase(),this.bufferType,this.bufferCount)}}const RR=(i,e)=>E(new vR("Workgroup",i,e));class Ve extends k{static get type(){return"AtomicFunctionNode"}constructor(e,t,s){super("uint"),this.method=e,this.pointerNode=t,this.valueNode=s,this.parents=!0}getInputType(e){return this.pointerNode.getNodeType(e)}getNodeType(e){return this.getInputType(e)}generate(e){const t=e.getNodeProperties(this),s=t.parents,n=this.method,r=this.getNodeType(e),o=this.getInputType(e),a=this.pointerNode,u=this.valueNode,l=[];l.push(`&${a.build(e,o)}`),u!==null&&l.push(u.build(e,o));const c=`${e.getMethod(n,r)}( ${l.join(", ")} )`;if(s?s.length===1&&s[0].isStackNode===!0:!1)e.addLineFlowCode(c,this);else return t.constNode===void 0&&(t.constNode=os(c,r).toConst()),t.constNode.build(e)}}Ve.ATOMIC_LOAD="atomicLoad";Ve.ATOMIC_STORE="atomicStore";Ve.ATOMIC_ADD="atomicAdd";Ve.ATOMIC_SUB="atomicSub";Ve.ATOMIC_MAX="atomicMax";Ve.ATOMIC_MIN="atomicMin";Ve.ATOMIC_AND="atomicAnd";Ve.ATOMIC_OR="atomicOr";Ve.ATOMIC_XOR="atomicXor";const AR=q(Ve),Kt=(i,e,t)=>AR(i,e,t).toStack(),ER=i=>Kt(Ve.ATOMIC_LOAD,i,null),wR=(i,e)=>Kt(Ve.ATOMIC_STORE,i,e),CR=(i,e)=>Kt(Ve.ATOMIC_ADD,i,e),MR=(i,e)=>Kt(Ve.ATOMIC_SUB,i,e),BR=(i,e)=>Kt(Ve.ATOMIC_MAX,i,e),PR=(i,e)=>Kt(Ve.ATOMIC_MIN,i,e),FR=(i,e)=>Kt(Ve.ATOMIC_AND,i,e),LR=(i,e)=>Kt(Ve.ATOMIC_OR,i,e),DR=(i,e)=>Kt(Ve.ATOMIC_XOR,i,e);class I extends Ce{static get type(){return"SubgroupFunctionNode"}constructor(e,t=null,s=null){super(),this.method=e,this.aNode=t,this.bNode=s}getInputType(e){const t=this.aNode?this.aNode.getNodeType(e):null,s=this.bNode?this.bNode.getNodeType(e):null,n=e.isMatrix(t)?0:e.getTypeLength(t),r=e.isMatrix(s)?0:e.getTypeLength(s);return n>r?t:s}getNodeType(e){const t=this.method;return t===I.SUBGROUP_ELECT?"bool":t===I.SUBGROUP_BALLOT?"uvec4":this.getInputType(e)}generate(e,t){const s=this.method,n=this.getNodeType(e),r=this.getInputType(e),o=this.aNode,a=this.bNode,u=[];if(s===I.SUBGROUP_BROADCAST||s===I.SUBGROUP_SHUFFLE||s===I.QUAD_BROADCAST){const c=a.getNodeType(e);u.push(o.build(e,n),a.build(e,c==="float"?"int":n))}else s===I.SUBGROUP_SHUFFLE_XOR||s===I.SUBGROUP_SHUFFLE_DOWN||s===I.SUBGROUP_SHUFFLE_UP?u.push(o.build(e,n),a.build(e,"uint")):(o!==null&&u.push(o.build(e,r)),a!==null&&u.push(a.build(e,r)));const l=u.length===0?"()":`( ${u.join(", ")} )`;return e.format(`${e.getMethod(s,n)}${l}`,n,t)}serialize(e){super.serialize(e),e.method=this.method}deserialize(e){super.deserialize(e),this.method=e.method}}I.SUBGROUP_ELECT="subgroupElect";I.SUBGROUP_BALLOT="subgroupBallot";I.SUBGROUP_ADD="subgroupAdd";I.SUBGROUP_INCLUSIVE_ADD="subgroupInclusiveAdd";I.SUBGROUP_EXCLUSIVE_AND="subgroupExclusiveAdd";I.SUBGROUP_MUL="subgroupMul";I.SUBGROUP_INCLUSIVE_MUL="subgroupInclusiveMul";I.SUBGROUP_EXCLUSIVE_MUL="subgroupExclusiveMul";I.SUBGROUP_AND="subgroupAnd";I.SUBGROUP_OR="subgroupOr";I.SUBGROUP_XOR="subgroupXor";I.SUBGROUP_MIN="subgroupMin";I.SUBGROUP_MAX="subgroupMax";I.SUBGROUP_ALL="subgroupAll";I.SUBGROUP_ANY="subgroupAny";I.SUBGROUP_BROADCAST_FIRST="subgroupBroadcastFirst";I.QUAD_SWAP_X="quadSwapX";I.QUAD_SWAP_Y="quadSwapY";I.QUAD_SWAP_DIAGONAL="quadSwapDiagonal";I.SUBGROUP_BROADCAST="subgroupBroadcast";I.SUBGROUP_SHUFFLE="subgroupShuffle";I.SUBGROUP_SHUFFLE_XOR="subgroupShuffleXor";I.SUBGROUP_SHUFFLE_UP="subgroupShuffleUp";I.SUBGROUP_SHUFFLE_DOWN="subgroupShuffleDown";I.QUAD_BROADCAST="quadBroadcast";const UR=L(I,I.SUBGROUP_ELECT).setParameterLength(0),IR=L(I,I.SUBGROUP_BALLOT).setParameterLength(1),VR=L(I,I.SUBGROUP_ADD).setParameterLength(1),OR=L(I,I.SUBGROUP_INCLUSIVE_ADD).setParameterLength(1),GR=L(I,I.SUBGROUP_EXCLUSIVE_AND).setParameterLength(1),kR=L(I,I.SUBGROUP_MUL).setParameterLength(1),zR=L(I,I.SUBGROUP_INCLUSIVE_MUL).setParameterLength(1),$R=L(I,I.SUBGROUP_EXCLUSIVE_MUL).setParameterLength(1),WR=L(I,I.SUBGROUP_AND).setParameterLength(1),HR=L(I,I.SUBGROUP_OR).setParameterLength(1),qR=L(I,I.SUBGROUP_XOR).setParameterLength(1),jR=L(I,I.SUBGROUP_MIN).setParameterLength(1),XR=L(I,I.SUBGROUP_MAX).setParameterLength(1),YR=L(I,I.SUBGROUP_ALL).setParameterLength(0),KR=L(I,I.SUBGROUP_ANY).setParameterLength(0),QR=L(I,I.SUBGROUP_BROADCAST_FIRST).setParameterLength(2),ZR=L(I,I.QUAD_SWAP_X).setParameterLength(1),JR=L(I,I.QUAD_SWAP_Y).setParameterLength(1),eA=L(I,I.QUAD_SWAP_DIAGONAL).setParameterLength(1),tA=L(I,I.SUBGROUP_BROADCAST).setParameterLength(2),sA=L(I,I.SUBGROUP_SHUFFLE).setParameterLength(2),nA=L(I,I.SUBGROUP_SHUFFLE_XOR).setParameterLength(2),rA=L(I,I.SUBGROUP_SHUFFLE_UP).setParameterLength(2),iA=L(I,I.SUBGROUP_SHUFFLE_DOWN).setParameterLength(2),oA=L(I,I.QUAD_BROADCAST).setParameterLength(1);let oi;function Eo(i){oi=oi||new WeakMap;let e=oi.get(i);return e===void 0&&oi.set(i,e={}),e}function wo(i){const e=Eo(i);return e.shadowMatrix||(e.shadowMatrix=$("mat4").setGroup(z).onRenderUpdate(t=>((i.castShadow!==!0||t.renderer.shadowMap.enabled===!1)&&i.shadow.updateMatrices(i),i.shadow.matrix)))}function Ng(i,e=zt){const t=wo(i).mul(e);return t.xyz.div(t.w)}function Dl(i){const e=Eo(i);return e.position||(e.position=$(new j).setGroup(z).onRenderUpdate((t,s)=>s.value.setFromMatrixPosition(i.matrixWorld)))}function Sg(i){const e=Eo(i);return e.targetPosition||(e.targetPosition=$(new j).setGroup(z).onRenderUpdate((t,s)=>s.value.setFromMatrixPosition(i.target.matrixWorld)))}function Ul(i){const e=Eo(i);return e.viewPosition||(e.viewPosition=$(new j).setGroup(z).onRenderUpdate(({camera:t},s)=>{s.value=s.value||new j,s.value.setFromMatrixPosition(i.matrixWorld),s.value.applyMatrix4(t.matrixWorldInverse)}))}const Il=i=>St.transformDirection(Dl(i).sub(Sg(i))),aA=i=>i.sort((e,t)=>e.id-t.id),uA=(i,e)=>{for(const t of e)if(t.isAnalyticLightNode&&t.light.id===i)return t;return null},Jo=new WeakMap,Jn=[];class Vl extends k{static get type(){return"LightsNode"}constructor(){super("vec3"),this.totalDiffuseNode=ss("vec3","totalDiffuse"),this.totalSpecularNode=ss("vec3","totalSpecular"),this.outgoingLightNode=ss("vec3","outgoingLight"),this._lights=[],this._lightNodes=null,this._lightNodesHash=null,this.global=!0}customCacheKey(){const e=this._lights;for(let s=0;s<e.length;s++){const n=e[s];if(Jn.push(n.id),Jn.push(n.castShadow?1:0),n.isSpotLight===!0){const r=n.map!==null?n.map.id:-1,o=n.colorNode?n.colorNode.getCacheKey():-1;Jn.push(r,o)}}const t=eo(Jn);return Jn.length=0,t}getHash(e){if(this._lightNodesHash===null){this._lightNodes===null&&this.setupLightsNode(e);const t=[];for(const s of this._lightNodes)t.push(s.getHash());this._lightNodesHash="lights-"+t.join(",")}return this._lightNodesHash}analyze(e){const t=e.getNodeProperties(this);for(const s of t.nodes)s.build(e);t.outputNode.build(e)}setupLightsNode(e){const t=[],s=this._lightNodes,n=aA(this._lights),r=e.renderer.library;for(const o of n)if(o.isNode)t.push(E(o));else{let a=null;if(s!==null&&(a=uA(o.id,s)),a===null){const u=r.getLightNodeClass(o.constructor);if(u===null){console.warn(`LightsNode.setupNodeLights: Light node not found for ${o.constructor.name}`);continue}let l=null;Jo.has(o)?l=Jo.get(o):(l=E(new u(o)),Jo.set(o,l)),t.push(l)}}this._lightNodes=t}setupDirectLight(e,t,s){const{lightingModel:n,reflectedLight:r}=e.context;n.direct({...s,lightNode:t,reflectedLight:r},e)}setupDirectRectAreaLight(e,t,s){const{lightingModel:n,reflectedLight:r}=e.context;n.directRectArea({...s,lightNode:t,reflectedLight:r},e)}setupLights(e,t){for(const s of t)s.build(e)}getLightNodes(e){return this._lightNodes===null&&this.setupLightsNode(e),this._lightNodes}setup(e){const t=e.lightsNode;e.lightsNode=this;let s=this.outgoingLightNode;const n=e.context,r=n.lightingModel,o=e.getNodeProperties(this);if(r){const{totalDiffuseNode:a,totalSpecularNode:u}=this;n.outgoingLight=s;const l=e.addStack();o.nodes=l.nodes,r.start(e);const{backdrop:c,backdropAlpha:d}=n,{directDiffuse:p,directSpecular:f,indirectDiffuse:m,indirectSpecular:y}=n.reflectedLight;let x=p.add(m);c!==null&&(d!==null?x=b(d.mix(x,c)):x=b(c),n.material.transparent=!0),a.assign(x),u.assign(f.add(y)),s.assign(a.add(u)),r.finish(e),s=s.bypass(e.removeStack())}else o.nodes=[];return e.lightsNode=t,s}setLights(e){return this._lights=e,this._lightNodes=null,this._lightNodesHash=null,this}getLights(){return this._lights}get hasLights(){return this._lights.length>0}}const lA=(i=[])=>E(new Vl).setLights(i);class cA extends k{static get type(){return"ShadowBaseNode"}constructor(e){super(),this.light=e,this.updateBeforeType=Y.RENDER,this.isShadowBaseNode=!0}setupShadowPosition({context:e,material:t}){Ol.assign(t.receivedShadowPositionNode||e.shadowPositionWorld||zt)}}const Ol=ss("vec3","shadowPositionWorld");function dA(i,e={}){return e.toneMapping=i.toneMapping,e.toneMappingExposure=i.toneMappingExposure,e.outputColorSpace=i.outputColorSpace,e.renderTarget=i.getRenderTarget(),e.activeCubeFace=i.getActiveCubeFace(),e.activeMipmapLevel=i.getActiveMipmapLevel(),e.renderObjectFunction=i.getRenderObjectFunction(),e.pixelRatio=i.getPixelRatio(),e.mrt=i.getMRT(),e.clearColor=i.getClearColor(e.clearColor||new jt),e.clearAlpha=i.getClearAlpha(),e.autoClear=i.autoClear,e.scissorTest=i.getScissorTest(),e}function hA(i,e){return e=dA(i,e),i.setMRT(null),i.setRenderObjectFunction(null),i.setClearColor(0,1),i.autoClear=!0,e}function pA(i,e){i.toneMapping=e.toneMapping,i.toneMappingExposure=e.toneMappingExposure,i.outputColorSpace=e.outputColorSpace,i.setRenderTarget(e.renderTarget,e.activeCubeFace,e.activeMipmapLevel),i.setRenderObjectFunction(e.renderObjectFunction),i.setPixelRatio(e.pixelRatio),i.setMRT(e.mrt),i.setClearColor(e.clearColor,e.clearAlpha),i.autoClear=e.autoClear,i.setScissorTest(e.scissorTest)}function fA(i,e={}){return e.background=i.background,e.backgroundNode=i.backgroundNode,e.overrideMaterial=i.overrideMaterial,e}function mA(i,e){return e=fA(i,e),i.background=null,i.backgroundNode=null,i.overrideMaterial=null,e}function gA(i,e){i.background=e.background,i.backgroundNode=e.backgroundNode,i.overrideMaterial=e.overrideMaterial}function yA(i,e,t){return t=hA(i,t),t=mA(e,t),t}function _A(i,e,t){pA(i,t),gA(e,t)}const Xc=new WeakMap,vg=N(({depthTexture:i,shadowCoord:e,depthLayer:t})=>{let s=Q(i,e.xy).setName("t_basic");return i.isArrayTexture&&(s=s.depth(t)),s.compare(e.z)}),Rg=N(({depthTexture:i,shadowCoord:e,shadow:t,depthLayer:s})=>{const n=(x,S)=>{let R=Q(i,x);return i.isArrayTexture&&(R=R.depth(s)),R.compare(S)},r=fe("mapSize","vec2",t).setGroup(z),o=fe("radius","float",t).setGroup(z),a=M(1).div(r),u=a.x.negate().mul(o),l=a.y.negate().mul(o),c=a.x.mul(o),d=a.y.mul(o),p=u.div(2),f=l.div(2),m=c.div(2),y=d.div(2);return Be(n(e.xy.add(M(u,l)),e.z),n(e.xy.add(M(0,l)),e.z),n(e.xy.add(M(c,l)),e.z),n(e.xy.add(M(p,f)),e.z),n(e.xy.add(M(0,f)),e.z),n(e.xy.add(M(m,f)),e.z),n(e.xy.add(M(u,0)),e.z),n(e.xy.add(M(p,0)),e.z),n(e.xy,e.z),n(e.xy.add(M(m,0)),e.z),n(e.xy.add(M(c,0)),e.z),n(e.xy.add(M(p,y)),e.z),n(e.xy.add(M(0,y)),e.z),n(e.xy.add(M(m,y)),e.z),n(e.xy.add(M(u,d)),e.z),n(e.xy.add(M(0,d)),e.z),n(e.xy.add(M(c,d)),e.z)).mul(1/17)}),Ag=N(({depthTexture:i,shadowCoord:e,shadow:t,depthLayer:s})=>{const n=(d,p)=>{let f=Q(i,d);return i.isArrayTexture&&(f=f.depth(s)),f.compare(p)},r=fe("mapSize","vec2",t).setGroup(z),o=M(1).div(r),a=o.x,u=o.y,l=e.xy,c=us(l.mul(r).add(.5));return l.subAssign(c.mul(o)),Be(n(l,e.z),n(l.add(M(a,0)),e.z),n(l.add(M(0,u)),e.z),n(l.add(o),e.z),ne(n(l.add(M(a.negate(),0)),e.z),n(l.add(M(a.mul(2),0)),e.z),c.x),ne(n(l.add(M(a.negate(),u)),e.z),n(l.add(M(a.mul(2),u)),e.z),c.x),ne(n(l.add(M(0,u.negate())),e.z),n(l.add(M(0,u.mul(2))),e.z),c.y),ne(n(l.add(M(a,u.negate())),e.z),n(l.add(M(a,u.mul(2))),e.z),c.y),ne(ne(n(l.add(M(a.negate(),u.negate())),e.z),n(l.add(M(a.mul(2),u.negate())),e.z),c.x),ne(n(l.add(M(a.negate(),u.mul(2))),e.z),n(l.add(M(a.mul(2),u.mul(2))),e.z),c.x),c.y)).mul(1/9)}),Eg=N(({depthTexture:i,shadowCoord:e,depthLayer:t})=>{const s=g(1).toVar();let n=Q(i).sample(e.xy);i.isArrayTexture&&(n=n.depth(t)),n=n.rg;const r=fo(e.z,n.x);return H(r.notEqual(g(1)),()=>{const o=e.z.sub(n.x),a=Se(0,n.y.mul(n.y));let u=a.div(a.add(o.mul(o)));u=xt(Z(u,.3).div(.95-.3)),s.assign(xt(Se(r,u)))}),s}),TA=N(([i,e,t])=>{let s=zt.sub(i).length();return s=s.sub(e).div(t.sub(e)),s=s.saturate(),s}),xA=i=>{const e=i.shadow.camera,t=fe("near","float",e).setGroup(z),s=fe("far","float",e).setGroup(z),n=lf(i);return TA(n,t,s)},wg=i=>{let e=Xc.get(i);if(e===void 0){const t=i.isPointLight?xA(i):null;e=new we,e.colorNode=W(0,0,0,1),e.depthNode=t,e.isShadowPassMaterial=!0,e.name="ShadowMaterial",e.fog=!1,Xc.set(i,e)}return e},Yc=new Pt,hn=[],Cg=(i,e,t,s)=>{hn[0]=i,hn[1]=e;let n=Yc.get(hn);return(n===void 0||n.shadowType!==t||n.useVelocity!==s)&&(n=(r,o,a,u,l,c,...d)=>{(r.castShadow===!0||r.receiveShadow&&t===gi)&&(s&&(_h(r).useVelocity=!0),r.onBeforeShadow(i,r,a,e.camera,u,o.overrideMaterial,c),i.renderObject(r,o,a,u,l,c,...d),r.onAfterShadow(i,r,a,e.camera,u,o.overrideMaterial,c))},n.shadowType=t,n.useVelocity=s,Yc.set(hn,n)),hn[0]=null,hn[1]=null,n},bA=N(({samples:i,radius:e,size:t,shadowPass:s,depthLayer:n})=>{const r=g(0).toVar("meanVertical"),o=g(0).toVar("squareMeanVertical"),a=i.lessThanEqual(g(1)).select(g(0),g(2).div(i.sub(1))),u=i.lessThanEqual(g(1)).select(g(0),g(-1));le({start:_(0),end:_(i),type:"int",condition:"<"},({i:c})=>{const d=u.add(g(c).mul(a));let p=s.sample(Be(Vr.xy,M(0,d).mul(e)).div(t));s.value.isArrayTexture&&(p=p.depth(n)),p=p.x,r.addAssign(p),o.addAssign(p.mul(p))}),r.divAssign(i),o.divAssign(i);const l=Xt(o.sub(r.mul(r)));return M(r,l)}),NA=N(({samples:i,radius:e,size:t,shadowPass:s,depthLayer:n})=>{const r=g(0).toVar("meanHorizontal"),o=g(0).toVar("squareMeanHorizontal"),a=i.lessThanEqual(g(1)).select(g(0),g(2).div(i.sub(1))),u=i.lessThanEqual(g(1)).select(g(0),g(-1));le({start:_(0),end:_(i),type:"int",condition:"<"},({i:c})=>{const d=u.add(g(c).mul(a));let p=s.sample(Be(Vr.xy,M(d,0).mul(e)).div(t));s.value.isArrayTexture&&(p=p.depth(n)),r.addAssign(p.x),o.addAssign(Be(p.y.mul(p.y),p.x.mul(p.x)))}),r.divAssign(i),o.divAssign(i);const l=Xt(o.sub(r.mul(r)));return M(r,l)}),SA=[vg,Rg,Ag,Eg];let ea;const ai=new Ro;class Mg extends cA{static get type(){return"ShadowNode"}constructor(e,t=null){super(e),this.shadow=t||e.shadow,this.shadowMap=null,this.vsmShadowMapVertical=null,this.vsmShadowMapHorizontal=null,this.vsmMaterialVertical=null,this.vsmMaterialHorizontal=null,this._node=null,this._cameraFrameId=new WeakMap,this.isShadowNode=!0,this.depthLayer=0}setupShadowFilter(e,{filterFn:t,depthTexture:s,shadowCoord:n,shadow:r,depthLayer:o}){const a=n.x.greaterThanEqual(0).and(n.x.lessThanEqual(1)).and(n.y.greaterThanEqual(0)).and(n.y.lessThanEqual(1)).and(n.z.lessThanEqual(1)),u=t({depthTexture:s,shadowCoord:n,shadow:r,depthLayer:o});return a.select(u,g(1))}setupShadowCoord(e,t){const{shadow:s}=this,{renderer:n}=e,r=fe("bias","float",s).setGroup(z);let o=t,a;if(s.camera.isOrthographicCamera||n.logarithmicDepthBuffer!==!0)o=o.xyz.div(o.w),a=o.z,n.coordinateSystem===Vn&&(a=a.mul(2).sub(1));else{const u=o.w;o=o.xy.div(u);const l=fe("near","float",s.camera).setGroup(z),c=fe("far","float",s.camera).setGroup(z);a=Tl(u.negate(),l,c)}return o=b(o.x,o.y.oneMinus(),a.add(r)),o}getShadowFilterFn(e){return SA[e]}setupRenderTarget(e,t){const s=new Mt(e.mapSize.width,e.mapSize.height);s.name="ShadowDepthTexture",s.compareFunction=fu;const n=t.createRenderTarget(e.mapSize.width,e.mapSize.height);return n.texture.name="ShadowMap",n.texture.type=e.mapType,n.depthTexture=s,{shadowMap:n,depthTexture:s}}setupShadow(e){const{renderer:t}=e,{light:s,shadow:n}=this,r=t.shadowMap.type,{depthTexture:o,shadowMap:a}=this.setupRenderTarget(n,e);if(n.camera.updateProjectionMatrix(),r===gi&&n.isPointLightShadow!==!0){o.compareFunction=null,a.depth>1?(a._vsmShadowMapVertical||(a._vsmShadowMapVertical=e.createRenderTarget(n.mapSize.width,n.mapSize.height,{format:Ws,type:et,depth:a.depth,depthBuffer:!1}),a._vsmShadowMapVertical.texture.name="VSMVertical"),this.vsmShadowMapVertical=a._vsmShadowMapVertical,a._vsmShadowMapHorizontal||(a._vsmShadowMapHorizontal=e.createRenderTarget(n.mapSize.width,n.mapSize.height,{format:Ws,type:et,depth:a.depth,depthBuffer:!1}),a._vsmShadowMapHorizontal.texture.name="VSMHorizontal"),this.vsmShadowMapHorizontal=a._vsmShadowMapHorizontal):(this.vsmShadowMapVertical=e.createRenderTarget(n.mapSize.width,n.mapSize.height,{format:Ws,type:et,depthBuffer:!1}),this.vsmShadowMapHorizontal=e.createRenderTarget(n.mapSize.width,n.mapSize.height,{format:Ws,type:et,depthBuffer:!1}));let S=Q(o);o.isArrayTexture&&(S=S.depth(this.depthLayer));let R=Q(this.vsmShadowMapVertical.texture);o.isArrayTexture&&(R=R.depth(this.depthLayer));const C=fe("blurSamples","float",n).setGroup(z),D=fe("radius","float",n).setGroup(z),P=fe("mapSize","vec2",n).setGroup(z);let F=this.vsmMaterialVertical||(this.vsmMaterialVertical=new we);F.fragmentNode=bA({samples:C,radius:D,size:P,shadowPass:S,depthLayer:this.depthLayer}).context(e.getSharedContext()),F.name="VSMVertical",F=this.vsmMaterialHorizontal||(this.vsmMaterialHorizontal=new we),F.fragmentNode=NA({samples:C,radius:D,size:P,shadowPass:R,depthLayer:this.depthLayer}).context(e.getSharedContext()),F.name="VSMHorizontal"}const u=fe("intensity","float",n).setGroup(z),l=fe("normalBias","float",n).setGroup(z),c=wo(s).mul(Ol.add(Cs.mul(l))),d=this.setupShadowCoord(e,c),p=n.filterNode||this.getShadowFilterFn(t.shadowMap.type)||null;if(p===null)throw new Error("THREE.WebGPURenderer: Shadow map type not supported yet.");const f=r===gi&&n.isPointLightShadow!==!0?this.vsmShadowMapHorizontal.texture:o,m=this.setupShadowFilter(e,{filterFn:p,shadowTexture:a.texture,depthTexture:f,shadowCoord:d,shadow:n,depthLayer:this.depthLayer});let y=Q(a.texture,d);o.isArrayTexture&&(y=y.depth(this.depthLayer));const x=ne(1,m.rgb.mix(y,1),u.mul(y.a)).toVar();return this.shadowMap=a,this.shadow.map=a,x}setup(e){if(e.renderer.shadowMap.enabled!==!1)return N(()=>{let t=this._node;return this.setupShadowPosition(e),t===null&&(this._node=t=this.setupShadow(e)),e.material.shadowNode&&console.warn('THREE.NodeMaterial: ".shadowNode" is deprecated. Use ".castShadowNode" instead.'),e.material.receivedShadowNode&&(t=e.material.receivedShadowNode(t)),t})()}renderShadow(e){const{shadow:t,shadowMap:s,light:n}=this,{renderer:r,scene:o}=e;t.updateMatrices(n),s.setSize(t.mapSize.width,t.mapSize.height,s.depth),r.render(o,t.camera)}updateShadow(e){const{shadowMap:t,light:s,shadow:n}=this,{renderer:r,scene:o,camera:a}=e,u=r.shadowMap.type,l=t.depthTexture.version;this._depthVersionCached=l;const c=n.camera.layers.mask;(n.camera.layers.mask&4294967294)===0&&(n.camera.layers.mask=a.layers.mask);const d=r.getRenderObjectFunction(),p=r.getMRT(),f=p?p.has("velocity"):!1;ea=yA(r,o,ea),o.overrideMaterial=wg(s),r.setRenderObjectFunction(Cg(r,n,u,f)),r.setClearColor(0,0),r.setRenderTarget(t),this.renderShadow(e),r.setRenderObjectFunction(d),u===gi&&n.isPointLightShadow!==!0&&this.vsmPass(r),n.camera.layers.mask=c,_A(r,o,ea)}vsmPass(e){const{shadow:t}=this,s=this.shadowMap.depth;this.vsmShadowMapVertical.setSize(t.mapSize.width,t.mapSize.height,s),this.vsmShadowMapHorizontal.setSize(t.mapSize.width,t.mapSize.height,s),e.setRenderTarget(this.vsmShadowMapVertical),ai.material=this.vsmMaterialVertical,ai.render(e),e.setRenderTarget(this.vsmShadowMapHorizontal),ai.material=this.vsmMaterialHorizontal,ai.render(e)}dispose(){this.shadowMap.dispose(),this.shadowMap=null,this.vsmShadowMapVertical!==null&&(this.vsmShadowMapVertical.dispose(),this.vsmShadowMapVertical=null,this.vsmMaterialVertical.dispose(),this.vsmMaterialVertical=null),this.vsmShadowMapHorizontal!==null&&(this.vsmShadowMapHorizontal.dispose(),this.vsmShadowMapHorizontal=null,this.vsmMaterialHorizontal.dispose(),this.vsmMaterialHorizontal=null),super.dispose()}updateBefore(e){const{shadow:t}=this;let s=t.needsUpdate||t.autoUpdate;s&&(this._cameraFrameId[e.camera]===e.frameId&&(s=!1),this._cameraFrameId[e.camera]=e.frameId),s&&(this.updateShadow(e),this.shadowMap.depthTexture.version===this._depthVersionCached&&(t.needsUpdate=!1))}}const Bg=(i,e)=>E(new Mg(i,e)),vA=new jt,Et=N(([i,e])=>{const t=i.toVar(),s=ge(t),n=dt(1,Se(s.x,Se(s.y,s.z)));s.mulAssign(n),t.mulAssign(n.mul(e.mul(2).oneMinus()));const r=M(t.xy).toVar(),a=e.mul(1.5).oneMinus();return H(s.z.greaterThanEqual(a),()=>{H(t.z.greaterThan(0),()=>{r.x.assign(Z(4,t.x))})}).ElseIf(s.x.greaterThanEqual(a),()=>{const u=Mr(t.x);r.x.assign(t.z.mul(u).add(u.mul(2)))}).ElseIf(s.y.greaterThanEqual(a),()=>{const u=Mr(t.y);r.x.assign(t.x.add(u.mul(2)).add(2)),r.y.assign(t.z.mul(u).sub(2))}),M(.125,.25).mul(r).add(M(.375,.75)).flipY()}).setLayout({name:"cubeToUV",type:"vec2",inputs:[{name:"pos",type:"vec3"},{name:"texelSizeY",type:"float"}]}),Pg=N(({depthTexture:i,bd3D:e,dp:t,texelSize:s})=>Q(i,Et(e,s.y)).compare(t)),Fg=N(({depthTexture:i,bd3D:e,dp:t,texelSize:s,shadow:n})=>{const r=fe("radius","float",n).setGroup(z),o=M(-1,1).mul(r).mul(s.y);return Q(i,Et(e.add(o.xyy),s.y)).compare(t).add(Q(i,Et(e.add(o.yyy),s.y)).compare(t)).add(Q(i,Et(e.add(o.xyx),s.y)).compare(t)).add(Q(i,Et(e.add(o.yyx),s.y)).compare(t)).add(Q(i,Et(e,s.y)).compare(t)).add(Q(i,Et(e.add(o.xxy),s.y)).compare(t)).add(Q(i,Et(e.add(o.yxy),s.y)).compare(t)).add(Q(i,Et(e.add(o.xxx),s.y)).compare(t)).add(Q(i,Et(e.add(o.yxx),s.y)).compare(t)).mul(1/9)}),RA=N(({filterFn:i,depthTexture:e,shadowCoord:t,shadow:s})=>{const n=t.xyz.toVar(),r=n.length(),o=$("float").setGroup(z).onRenderUpdate(()=>s.camera.near),a=$("float").setGroup(z).onRenderUpdate(()=>s.camera.far),u=fe("bias","float",s).setGroup(z),l=$(s.mapSize).setGroup(z),c=g(1).toVar();return H(r.sub(a).lessThanEqual(0).and(r.sub(o).greaterThanEqual(0)),()=>{const d=r.sub(o).div(a.sub(o)).toVar();d.addAssign(u);const p=n.normalize(),f=M(1).div(l.mul(M(4,2)));c.assign(i({depthTexture:e,bd3D:p,dp:d,texelSize:f,shadow:s}))}),c}),Kc=new _e,pn=new he,er=new he;class AA extends Mg{static get type(){return"PointShadowNode"}constructor(e,t=null){super(e,t)}getShadowFilterFn(e){return e===gy?Pg:Fg}setupShadowCoord(e,t){return t}setupShadowFilter(e,{filterFn:t,shadowTexture:s,depthTexture:n,shadowCoord:r,shadow:o}){return RA({filterFn:t,shadowTexture:s,depthTexture:n,shadowCoord:r,shadow:o})}renderShadow(e){const{shadow:t,shadowMap:s,light:n}=this,{renderer:r,scene:o}=e,a=t.getFrameExtents();er.copy(t.mapSize),er.multiply(a),s.setSize(er.width,er.height),pn.copy(t.mapSize);const u=r.autoClear,l=r.getClearColor(vA),c=r.getClearAlpha();r.autoClear=!1,r.setClearColor(t.clearColor,t.clearAlpha),r.clear();const d=t.getViewportCount();for(let p=0;p<d;p++){const f=t.getViewport(p),m=pn.x*f.x,y=er.y-pn.y-pn.y*f.y;Kc.set(m,y,pn.x*f.z,pn.y*f.w),s.viewport.copy(Kc),t.updateMatrices(n,p),r.render(o,t.camera)}r.autoClear=u,r.setClearColor(l,c)}}const Lg=(i,e)=>E(new AA(i,e));class an extends zn{static get type(){return"AnalyticLightNode"}constructor(e=null){super(),this.light=e,this.color=new jt,this.colorNode=e&&e.colorNode||$(this.color).setGroup(z),this.baseColorNode=null,this.shadowNode=null,this.shadowColorNode=null,this.isAnalyticLightNode=!0,this.updateType=Y.FRAME}getHash(){return this.light.uuid}getLightVector(e){return Ul(this.light).sub(e.context.positionView||Ee)}setupDirect(){}setupDirectRectArea(){}setupShadowNode(){return Bg(this.light)}setupShadow(e){const{renderer:t}=e;if(t.shadowMap.enabled===!1)return;let s=this.shadowColorNode;if(s===null){const n=this.light.shadow.shadowNode;let r;n!==void 0?r=E(n):r=this.setupShadowNode(),this.shadowNode=r,this.shadowColorNode=s=this.colorNode.mul(r),this.baseColorNode=this.colorNode}this.colorNode=s}setup(e){this.colorNode=this.baseColorNode||this.colorNode,this.light.castShadow?e.object.receiveShadow&&this.setupShadow(e):this.shadowNode!==null&&(this.shadowNode.dispose(),this.shadowNode=null,this.shadowColorNode=null);const t=this.setupDirect(e),s=this.setupDirectRectArea(e);t&&e.lightsNode.setupDirectLight(e,this,t),s&&e.lightsNode.setupDirectRectAreaLight(e,this,s)}update(){const{light:e}=this;this.color.copy(e.color).multiplyScalar(e.intensity)}}const Gl=N(({lightDistance:i,cutoffDistance:e,decayExponent:t})=>{const s=i.pow(t).max(.01).reciprocal();return e.greaterThan(0).select(s.mul(i.div(e).pow4().oneMinus().clamp().pow2()),s)}),Dg=({color:i,lightVector:e,cutoffDistance:t,decayExponent:s})=>{const n=e.normalize(),r=e.length(),o=Gl({lightDistance:r,cutoffDistance:t,decayExponent:s}),a=i.mul(o);return{lightDirection:n,lightColor:a}};class EA extends an{static get type(){return"PointLightNode"}constructor(e=null){super(e),this.cutoffDistanceNode=$(0).setGroup(z),this.decayExponentNode=$(2).setGroup(z)}update(e){const{light:t}=this;super.update(e),this.cutoffDistanceNode.value=t.distance,this.decayExponentNode.value=t.decay}setupShadowNode(){return Lg(this.light)}setupDirect(e){return Dg({color:this.colorNode,lightVector:this.getLightVector(e),cutoffDistance:this.cutoffDistanceNode,decayExponent:this.decayExponentNode})}}const wA=N(([i=ce()])=>{const e=i.mul(2),t=e.x.floor(),s=e.y.floor();return t.add(s).mod(2).sign()}),CA=N(([i=ce()],{renderer:e,material:t})=>{const s=ju(i.mul(2).sub(1));let n;if(t.alphaToCoverage&&e.samples>1){const r=g(s.fwidth()).toVar();n=Wt(r.oneMinus(),r.add(1),s).oneMinus()}else n=ke(s.greaterThan(1),0,1);return n}),Tr=N(([i,e,t])=>{const s=g(t).toVar(),n=g(e).toVar(),r=Tt(i).toVar();return ke(r,n,s)}).setLayout({name:"mx_select",type:"float",inputs:[{name:"b",type:"bool"},{name:"t",type:"float"},{name:"f",type:"float"}]}),Xi=N(([i,e])=>{const t=Tt(e).toVar(),s=g(i).toVar();return ke(t,s.negate(),s)}).setLayout({name:"mx_negate_if",type:"float",inputs:[{name:"val",type:"float"},{name:"b",type:"bool"}]}),Me=N(([i])=>{const e=g(i).toVar();return _(Gt(e))}).setLayout({name:"mx_floor",type:"int",inputs:[{name:"x",type:"float"}]}),be=N(([i,e])=>{const t=g(i).toVar();return e.assign(Me(t)),t.sub(g(e))}),MA=N(([i,e,t,s,n,r])=>{const o=g(r).toVar(),a=g(n).toVar(),u=g(s).toVar(),l=g(t).toVar(),c=g(e).toVar(),d=g(i).toVar(),p=g(Z(1,a)).toVar();return Z(1,o).mul(d.mul(p).add(c.mul(a))).add(o.mul(l.mul(p).add(u.mul(a))))}).setLayout({name:"mx_bilerp_0",type:"float",inputs:[{name:"v0",type:"float"},{name:"v1",type:"float"},{name:"v2",type:"float"},{name:"v3",type:"float"},{name:"s",type:"float"},{name:"t",type:"float"}]}),BA=N(([i,e,t,s,n,r])=>{const o=g(r).toVar(),a=g(n).toVar(),u=b(s).toVar(),l=b(t).toVar(),c=b(e).toVar(),d=b(i).toVar(),p=g(Z(1,a)).toVar();return Z(1,o).mul(d.mul(p).add(c.mul(a))).add(o.mul(l.mul(p).add(u.mul(a))))}).setLayout({name:"mx_bilerp_1",type:"vec3",inputs:[{name:"v0",type:"vec3"},{name:"v1",type:"vec3"},{name:"v2",type:"vec3"},{name:"v3",type:"vec3"},{name:"s",type:"float"},{name:"t",type:"float"}]}),Ug=We([MA,BA]),PA=N(([i,e,t,s,n,r,o,a,u,l,c])=>{const d=g(c).toVar(),p=g(l).toVar(),f=g(u).toVar(),m=g(a).toVar(),y=g(o).toVar(),x=g(r).toVar(),S=g(n).toVar(),R=g(s).toVar(),C=g(t).toVar(),D=g(e).toVar(),P=g(i).toVar(),F=g(Z(1,f)).toVar(),B=g(Z(1,p)).toVar();return g(Z(1,d)).toVar().mul(B.mul(P.mul(F).add(D.mul(f))).add(p.mul(C.mul(F).add(R.mul(f))))).add(d.mul(B.mul(S.mul(F).add(x.mul(f))).add(p.mul(y.mul(F).add(m.mul(f))))))}).setLayout({name:"mx_trilerp_0",type:"float",inputs:[{name:"v0",type:"float"},{name:"v1",type:"float"},{name:"v2",type:"float"},{name:"v3",type:"float"},{name:"v4",type:"float"},{name:"v5",type:"float"},{name:"v6",type:"float"},{name:"v7",type:"float"},{name:"s",type:"float"},{name:"t",type:"float"},{name:"r",type:"float"}]}),FA=N(([i,e,t,s,n,r,o,a,u,l,c])=>{const d=g(c).toVar(),p=g(l).toVar(),f=g(u).toVar(),m=b(a).toVar(),y=b(o).toVar(),x=b(r).toVar(),S=b(n).toVar(),R=b(s).toVar(),C=b(t).toVar(),D=b(e).toVar(),P=b(i).toVar(),F=g(Z(1,f)).toVar(),B=g(Z(1,p)).toVar();return g(Z(1,d)).toVar().mul(B.mul(P.mul(F).add(D.mul(f))).add(p.mul(C.mul(F).add(R.mul(f))))).add(d.mul(B.mul(S.mul(F).add(x.mul(f))).add(p.mul(y.mul(F).add(m.mul(f))))))}).setLayout({name:"mx_trilerp_1",type:"vec3",inputs:[{name:"v0",type:"vec3"},{name:"v1",type:"vec3"},{name:"v2",type:"vec3"},{name:"v3",type:"vec3"},{name:"v4",type:"vec3"},{name:"v5",type:"vec3"},{name:"v6",type:"vec3"},{name:"v7",type:"vec3"},{name:"s",type:"float"},{name:"t",type:"float"},{name:"r",type:"float"}]}),Ig=We([PA,FA]),LA=N(([i,e,t])=>{const s=g(t).toVar(),n=g(e).toVar(),r=O(i).toVar(),o=O(r.bitAnd(O(7))).toVar(),a=g(Tr(o.lessThan(O(4)),n,s)).toVar(),u=g(X(2,Tr(o.lessThan(O(4)),s,n))).toVar();return Xi(a,Tt(o.bitAnd(O(1)))).add(Xi(u,Tt(o.bitAnd(O(2)))))}).setLayout({name:"mx_gradient_float_0",type:"float",inputs:[{name:"hash",type:"uint"},{name:"x",type:"float"},{name:"y",type:"float"}]}),DA=N(([i,e,t,s])=>{const n=g(s).toVar(),r=g(t).toVar(),o=g(e).toVar(),a=O(i).toVar(),u=O(a.bitAnd(O(15))).toVar(),l=g(Tr(u.lessThan(O(8)),o,r)).toVar(),c=g(Tr(u.lessThan(O(4)),r,Tr(u.equal(O(12)).or(u.equal(O(14))),o,n))).toVar();return Xi(l,Tt(u.bitAnd(O(1)))).add(Xi(c,Tt(u.bitAnd(O(2)))))}).setLayout({name:"mx_gradient_float_1",type:"float",inputs:[{name:"hash",type:"uint"},{name:"x",type:"float"},{name:"y",type:"float"},{name:"z",type:"float"}]}),Oe=We([LA,DA]),UA=N(([i,e,t])=>{const s=g(t).toVar(),n=g(e).toVar(),r=On(i).toVar();return b(Oe(r.x,n,s),Oe(r.y,n,s),Oe(r.z,n,s))}).setLayout({name:"mx_gradient_vec3_0",type:"vec3",inputs:[{name:"hash",type:"uvec3"},{name:"x",type:"float"},{name:"y",type:"float"}]}),IA=N(([i,e,t,s])=>{const n=g(s).toVar(),r=g(t).toVar(),o=g(e).toVar(),a=On(i).toVar();return b(Oe(a.x,o,r,n),Oe(a.y,o,r,n),Oe(a.z,o,r,n))}).setLayout({name:"mx_gradient_vec3_1",type:"vec3",inputs:[{name:"hash",type:"uvec3"},{name:"x",type:"float"},{name:"y",type:"float"},{name:"z",type:"float"}]}),ht=We([UA,IA]),VA=N(([i])=>{const e=g(i).toVar();return X(.6616,e)}).setLayout({name:"mx_gradient_scale2d_0",type:"float",inputs:[{name:"v",type:"float"}]}),OA=N(([i])=>{const e=g(i).toVar();return X(.982,e)}).setLayout({name:"mx_gradient_scale3d_0",type:"float",inputs:[{name:"v",type:"float"}]}),GA=N(([i])=>{const e=b(i).toVar();return X(.6616,e)}).setLayout({name:"mx_gradient_scale2d_1",type:"vec3",inputs:[{name:"v",type:"vec3"}]}),Vg=We([VA,GA]),kA=N(([i])=>{const e=b(i).toVar();return X(.982,e)}).setLayout({name:"mx_gradient_scale3d_1",type:"vec3",inputs:[{name:"v",type:"vec3"}]}),Og=We([OA,kA]),ut=N(([i,e])=>{const t=_(e).toVar(),s=O(i).toVar();return s.shiftLeft(t).bitOr(s.shiftRight(_(32).sub(t)))}).setLayout({name:"mx_rotl32",type:"uint",inputs:[{name:"x",type:"uint"},{name:"k",type:"int"}]}),Gg=N(([i,e,t])=>{i.subAssign(t),i.bitXorAssign(ut(t,_(4))),t.addAssign(e),e.subAssign(i),e.bitXorAssign(ut(i,_(6))),i.addAssign(t),t.subAssign(e),t.bitXorAssign(ut(e,_(8))),e.addAssign(i),i.subAssign(t),i.bitXorAssign(ut(t,_(16))),t.addAssign(e),e.subAssign(i),e.bitXorAssign(ut(i,_(19))),i.addAssign(t),t.subAssign(e),t.bitXorAssign(ut(e,_(4))),e.addAssign(i)}),Wr=N(([i,e,t])=>{const s=O(t).toVar(),n=O(e).toVar(),r=O(i).toVar();return s.bitXorAssign(n),s.subAssign(ut(n,_(14))),r.bitXorAssign(s),r.subAssign(ut(s,_(11))),n.bitXorAssign(r),n.subAssign(ut(r,_(25))),s.bitXorAssign(n),s.subAssign(ut(n,_(16))),r.bitXorAssign(s),r.subAssign(ut(s,_(4))),n.bitXorAssign(r),n.subAssign(ut(r,_(14))),s.bitXorAssign(n),s.subAssign(ut(n,_(24))),s}).setLayout({name:"mx_bjfinal",type:"uint",inputs:[{name:"a",type:"uint"},{name:"b",type:"uint"},{name:"c",type:"uint"}]}),je=N(([i])=>{const e=O(i).toVar();return g(e).div(g(O(_(4294967295))))}).setLayout({name:"mx_bits_to_01",type:"float",inputs:[{name:"bits",type:"uint"}]}),$t=N(([i])=>{const e=g(i).toVar();return e.mul(e).mul(e).mul(e.mul(e.mul(6).sub(15)).add(10))}).setLayout({name:"mx_fade",type:"float",inputs:[{name:"t",type:"float"}]}),zA=N(([i])=>{const e=_(i).toVar(),t=O(O(1)).toVar(),s=O(O(_(3735928559)).add(t.shiftLeft(O(2))).add(O(13))).toVar();return Wr(s.add(O(e)),s,s)}).setLayout({name:"mx_hash_int_0",type:"uint",inputs:[{name:"x",type:"int"}]}),$A=N(([i,e])=>{const t=_(e).toVar(),s=_(i).toVar(),n=O(O(2)).toVar(),r=O().toVar(),o=O().toVar(),a=O().toVar();return r.assign(o.assign(a.assign(O(_(3735928559)).add(n.shiftLeft(O(2))).add(O(13))))),r.addAssign(O(s)),o.addAssign(O(t)),Wr(r,o,a)}).setLayout({name:"mx_hash_int_1",type:"uint",inputs:[{name:"x",type:"int"},{name:"y",type:"int"}]}),WA=N(([i,e,t])=>{const s=_(t).toVar(),n=_(e).toVar(),r=_(i).toVar(),o=O(O(3)).toVar(),a=O().toVar(),u=O().toVar(),l=O().toVar();return a.assign(u.assign(l.assign(O(_(3735928559)).add(o.shiftLeft(O(2))).add(O(13))))),a.addAssign(O(r)),u.addAssign(O(n)),l.addAssign(O(s)),Wr(a,u,l)}).setLayout({name:"mx_hash_int_2",type:"uint",inputs:[{name:"x",type:"int"},{name:"y",type:"int"},{name:"z",type:"int"}]}),HA=N(([i,e,t,s])=>{const n=_(s).toVar(),r=_(t).toVar(),o=_(e).toVar(),a=_(i).toVar(),u=O(O(4)).toVar(),l=O().toVar(),c=O().toVar(),d=O().toVar();return l.assign(c.assign(d.assign(O(_(3735928559)).add(u.shiftLeft(O(2))).add(O(13))))),l.addAssign(O(a)),c.addAssign(O(o)),d.addAssign(O(r)),Gg(l,c,d),l.addAssign(O(n)),Wr(l,c,d)}).setLayout({name:"mx_hash_int_3",type:"uint",inputs:[{name:"x",type:"int"},{name:"y",type:"int"},{name:"z",type:"int"},{name:"xx",type:"int"}]}),qA=N(([i,e,t,s,n])=>{const r=_(n).toVar(),o=_(s).toVar(),a=_(t).toVar(),u=_(e).toVar(),l=_(i).toVar(),c=O(O(5)).toVar(),d=O().toVar(),p=O().toVar(),f=O().toVar();return d.assign(p.assign(f.assign(O(_(3735928559)).add(c.shiftLeft(O(2))).add(O(13))))),d.addAssign(O(l)),p.addAssign(O(u)),f.addAssign(O(a)),Gg(d,p,f),d.addAssign(O(o)),p.addAssign(O(r)),Wr(d,p,f)}).setLayout({name:"mx_hash_int_4",type:"uint",inputs:[{name:"x",type:"int"},{name:"y",type:"int"},{name:"z",type:"int"},{name:"xx",type:"int"},{name:"yy",type:"int"}]}),ae=We([zA,$A,WA,HA,qA]),jA=N(([i,e])=>{const t=_(e).toVar(),s=_(i).toVar(),n=O(ae(s,t)).toVar(),r=On().toVar();return r.x.assign(n.bitAnd(_(255))),r.y.assign(n.shiftRight(_(8)).bitAnd(_(255))),r.z.assign(n.shiftRight(_(16)).bitAnd(_(255))),r}).setLayout({name:"mx_hash_vec3_0",type:"uvec3",inputs:[{name:"x",type:"int"},{name:"y",type:"int"}]}),XA=N(([i,e,t])=>{const s=_(t).toVar(),n=_(e).toVar(),r=_(i).toVar(),o=O(ae(r,n,s)).toVar(),a=On().toVar();return a.x.assign(o.bitAnd(_(255))),a.y.assign(o.shiftRight(_(8)).bitAnd(_(255))),a.z.assign(o.shiftRight(_(16)).bitAnd(_(255))),a}).setLayout({name:"mx_hash_vec3_1",type:"uvec3",inputs:[{name:"x",type:"int"},{name:"y",type:"int"},{name:"z",type:"int"}]}),pt=We([jA,XA]),YA=N(([i])=>{const e=M(i).toVar(),t=_().toVar(),s=_().toVar(),n=g(be(e.x,t)).toVar(),r=g(be(e.y,s)).toVar(),o=g($t(n)).toVar(),a=g($t(r)).toVar(),u=g(Ug(Oe(ae(t,s),n,r),Oe(ae(t.add(_(1)),s),n.sub(1),r),Oe(ae(t,s.add(_(1))),n,r.sub(1)),Oe(ae(t.add(_(1)),s.add(_(1))),n.sub(1),r.sub(1)),o,a)).toVar();return Vg(u)}).setLayout({name:"mx_perlin_noise_float_0",type:"float",inputs:[{name:"p",type:"vec2"}]}),KA=N(([i])=>{const e=b(i).toVar(),t=_().toVar(),s=_().toVar(),n=_().toVar(),r=g(be(e.x,t)).toVar(),o=g(be(e.y,s)).toVar(),a=g(be(e.z,n)).toVar(),u=g($t(r)).toVar(),l=g($t(o)).toVar(),c=g($t(a)).toVar(),d=g(Ig(Oe(ae(t,s,n),r,o,a),Oe(ae(t.add(_(1)),s,n),r.sub(1),o,a),Oe(ae(t,s.add(_(1)),n),r,o.sub(1),a),Oe(ae(t.add(_(1)),s.add(_(1)),n),r.sub(1),o.sub(1),a),Oe(ae(t,s,n.add(_(1))),r,o,a.sub(1)),Oe(ae(t.add(_(1)),s,n.add(_(1))),r.sub(1),o,a.sub(1)),Oe(ae(t,s.add(_(1)),n.add(_(1))),r,o.sub(1),a.sub(1)),Oe(ae(t.add(_(1)),s.add(_(1)),n.add(_(1))),r.sub(1),o.sub(1),a.sub(1)),u,l,c)).toVar();return Og(d)}).setLayout({name:"mx_perlin_noise_float_1",type:"float",inputs:[{name:"p",type:"vec3"}]}),kl=We([YA,KA]),QA=N(([i])=>{const e=M(i).toVar(),t=_().toVar(),s=_().toVar(),n=g(be(e.x,t)).toVar(),r=g(be(e.y,s)).toVar(),o=g($t(n)).toVar(),a=g($t(r)).toVar(),u=b(Ug(ht(pt(t,s),n,r),ht(pt(t.add(_(1)),s),n.sub(1),r),ht(pt(t,s.add(_(1))),n,r.sub(1)),ht(pt(t.add(_(1)),s.add(_(1))),n.sub(1),r.sub(1)),o,a)).toVar();return Vg(u)}).setLayout({name:"mx_perlin_noise_vec3_0",type:"vec3",inputs:[{name:"p",type:"vec2"}]}),ZA=N(([i])=>{const e=b(i).toVar(),t=_().toVar(),s=_().toVar(),n=_().toVar(),r=g(be(e.x,t)).toVar(),o=g(be(e.y,s)).toVar(),a=g(be(e.z,n)).toVar(),u=g($t(r)).toVar(),l=g($t(o)).toVar(),c=g($t(a)).toVar(),d=b(Ig(ht(pt(t,s,n),r,o,a),ht(pt(t.add(_(1)),s,n),r.sub(1),o,a),ht(pt(t,s.add(_(1)),n),r,o.sub(1),a),ht(pt(t.add(_(1)),s.add(_(1)),n),r.sub(1),o.sub(1),a),ht(pt(t,s,n.add(_(1))),r,o,a.sub(1)),ht(pt(t.add(_(1)),s,n.add(_(1))),r.sub(1),o,a.sub(1)),ht(pt(t,s.add(_(1)),n.add(_(1))),r,o.sub(1),a.sub(1)),ht(pt(t.add(_(1)),s.add(_(1)),n.add(_(1))),r.sub(1),o.sub(1),a.sub(1)),u,l,c)).toVar();return Og(d)}).setLayout({name:"mx_perlin_noise_vec3_1",type:"vec3",inputs:[{name:"p",type:"vec3"}]}),Hr=We([QA,ZA]),JA=N(([i])=>{const e=g(i).toVar(),t=_(Me(e)).toVar();return je(ae(t))}).setLayout({name:"mx_cell_noise_float_0",type:"float",inputs:[{name:"p",type:"float"}]}),eE=N(([i])=>{const e=M(i).toVar(),t=_(Me(e.x)).toVar(),s=_(Me(e.y)).toVar();return je(ae(t,s))}).setLayout({name:"mx_cell_noise_float_1",type:"float",inputs:[{name:"p",type:"vec2"}]}),tE=N(([i])=>{const e=b(i).toVar(),t=_(Me(e.x)).toVar(),s=_(Me(e.y)).toVar(),n=_(Me(e.z)).toVar();return je(ae(t,s,n))}).setLayout({name:"mx_cell_noise_float_2",type:"float",inputs:[{name:"p",type:"vec3"}]}),sE=N(([i])=>{const e=W(i).toVar(),t=_(Me(e.x)).toVar(),s=_(Me(e.y)).toVar(),n=_(Me(e.z)).toVar(),r=_(Me(e.w)).toVar();return je(ae(t,s,n,r))}).setLayout({name:"mx_cell_noise_float_3",type:"float",inputs:[{name:"p",type:"vec4"}]}),nE=We([JA,eE,tE,sE]),rE=N(([i])=>{const e=g(i).toVar(),t=_(Me(e)).toVar();return b(je(ae(t,_(0))),je(ae(t,_(1))),je(ae(t,_(2))))}).setLayout({name:"mx_cell_noise_vec3_0",type:"vec3",inputs:[{name:"p",type:"float"}]}),iE=N(([i])=>{const e=M(i).toVar(),t=_(Me(e.x)).toVar(),s=_(Me(e.y)).toVar();return b(je(ae(t,s,_(0))),je(ae(t,s,_(1))),je(ae(t,s,_(2))))}).setLayout({name:"mx_cell_noise_vec3_1",type:"vec3",inputs:[{name:"p",type:"vec2"}]}),oE=N(([i])=>{const e=b(i).toVar(),t=_(Me(e.x)).toVar(),s=_(Me(e.y)).toVar(),n=_(Me(e.z)).toVar();return b(je(ae(t,s,n,_(0))),je(ae(t,s,n,_(1))),je(ae(t,s,n,_(2))))}).setLayout({name:"mx_cell_noise_vec3_2",type:"vec3",inputs:[{name:"p",type:"vec3"}]}),aE=N(([i])=>{const e=W(i).toVar(),t=_(Me(e.x)).toVar(),s=_(Me(e.y)).toVar(),n=_(Me(e.z)).toVar(),r=_(Me(e.w)).toVar();return b(je(ae(t,s,n,r,_(0))),je(ae(t,s,n,r,_(1))),je(ae(t,s,n,r,_(2))))}).setLayout({name:"mx_cell_noise_vec3_3",type:"vec3",inputs:[{name:"p",type:"vec4"}]}),Co=We([rE,iE,oE,aE]),Yi=N(([i,e,t,s])=>{const n=g(s).toVar(),r=g(t).toVar(),o=_(e).toVar(),a=b(i).toVar(),u=g(0).toVar(),l=g(1).toVar();return le(o,()=>{u.addAssign(l.mul(kl(a))),l.mulAssign(n),a.mulAssign(r)}),u}).setLayout({name:"mx_fractal_noise_float",type:"float",inputs:[{name:"p",type:"vec3"},{name:"octaves",type:"int"},{name:"lacunarity",type:"float"},{name:"diminish",type:"float"}]}),Mo=N(([i,e,t,s])=>{const n=g(s).toVar(),r=g(t).toVar(),o=_(e).toVar(),a=b(i).toVar(),u=b(0).toVar(),l=g(1).toVar();return le(o,()=>{u.addAssign(l.mul(Hr(a))),l.mulAssign(n),a.mulAssign(r)}),u}).setLayout({name:"mx_fractal_noise_vec3",type:"vec3",inputs:[{name:"p",type:"vec3"},{name:"octaves",type:"int"},{name:"lacunarity",type:"float"},{name:"diminish",type:"float"}]}),uE=N(([i,e,t,s])=>{const n=g(s).toVar(),r=g(t).toVar(),o=_(e).toVar(),a=b(i).toVar();return M(Yi(a,o,r,n),Yi(a.add(b(_(19),_(193),_(17))),o,r,n))}).setLayout({name:"mx_fractal_noise_vec2",type:"vec2",inputs:[{name:"p",type:"vec3"},{name:"octaves",type:"int"},{name:"lacunarity",type:"float"},{name:"diminish",type:"float"}]}),lE=N(([i,e,t,s])=>{const n=g(s).toVar(),r=g(t).toVar(),o=_(e).toVar(),a=b(i).toVar(),u=b(Mo(a,o,r,n)).toVar(),l=g(Yi(a.add(b(_(19),_(193),_(17))),o,r,n)).toVar();return W(u,l)}).setLayout({name:"mx_fractal_noise_vec4",type:"vec4",inputs:[{name:"p",type:"vec3"},{name:"octaves",type:"int"},{name:"lacunarity",type:"float"},{name:"diminish",type:"float"}]}),cE=N(([i,e,t,s,n,r,o])=>{const a=_(o).toVar(),u=g(r).toVar(),l=_(n).toVar(),c=_(s).toVar(),d=_(t).toVar(),p=_(e).toVar(),f=M(i).toVar(),m=b(Co(M(p.add(c),d.add(l)))).toVar(),y=M(m.x,m.y).toVar();y.subAssign(.5),y.mulAssign(u),y.addAssign(.5);const x=M(M(g(p),g(d)).add(y)).toVar(),S=M(x.sub(f)).toVar();return H(a.equal(_(2)),()=>ge(S.x).add(ge(S.y))),H(a.equal(_(3)),()=>Se(ge(S.x),ge(S.y))),Es(S,S)}).setLayout({name:"mx_worley_distance_0",type:"float",inputs:[{name:"p",type:"vec2"},{name:"x",type:"int"},{name:"y",type:"int"},{name:"xoff",type:"int"},{name:"yoff",type:"int"},{name:"jitter",type:"float"},{name:"metric",type:"int"}]}),dE=N(([i,e,t,s,n,r,o,a,u])=>{const l=_(u).toVar(),c=g(a).toVar(),d=_(o).toVar(),p=_(r).toVar(),f=_(n).toVar(),m=_(s).toVar(),y=_(t).toVar(),x=_(e).toVar(),S=b(i).toVar(),R=b(Co(b(x.add(f),y.add(p),m.add(d)))).toVar();R.subAssign(.5),R.mulAssign(c),R.addAssign(.5);const C=b(b(g(x),g(y),g(m)).add(R)).toVar(),D=b(C.sub(S)).toVar();return H(l.equal(_(2)),()=>ge(D.x).add(ge(D.y)).add(ge(D.z))),H(l.equal(_(3)),()=>Se(ge(D.x),ge(D.y),ge(D.z))),Es(D,D)}).setLayout({name:"mx_worley_distance_1",type:"float",inputs:[{name:"p",type:"vec3"},{name:"x",type:"int"},{name:"y",type:"int"},{name:"z",type:"int"},{name:"xoff",type:"int"},{name:"yoff",type:"int"},{name:"zoff",type:"int"},{name:"jitter",type:"float"},{name:"metric",type:"int"}]}),Wn=We([cE,dE]),hE=N(([i,e,t])=>{const s=_(t).toVar(),n=g(e).toVar(),r=M(i).toVar(),o=_().toVar(),a=_().toVar(),u=M(be(r.x,o),be(r.y,a)).toVar(),l=g(1e6).toVar();return le({start:-1,end:_(1),name:"x",condition:"<="},({x:c})=>{le({start:-1,end:_(1),name:"y",condition:"<="},({y:d})=>{const p=g(Wn(u,c,d,o,a,n,s)).toVar();l.assign(rt(l,p))})}),H(s.equal(_(0)),()=>{l.assign(Xt(l))}),l}).setLayout({name:"mx_worley_noise_float_0",type:"float",inputs:[{name:"p",type:"vec2"},{name:"jitter",type:"float"},{name:"metric",type:"int"}]}),pE=N(([i,e,t])=>{const s=_(t).toVar(),n=g(e).toVar(),r=M(i).toVar(),o=_().toVar(),a=_().toVar(),u=M(be(r.x,o),be(r.y,a)).toVar(),l=M(1e6,1e6).toVar();return le({start:-1,end:_(1),name:"x",condition:"<="},({x:c})=>{le({start:-1,end:_(1),name:"y",condition:"<="},({y:d})=>{const p=g(Wn(u,c,d,o,a,n,s)).toVar();H(p.lessThan(l.x),()=>{l.y.assign(l.x),l.x.assign(p)}).ElseIf(p.lessThan(l.y),()=>{l.y.assign(p)})})}),H(s.equal(_(0)),()=>{l.assign(Xt(l))}),l}).setLayout({name:"mx_worley_noise_vec2_0",type:"vec2",inputs:[{name:"p",type:"vec2"},{name:"jitter",type:"float"},{name:"metric",type:"int"}]}),fE=N(([i,e,t])=>{const s=_(t).toVar(),n=g(e).toVar(),r=M(i).toVar(),o=_().toVar(),a=_().toVar(),u=M(be(r.x,o),be(r.y,a)).toVar(),l=b(1e6,1e6,1e6).toVar();return le({start:-1,end:_(1),name:"x",condition:"<="},({x:c})=>{le({start:-1,end:_(1),name:"y",condition:"<="},({y:d})=>{const p=g(Wn(u,c,d,o,a,n,s)).toVar();H(p.lessThan(l.x),()=>{l.z.assign(l.y),l.y.assign(l.x),l.x.assign(p)}).ElseIf(p.lessThan(l.y),()=>{l.z.assign(l.y),l.y.assign(p)}).ElseIf(p.lessThan(l.z),()=>{l.z.assign(p)})})}),H(s.equal(_(0)),()=>{l.assign(Xt(l))}),l}).setLayout({name:"mx_worley_noise_vec3_0",type:"vec3",inputs:[{name:"p",type:"vec2"},{name:"jitter",type:"float"},{name:"metric",type:"int"}]}),mE=N(([i,e,t])=>{const s=_(t).toVar(),n=g(e).toVar(),r=b(i).toVar(),o=_().toVar(),a=_().toVar(),u=_().toVar(),l=b(be(r.x,o),be(r.y,a),be(r.z,u)).toVar(),c=g(1e6).toVar();return le({start:-1,end:_(1),name:"x",condition:"<="},({x:d})=>{le({start:-1,end:_(1),name:"y",condition:"<="},({y:p})=>{le({start:-1,end:_(1),name:"z",condition:"<="},({z:f})=>{const m=g(Wn(l,d,p,f,o,a,u,n,s)).toVar();c.assign(rt(c,m))})})}),H(s.equal(_(0)),()=>{c.assign(Xt(c))}),c}).setLayout({name:"mx_worley_noise_float_1",type:"float",inputs:[{name:"p",type:"vec3"},{name:"jitter",type:"float"},{name:"metric",type:"int"}]}),gE=We([hE,mE]),yE=N(([i,e,t])=>{const s=_(t).toVar(),n=g(e).toVar(),r=b(i).toVar(),o=_().toVar(),a=_().toVar(),u=_().toVar(),l=b(be(r.x,o),be(r.y,a),be(r.z,u)).toVar(),c=M(1e6,1e6).toVar();return le({start:-1,end:_(1),name:"x",condition:"<="},({x:d})=>{le({start:-1,end:_(1),name:"y",condition:"<="},({y:p})=>{le({start:-1,end:_(1),name:"z",condition:"<="},({z:f})=>{const m=g(Wn(l,d,p,f,o,a,u,n,s)).toVar();H(m.lessThan(c.x),()=>{c.y.assign(c.x),c.x.assign(m)}).ElseIf(m.lessThan(c.y),()=>{c.y.assign(m)})})})}),H(s.equal(_(0)),()=>{c.assign(Xt(c))}),c}).setLayout({name:"mx_worley_noise_vec2_1",type:"vec2",inputs:[{name:"p",type:"vec3"},{name:"jitter",type:"float"},{name:"metric",type:"int"}]}),_E=We([pE,yE]),TE=N(([i,e,t])=>{const s=_(t).toVar(),n=g(e).toVar(),r=b(i).toVar(),o=_().toVar(),a=_().toVar(),u=_().toVar(),l=b(be(r.x,o),be(r.y,a),be(r.z,u)).toVar(),c=b(1e6,1e6,1e6).toVar();return le({start:-1,end:_(1),name:"x",condition:"<="},({x:d})=>{le({start:-1,end:_(1),name:"y",condition:"<="},({y:p})=>{le({start:-1,end:_(1),name:"z",condition:"<="},({z:f})=>{const m=g(Wn(l,d,p,f,o,a,u,n,s)).toVar();H(m.lessThan(c.x),()=>{c.z.assign(c.y),c.y.assign(c.x),c.x.assign(m)}).ElseIf(m.lessThan(c.y),()=>{c.z.assign(c.y),c.y.assign(m)}).ElseIf(m.lessThan(c.z),()=>{c.z.assign(m)})})})}),H(s.equal(_(0)),()=>{c.assign(Xt(c))}),c}).setLayout({name:"mx_worley_noise_vec3_1",type:"vec3",inputs:[{name:"p",type:"vec3"},{name:"jitter",type:"float"},{name:"metric",type:"int"}]}),zl=We([fE,TE]),xE=N(([i,e,t,s,n,r,o,a,u,l,c])=>{const d=_(i).toVar(),p=M(e).toVar(),f=M(t).toVar(),m=M(s).toVar(),y=g(n).toVar(),x=g(r).toVar(),S=g(o).toVar(),R=Tt(a).toVar(),C=_(u).toVar(),D=g(l).toVar(),P=g(c).toVar(),F=p.mul(f).add(m),B=g(0).toVar();return H(d.equal(_(0)),()=>{B.assign(Hr(F))}),H(d.equal(_(1)),()=>{B.assign(Co(F))}),H(d.equal(_(2)),()=>{B.assign(zl(F,y,_(0)))}),H(d.equal(_(3)),()=>{B.assign(Mo(b(F,0),C,D,P))}),B.assign(B.mul(S.sub(x)).add(x)),H(R,()=>{B.assign(xt(B,x,S))}),B}).setLayout({name:"mx_unifiednoise2d",type:"float",inputs:[{name:"noiseType",type:"int"},{name:"texcoord",type:"vec2"},{name:"freq",type:"vec2"},{name:"offset",type:"vec2"},{name:"jitter",type:"float"},{name:"outmin",type:"float"},{name:"outmax",type:"float"},{name:"clampoutput",type:"bool"},{name:"octaves",type:"int"},{name:"lacunarity",type:"float"},{name:"diminish",type:"float"}]}),bE=N(([i,e,t,s,n,r,o,a,u,l,c])=>{const d=_(i).toVar(),p=b(e).toVar(),f=b(t).toVar(),m=b(s).toVar(),y=g(n).toVar(),x=g(r).toVar(),S=g(o).toVar(),R=Tt(a).toVar(),C=_(u).toVar(),D=g(l).toVar(),P=g(c).toVar(),F=p.mul(f).add(m),B=g(0).toVar();return H(d.equal(_(0)),()=>{B.assign(Hr(F))}),H(d.equal(_(1)),()=>{B.assign(Co(F))}),H(d.equal(_(2)),()=>{B.assign(zl(F,y,_(0)))}),H(d.equal(_(3)),()=>{B.assign(Mo(F,C,D,P))}),B.assign(B.mul(S.sub(x)).add(x)),H(R,()=>{B.assign(xt(B,x,S))}),B}).setLayout({name:"mx_unifiednoise3d",type:"float",inputs:[{name:"noiseType",type:"int"},{name:"position",type:"vec3"},{name:"freq",type:"vec3"},{name:"offset",type:"vec3"},{name:"jitter",type:"float"},{name:"outmin",type:"float"},{name:"outmax",type:"float"},{name:"clampoutput",type:"bool"},{name:"octaves",type:"int"},{name:"lacunarity",type:"float"},{name:"diminish",type:"float"}]}),NE=N(([i])=>{const e=i.y,t=i.z,s=b().toVar();return H(e.lessThan(1e-4),()=>{s.assign(b(t,t,t))}).Else(()=>{let n=i.x;n=n.sub(Gt(n)).mul(6).toVar();const r=_(Hu(n)),o=n.sub(g(r)),a=t.mul(e.oneMinus()),u=t.mul(e.mul(o).oneMinus()),l=t.mul(e.mul(o.oneMinus()).oneMinus());H(r.equal(_(0)),()=>{s.assign(b(t,l,a))}).ElseIf(r.equal(_(1)),()=>{s.assign(b(u,t,a))}).ElseIf(r.equal(_(2)),()=>{s.assign(b(a,t,l))}).ElseIf(r.equal(_(3)),()=>{s.assign(b(a,u,t))}).ElseIf(r.equal(_(4)),()=>{s.assign(b(l,a,t))}).Else(()=>{s.assign(b(t,a,u))})}),s}).setLayout({name:"mx_hsvtorgb",type:"vec3",inputs:[{name:"hsv",type:"vec3"}]}),SE=N(([i])=>{const e=b(i).toVar(),t=g(e.x).toVar(),s=g(e.y).toVar(),n=g(e.z).toVar(),r=g(rt(t,rt(s,n))).toVar(),o=g(Se(t,Se(s,n))).toVar(),a=g(o.sub(r)).toVar(),u=g().toVar(),l=g().toVar(),c=g().toVar();return c.assign(o),H(o.greaterThan(0),()=>{l.assign(a.div(o))}).Else(()=>{l.assign(0)}),H(l.lessThanEqual(0),()=>{u.assign(0)}).Else(()=>{H(t.greaterThanEqual(o),()=>{u.assign(s.sub(n).div(a))}).ElseIf(s.greaterThanEqual(o),()=>{u.assign(Be(2,n.sub(t).div(a)))}).Else(()=>{u.assign(Be(4,t.sub(s).div(a)))}),u.mulAssign(1/6),H(u.lessThan(0),()=>{u.addAssign(1)})}),b(u,l,c)}).setLayout({name:"mx_rgbtohsv",type:"vec3",inputs:[{name:"c",type:"vec3"}]}),vE=N(([i])=>{const e=b(i).toVar(),t=Mu(Ou(e,b(.04045))).toVar(),s=b(e.div(12.92)).toVar(),n=b(mt(Se(e.add(b(.055)),b(0)).div(1.055),b(2.4))).toVar();return ne(s,n,t)}).setLayout({name:"mx_srgb_texture_to_lin_rec709",type:"vec3",inputs:[{name:"color",type:"vec3"}]}),kg=(i,e)=>{i=g(i),e=g(e);const t=M(e.dFdx(),e.dFdy()).length().mul(.7071067811865476);return Wt(i.sub(t),i.add(t),e)},zg=(i,e,t,s)=>ne(i,e,t[s].clamp()),RE=(i,e,t=ce())=>zg(i,e,t,"x"),AE=(i,e,t=ce())=>zg(i,e,t,"y"),EE=(i,e,t,s,n=ce())=>{const r=n.x.clamp(),o=n.y.clamp(),a=ne(i,e,r),u=ne(t,s,r);return ne(a,u,o)},$g=(i,e,t,s,n)=>ne(i,e,kg(t,s[n])),wE=(i,e,t,s=ce())=>$g(i,e,t,s,"x"),CE=(i,e,t,s=ce())=>$g(i,e,t,s,"y"),ME=(i=1,e=0,t=ce())=>t.mul(i).add(e),BE=(i,e=1)=>(i=g(i),i.abs().pow(e).mul(i.sign())),PE=(i,e=1,t=.5)=>g(i).sub(t).mul(e).add(t),FE=(i=ce(),e=1,t=0)=>kl(i.convert("vec2|vec3")).mul(e).add(t),LE=(i=ce(),e=1,t=0)=>Hr(i.convert("vec2|vec3")).mul(e).add(t),DE=(i=ce(),e=1,t=0)=>(i=i.convert("vec2|vec3"),W(Hr(i),kl(i.add(M(19,73)))).mul(e).add(t)),UE=(i,e=ce(),t=M(1,1),s=M(0,0),n=1,r=0,o=1,a=!1,u=1,l=2,c=.5)=>xE(i,e.convert("vec2|vec3"),t,s,n,r,o,a,u,l,c),IE=(i,e=ce(),t=M(1,1),s=M(0,0),n=1,r=0,o=1,a=!1,u=1,l=2,c=.5)=>bE(i,e.convert("vec2|vec3"),t,s,n,r,o,a,u,l,c),VE=(i=ce(),e=1)=>gE(i.convert("vec2|vec3"),e,_(1)),OE=(i=ce(),e=1)=>_E(i.convert("vec2|vec3"),e,_(1)),GE=(i=ce(),e=1)=>zl(i.convert("vec2|vec3"),e,_(1)),kE=(i=ce())=>nE(i.convert("vec2|vec3")),zE=(i=ce(),e=3,t=2,s=.5,n=1)=>Yi(i,_(e),t,s).mul(n),$E=(i=ce(),e=3,t=2,s=.5,n=1)=>uE(i,_(e),t,s).mul(n),WE=(i=ce(),e=3,t=2,s=.5,n=1)=>Mo(i,_(e),t,s).mul(n),HE=(i=ce(),e=3,t=2,s=.5,n=1)=>lE(i,_(e),t,s).mul(n),qE=(i,e=g(0))=>Be(i,e),jE=(i,e=g(0))=>Z(i,e),XE=(i,e=g(1))=>X(i,e),YE=(i,e=g(1))=>dt(i,e),KE=(i,e=g(1))=>Lr(i,e),QE=(i,e=g(1))=>mt(i,e),ZE=(i=g(0),e=g(1))=>po(i,e),JE=()=>$n,e0=()=>sg,t0=(i,e=g(1))=>Z(e,i),s0=(i,e,t,s)=>i.greaterThan(e).mix(t,s),n0=(i,e,t,s)=>i.greaterThanEqual(e).mix(t,s),r0=(i,e,t,s)=>i.equal(e).mix(t,s),i0=(i,e=null)=>{if(typeof e=="string"){const t={x:0,r:0,y:1,g:1,z:2,b:2,w:3,a:3},s=e.replace(/^out/,"").toLowerCase();if(t[s]!==void 0)return i.element(t[s])}if(typeof e=="number")return i.element(e);if(typeof e=="string"&&e.length===1){const t={x:0,r:0,y:1,g:1,z:2,b:2,w:3,a:3};if(t[e]!==void 0)return i.element(t[e])}return i},o0=(i,e=M(.5,.5),t=M(1,1),s=g(0),n=M(0,0))=>{let r=i;if(e&&(r=r.sub(e)),t&&(r=r.mul(t)),s){const o=s.mul(Math.PI/180),a=o.cos(),u=o.sin();r=M(r.x.mul(a).sub(r.y.mul(u)),r.x.mul(u).add(r.y.mul(a)))}return e&&(r=r.add(e)),n&&(r=r.add(n)),r},a0=(i,e)=>{i=M(i),e=g(e);const t=e.mul(Math.PI/180);return kr(i,t)},u0=(i,e,t)=>{i=b(i),e=g(e),t=b(t);const s=e.mul(Math.PI/180),n=t.normalize(),r=s.cos(),o=s.sin(),a=g(1).sub(r);return i.mul(r).add(n.cross(i).mul(o)).add(n.mul(n.dot(i)).mul(a))},l0=(i,e)=>(i=b(i),e=g(e),hl(i,e)),c0=N(([i,e,t])=>{const s=is(i).toVar(),n=Z(g(.5).mul(e.sub(t)),zt).div(s).toVar(),r=Z(g(-.5).mul(e.sub(t)),zt).div(s).toVar(),o=b().toVar();o.x=s.x.greaterThan(g(0)).select(n.x,r.x),o.y=s.y.greaterThan(g(0)).select(n.y,r.y),o.z=s.z.greaterThan(g(0)).select(n.z,r.z);const a=rt(o.x,o.y,o.z).toVar();return zt.add(s.mul(a)).toVar().sub(t)}),Wg=N(([i,e])=>{const t=i.x,s=i.y,n=i.z;let r=e.element(0).mul(.886227);return r=r.add(e.element(1).mul(2*.511664).mul(s)),r=r.add(e.element(2).mul(2*.511664).mul(n)),r=r.add(e.element(3).mul(2*.511664).mul(t)),r=r.add(e.element(4).mul(2*.429043).mul(t).mul(s)),r=r.add(e.element(5).mul(2*.429043).mul(s).mul(n)),r=r.add(e.element(6).mul(n.mul(n).mul(.743125).sub(.247708))),r=r.add(e.element(7).mul(2*.429043).mul(t).mul(n)),r=r.add(e.element(8).mul(.429043).mul(X(t,t).sub(X(s,s)))),r});var h=Object.freeze({__proto__:null,BRDF_GGX:Za,BRDF_Lambert:sn,BasicPointShadowFilter:Pg,BasicShadowFilter:vg,Break:ym,Const:Op,Continue:mb,DFGApprox:vl,D_GGX:Um,Discard:tf,EPSILON:ap,F_Schlick:Un,Fn:N,INFINITY:$T,If:H,Loop:le,NodeAccess:$e,NodeShaderStage:or,NodeType:hT,NodeUpdateType:Y,OnMaterialUpdate:Sv,OnObjectUpdate:Nv,PCFShadowFilter:Rg,PCFSoftShadowFilter:Ag,PI:$i,PI2:WT,PointShadowFilter:Fg,Return:ox,Schlick_to_F0:Vm,ScriptableNodeResources:Ci,ShaderNode:Sn,Stack:io,Switch:LT,TBNViewMatrix:js,VSMShadowFilter:Eg,V_GGX_SmithCorrelated:Dm,Var:Vp,VarIntent:Gp,abs:ge,acesFilmicToneMapping:mg,acos:zu,add:Be,addMethodChaining:A,addNodeElement:lx,agxToneMapping:gg,all:up,alphaT:Gi,and:qh,anisotropy:ps,anisotropyB:Js,anisotropyT:fr,any:lp,append:VT,array:Oh,arrayBuffer:UT,asin:pp,assign:Gh,atan:po,atan2:Lp,atomicAdd:CR,atomicAnd:FR,atomicFunc:Kt,atomicLoad:ER,atomicMax:BR,atomicMin:PR,atomicOr:LR,atomicStore:wR,atomicSub:MR,atomicXor:DR,attenuationColor:Du,attenuationDistance:Lu,attribute:as,attributeArray:Av,backgroundBlurriness:og,backgroundIntensity:ru,backgroundRotation:ag,batch:fm,bentNormalView:Pf,billboarding:iv,bitAnd:Kh,bitNot:Qh,bitOr:Zh,bitXor:Jh,bitangentGeometry:Xx,bitangentLocal:Yx,bitangentView:Mf,bitangentWorld:Kx,bitcast:OS,blendBurn:Sm,blendColor:Pb,blendDodge:vm,blendOverlay:Am,blendScreen:Rm,blur:Wm,bool:Tt,buffer:Ir,bufferAttribute:Ur,builtin:ls,bumpMap:hl,burn:Lb,bvec2:Ch,bvec3:Mu,bvec4:Fh,bypass:Qp,cache:gr,call:kh,cameraFar:ms,cameraIndex:ws,cameraNear:fs,cameraNormalMatrix:Sx,cameraPosition:uf,cameraProjectionMatrix:Gn,cameraProjectionMatrixInverse:bx,cameraViewMatrix:St,cameraViewport:vx,cameraWorldMatrix:Nx,cbrt:Cp,cdl:zv,ceil:ho,checker:wA,cineonToneMapping:fg,clamp:xt,clearcoat:Oi,clearcoatNormalView:qs,clearcoatRoughness:wr,code:Ao,color:Eh,colorSpaceToWorking:go,colorToDirection:Wb,compute:Kp,computeKernel:tl,computeSkinning:pb,context:Dr,convert:Dh,convertColorSpace:QT,convertToTexture:yv,cos:Zt,cross:mo,cubeTexture:Dn,cubeTextureBase:dl,cubeToUV:Et,dFdx:$u,dFdy:Wu,dashSize:Ni,debug:nf,decrement:ip,decrementBefore:np,defaultBuildStages:Va,defaultShaderStages:bh,defined:vr,degrees:dp,deltaTime:ZS,densityFog:cR,densityFogFactor:Fl,depth:xl,depthPass:jv,determinant:xp,difference:Rp,diffuseColor:re,directPointLight:Dg,directionToColor:wm,directionToFaceDirection:kn,dispersion:Uu,distance:vp,div:dt,dodge:Db,dot:Es,drawIndex:dm,dynamicBufferAttribute:Yp,element:Lh,emissive:za,equal:Vu,equals:Np,equirectUV:bl,exp:Gu,exp2:Fn,expression:os,faceDirection:ul,faceForward:Ku,faceforward:HT,float:g,floatBitsToInt:GS,floatBitsToUint:kS,floor:Gt,fog:Br,fract:us,frameGroup:Vh,frameId:sg,frontFacing:hf,fwidth:_p,gain:HS,gapSize:$a,getConstNodeType:Ah,getCurrentStack:ro,getDirection:zm,getDistanceAttenuation:Gl,getGeometryRoughness:Lm,getNormalFromDepth:Tv,getParallaxCorrectNormal:c0,getRoughness:Sl,getScreenPosition:_v,getShIrradianceAt:Wg,getShadowMaterial:wg,getShadowRenderObjectFunction:Cg,getTextureIndex:eg,getViewPosition:_n,globalId:gR,glsl:sR,glslFn:nR,grayscale:Vv,greaterThan:Ou,greaterThanEqual:Hh,hash:WS,highpModelNormalViewMatrix:qa,highpModelViewMatrix:Ha,hue:kv,increment:rp,incrementBefore:sp,instance:ob,instanceIndex:Ns,instancedArray:Ev,instancedBufferAttribute:Wi,instancedDynamicBufferAttribute:Wa,instancedMesh:pm,int:_,intBitsToFloat:zS,inverse:bp,inverseSqrt:ku,inversesqrt:qT,invocationLocalIndex:ib,invocationSubgroupIndex:rb,ior:mr,iridescence:uo,iridescenceIOR:Bu,iridescenceThickness:Pu,ivec2:Ie,ivec3:Mh,ivec4:Bh,js:eR,label:Ip,length:kt,lengthSq:ju,lessThan:$h,lessThanEqual:Wh,lightPosition:Dl,lightProjectionUV:Ng,lightShadowMatrix:wo,lightTargetDirection:Il,lightTargetPosition:Sg,lightViewPosition:Ul,lightingContext:Tm,lights:lA,linearDepth:qi,linearToneMapping:hg,localId:yR,log:co,log2:Ot,logarithmicDepthToViewZ:vb,luminance:Bl,mat2:oo,mat3:Xe,mat4:Zs,matcapUV:jm,materialAO:lm,materialAlphaTest:Ff,materialAnisotropy:Xf,materialAnisotropyVector:yn,materialAttenuationColor:sm,materialAttenuationDistance:tm,materialClearcoat:zf,materialClearcoatNormal:Wf,materialClearcoatRoughness:$f,materialColor:Lf,materialDispersion:um,materialEmissive:Uf,materialEnvIntensity:Ri,materialEnvRotation:cl,materialIOR:em,materialIridescence:Yf,materialIridescenceIOR:Kf,materialIridescenceThickness:Qf,materialLightMap:fl,materialLineDashOffset:om,materialLineDashSize:rm,materialLineGapSize:im,materialLineScale:nm,materialLineWidth:sb,materialMetalness:Gf,materialNormal:kf,materialOpacity:pl,materialPointSize:am,materialReference:ts,materialReflectivity:Ai,materialRefractionRatio:gf,materialRotation:Hf,materialRoughness:Of,materialSheen:qf,materialSheenRoughness:jf,materialShininess:Df,materialSpecular:If,materialSpecularColor:Vf,materialSpecularIntensity:Qa,materialSpecularStrength:yr,materialThickness:Jf,materialTransmission:Zf,max:Se,maxMipLevel:sl,mediumpModelViewMatrix:df,metalness:Er,min:rt,mix:ne,mixElement:Bp,mod:Lr,modInt:op,modelDirection:Mx,modelNormalMatrix:cf,modelPosition:Bx,modelRadius:Lx,modelScale:Px,modelViewMatrix:on,modelViewPosition:Fx,modelViewProjection:ml,modelWorldMatrix:gt,modelWorldMatrixInverse:Dx,morphReference:_m,mrt:tg,mul:X,mx_aastep:kg,mx_add:qE,mx_atan2:ZE,mx_cell_noise_float:kE,mx_contrast:PE,mx_divide:YE,mx_fractal_noise_float:zE,mx_fractal_noise_vec2:$E,mx_fractal_noise_vec3:WE,mx_fractal_noise_vec4:HE,mx_frame:e0,mx_heighttonormal:l0,mx_hsvtorgb:NE,mx_ifequal:r0,mx_ifgreater:s0,mx_ifgreatereq:n0,mx_invert:t0,mx_modulo:KE,mx_multiply:XE,mx_noise_float:FE,mx_noise_vec3:LE,mx_noise_vec4:DE,mx_place2d:o0,mx_power:QE,mx_ramp4:EE,mx_ramplr:RE,mx_ramptb:AE,mx_rgbtohsv:SE,mx_rotate2d:a0,mx_rotate3d:u0,mx_safepower:BE,mx_separate:i0,mx_splitlr:wE,mx_splittb:CE,mx_srgb_texture_to_lin_rec709:vE,mx_subtract:jE,mx_timer:JE,mx_transform_uv:ME,mx_unifiednoise2d:UE,mx_unifiednoise3d:IE,mx_worley_noise_float:VE,mx_worley_noise_vec2:OE,mx_worley_noise_vec3:GE,negate:fp,neutralToneMapping:yg,nodeArray:Qs,nodeImmutable:U,nodeObject:E,nodeObjectIntent:ar,nodeObjects:no,nodeProxy:q,nodeProxyIntent:L,normalFlat:pf,normalGeometry:yo,normalLocal:it,normalMap:Ka,normalView:ue,normalViewGeometry:Ln,normalWorld:Cs,normalWorldGeometry:ff,normalize:is,not:Xh,notEqual:zh,numWorkgroups:fR,objectDirection:Rx,objectGroup:Iu,objectPosition:lf,objectRadius:Cx,objectScale:Ex,objectViewPosition:wx,objectWorldMatrix:Ax,oneMinus:mp,or:jh,orthographicDepthToViewZ:Sb,oscSawtooth:sv,oscSine:JS,oscSquare:ev,oscTriangle:tv,output:Cn,outputStruct:IS,overlay:Ib,overloadingFn:We,parabola:nu,parallaxDirection:Bf,parallaxUV:Qx,parameter:BS,pass:Hv,passTexture:qv,pcurve:qS,perspectiveDepthToViewZ:_l,pmremTexture:wl,pointShadow:Lg,pointUV:Cv,pointWidth:OT,positionGeometry:Or,positionLocal:Ae,positionPrevious:Hi,positionView:Ee,positionViewDirection:Te,positionWorld:zt,positionWorldDirection:al,posterize:Wv,pow:mt,pow2:qu,pow3:Ap,pow4:Ep,premultiplyAlpha:Em,property:ss,quadBroadcast:oA,quadSwapDiagonal:eA,quadSwapX:ZR,quadSwapY:JR,radians:cp,rand:Mp,range:hR,rangeFog:lR,rangeFogFactor:Pl,reciprocal:yp,reference:fe,referenceBuffer:ja,reflect:Sp,reflectVector:Tf,reflectView:yf,reflector:hv,refract:Yu,refractVector:xf,refractView:_f,reinhardToneMapping:pg,remap:Jp,remapClamp:ef,renderGroup:z,renderOutput:sf,rendererReference:qp,rotate:kr,rotateUV:nv,roughness:Vt,round:gp,rtt:rg,sRGBTransferEOTF:zp,sRGBTransferOETF:$p,sample:bv,sampler:fx,samplerComparison:mx,saturate:Xu,saturation:Ov,screen:Ub,screenCoordinate:Vr,screenDPR:of,screenSize:tn,screenUV:ns,scriptable:uR,scriptableValue:wi,select:ke,setCurrentStack:Rr,setName:Qu,shaderStages:Oa,shadow:Bg,shadowPositionWorld:Ol,shapeCircle:CA,sharedUniformGroup:lo,sheen:Hs,sheenRoughness:ao,shiftLeft:ep,shiftRight:tp,shininess:ki,sign:Mr,sin:lt,sinc:jS,skinning:gm,smoothstep:Wt,smoothstepElement:Pp,specularColor:Je,specularF90:Cr,spherizeUV:rv,split:IT,spritesheetUV:uv,sqrt:Xt,stack:Ei,step:fo,stepElement:Fp,storage:en,storageBarrier:bR,storageObject:hb,storageTexture:ug,string:DT,struct:US,sub:Z,subBuild:Mn,subgroupAdd:VR,subgroupAll:YR,subgroupAnd:WR,subgroupAny:KR,subgroupBallot:IR,subgroupBroadcast:tA,subgroupBroadcastFirst:QR,subgroupElect:UR,subgroupExclusiveAdd:GR,subgroupExclusiveMul:$R,subgroupInclusiveAdd:OR,subgroupInclusiveMul:zR,subgroupIndex:nb,subgroupMax:XR,subgroupMin:jR,subgroupMul:kR,subgroupOr:HR,subgroupShuffle:sA,subgroupShuffleDown:iA,subgroupShuffleUp:rA,subgroupShuffleXor:nA,subgroupSize:_R,subgroupXor:qR,tan:hp,tangentGeometry:To,tangentLocal:Gr,tangentView:xo,tangentWorld:Cf,texture:Q,texture3D:lg,textureBarrier:NR,textureBicubic:pN,textureBicubicLevel:Rl,textureCubeUV:$m,textureLoad:ve,textureSize:bs,textureStore:Bv,thickness:Fu,time:$n,toneMapping:jp,toneMappingExposure:Xp,toonOutlinePass:Yv,transformDirection:wp,transformNormal:mf,transformNormalToView:ll,transformedClearcoatNormalView:Ox,transformedNormalView:Ix,transformedNormalWorld:Vx,transmission:zi,transpose:Tp,triNoise3D:YS,triplanarTexture:lv,triplanarTextures:ng,trunc:Hu,uint:O,uintBitsToFloat:$S,uniform:$,uniformArray:qe,uniformCubeTexture:kx,uniformFlow:Up,uniformGroup:Ih,uniformTexture:px,unpremultiplyAlpha:Fb,userData:Dv,uv:ce,uvec2:wh,uvec3:On,uvec4:Ph,varying:Yt,varyingProperty:Ar,vec2:M,vec3:b,vec4:W,vectorComponents:nn,velocity:Iv,vertexColor:Nm,vertexIndex:cm,vertexStage:kp,vibrance:Gv,viewZToLogarithmicDepth:Tl,viewZToOrthographicDepth:Bn,viewZToPerspectiveDepth:xm,viewport:il,viewportCoordinate:af,viewportDepthTexture:yl,viewportLinearDepth:Rb,viewportMipTexture:gl,viewportResolution:xx,viewportSafeUV:ov,viewportSharedTexture:$b,viewportSize:ol,viewportTexture:bb,viewportUV:Tx,wgsl:tR,wgslFn:rR,workgroupArray:RR,workgroupBarrier:xR,workgroupId:mR,workingToColorSpace:Wp,xor:Yh});const At=new Cl;class d0 extends Ms{constructor(e,t){super(),this.renderer=e,this.nodes=t}update(e,t,s){const n=this.renderer,r=this.nodes.getBackgroundNode(e)||e.background;let o=!1;if(r===null)n._clearColor.getRGB(At),At.a=n._clearColor.a;else if(r.isColor===!0)r.getRGB(At),At.a=1,o=!0;else if(r.isNode===!0){const u=this.get(e),l=r;At.copy(n._clearColor);let c=u.backgroundMesh;if(c===void 0){let y=function(){r.removeEventListener("dispose",y),c.material.dispose(),c.geometry.dispose()};const p=Dr(W(l).mul(ru),{getUV:()=>ag.mul(ff),getTextureLevel:()=>og});let f=ml;f=f.setZ(f.w);const m=new we;m.name="Background.material",m.side=nt,m.depthTest=!1,m.depthWrite=!1,m.allowOverride=!1,m.fog=!1,m.lights=!1,m.vertexNode=f,m.colorNode=p,u.backgroundMeshNode=p,u.backgroundMesh=c=new Ss(new Hy(1,32,32),m),c.frustumCulled=!1,c.name="Background.mesh",c.onBeforeRender=function(x,S,R){this.matrixWorld.copyPosition(R.matrixWorld)},r.addEventListener("dispose",y)}const d=l.getCacheKey();u.backgroundCacheKey!==d&&(u.backgroundMeshNode.node=W(l).mul(ru),u.backgroundMeshNode.needsUpdate=!0,c.material.needsUpdate=!0,u.backgroundCacheKey=d),t.unshift(c,c.geometry,c.material,0,0,null,null)}else console.error("THREE.Renderer: Unsupported background configuration.",r);const a=n.xr.getEnvironmentBlendMode();if(a==="additive"?At.set(0,0,0,1):a==="alpha-blend"&&At.set(0,0,0,0),n.autoClear===!0||o===!0){const u=s.clearColorValue;u.r=At.r,u.g=At.g,u.b=At.b,u.a=At.a,(n.backend.isWebGLBackend===!0||n.alpha===!0)&&(u.r*=u.a,u.g*=u.a,u.b*=u.a),s.depthClearValue=n._clearDepth,s.stencilClearValue=n._clearStencil,s.clearColor=n.autoClearColor===!0,s.clearDepth=n.autoClearDepth===!0,s.clearStencil=n.autoClearStencil===!0}else s.clearColor=!1,s.clearDepth=!1,s.clearStencil=!1}}let h0=0;class iu{constructor(e="",t=[],s=0,n=[]){this.name=e,this.bindings=t,this.index=s,this.bindingsReference=n,this.id=h0++}}class p0{constructor(e,t,s,n,r,o,a,u,l,c=[]){this.vertexShader=e,this.fragmentShader=t,this.computeShader=s,this.transforms=c,this.nodeAttributes=n,this.bindings=r,this.updateNodes=o,this.updateBeforeNodes=a,this.updateAfterNodes=u,this.observer=l,this.usedTimes=0}createBindings(){const e=[];for(const t of this.bindings)if(t.bindings[0].groupNode.shared!==!0){const n=new iu(t.name,[],t.index,t.bindingsReference);e.push(n);for(const r of t.bindings)n.bindings.push(r.clone())}else e.push(t);return e}}class Qc{constructor(e,t,s=null){this.isNodeAttribute=!0,this.name=e,this.type=t,this.node=s}}class f0{constructor(e,t,s){this.isNodeUniform=!0,this.name=e,this.type=t,this.node=s}get value(){return this.node.value}set value(e){this.node.value=e}get id(){return this.node.id}get groupNode(){return this.node.groupNode}}class Hg{constructor(e,t,s=!1,n=null){this.isNodeVar=!0,this.name=e,this.type=t,this.readOnly=s,this.count=n}}class m0 extends Hg{constructor(e,t,s=null,n=null){super(e,t),this.needsInterpolation=!1,this.isNodeVarying=!0,this.interpolationType=s,this.interpolationSampling=n}}class g0{constructor(e,t,s=""){this.name=e,this.type=t,this.code=s,Object.defineProperty(this,"isNodeCode",{value:!0})}}let y0=0;class ta{constructor(e=null){this.id=y0++,this.nodesData=new WeakMap,this.parent=e}getData(e){let t=this.nodesData.get(e);return t===void 0&&this.parent!==null&&(t=this.parent.getData(e)),t}setData(e,t){this.nodesData.set(e,t)}}class _0{constructor(e,t){this.name=e,this.members=t,this.output=!1}}class Bs{constructor(e,t){this.name=e,this.value=t,this.boundary=0,this.itemSize=0,this.offset=0}setValue(e){this.value=e}getValue(){return this.value}}class T0 extends Bs{constructor(e,t=0){super(e,t),this.isNumberUniform=!0,this.boundary=4,this.itemSize=1}}class x0 extends Bs{constructor(e,t=new he){super(e,t),this.isVector2Uniform=!0,this.boundary=8,this.itemSize=2}}class b0 extends Bs{constructor(e,t=new j){super(e,t),this.isVector3Uniform=!0,this.boundary=16,this.itemSize=3}}class N0 extends Bs{constructor(e,t=new _e){super(e,t),this.isVector4Uniform=!0,this.boundary=16,this.itemSize=4}}class S0 extends Bs{constructor(e,t=new jt){super(e,t),this.isColorUniform=!0,this.boundary=16,this.itemSize=3}}class v0 extends Bs{constructor(e,t=new wd){super(e,t),this.isMatrix2Uniform=!0,this.boundary=8,this.itemSize=4}}class R0 extends Bs{constructor(e,t=new Pr){super(e,t),this.isMatrix3Uniform=!0,this.boundary=48,this.itemSize=12}}class A0 extends Bs{constructor(e,t=new Ge){super(e,t),this.isMatrix4Uniform=!0,this.boundary=64,this.itemSize=16}}class E0 extends T0{constructor(e){super(e.name,e.value),this.nodeUniform=e}getValue(){return this.nodeUniform.value}getType(){return this.nodeUniform.type}}class w0 extends x0{constructor(e){super(e.name,e.value),this.nodeUniform=e}getValue(){return this.nodeUniform.value}getType(){return this.nodeUniform.type}}class C0 extends b0{constructor(e){super(e.name,e.value),this.nodeUniform=e}getValue(){return this.nodeUniform.value}getType(){return this.nodeUniform.type}}class M0 extends N0{constructor(e){super(e.name,e.value),this.nodeUniform=e}getValue(){return this.nodeUniform.value}getType(){return this.nodeUniform.type}}class B0 extends S0{constructor(e){super(e.name,e.value),this.nodeUniform=e}getValue(){return this.nodeUniform.value}getType(){return this.nodeUniform.type}}class P0 extends v0{constructor(e){super(e.name,e.value),this.nodeUniform=e}getValue(){return this.nodeUniform.value}getType(){return this.nodeUniform.type}}class F0 extends R0{constructor(e){super(e.name,e.value),this.nodeUniform=e}getValue(){return this.nodeUniform.value}getType(){return this.nodeUniform.type}}class L0 extends A0{constructor(e){super(e.name,e.value),this.nodeUniform=e}getValue(){return this.nodeUniform.value}getType(){return this.nodeUniform.type}}const Zc=new WeakMap,D0=new Map([[Int8Array,"int"],[Int16Array,"int"],[Int32Array,"int"],[Uint8Array,"uint"],[Uint16Array,"uint"],[Uint32Array,"uint"],[Float32Array,"float"]]),ui=i=>/e/g.test(i)?String(i).replace(/\+/g,""):(i=Number(i),i+(i%1?"":".0"));class qg{constructor(e,t,s){this.object=e,this.material=e&&e.material||null,this.geometry=e&&e.geometry||null,this.renderer=t,this.parser=s,this.scene=null,this.camera=null,this.nodes=[],this.sequentialNodes=[],this.updateNodes=[],this.updateBeforeNodes=[],this.updateAfterNodes=[],this.hashNodes={},this.observer=null,this.lightsNode=null,this.environmentNode=null,this.fogNode=null,this.clippingContext=null,this.vertexShader=null,this.fragmentShader=null,this.computeShader=null,this.flowNodes={vertex:[],fragment:[],compute:[]},this.flowCode={vertex:"",fragment:"",compute:""},this.uniforms={vertex:[],fragment:[],compute:[],index:0},this.structs={vertex:[],fragment:[],compute:[],index:0},this.types={vertex:[],fragment:[],compute:[],index:0},this.bindings={vertex:{},fragment:{},compute:{}},this.bindingsIndexes={},this.bindGroups=null,this.attributes=[],this.bufferAttributes=[],this.varyings=[],this.codes={},this.vars={},this.declarations={},this.flow={code:""},this.chaining=[],this.stack=Ei(),this.stacks=[],this.tab="	",this.currentFunctionNode=null,this.context={material:this.material},this.cache=new ta,this.globalCache=this.cache,this.flowsData=new WeakMap,this.shaderStage=null,this.buildStage=null,this.subBuildLayers=[],this.currentStack=null,this.subBuildFn=null}getBindGroupsCache(){let e=Zc.get(this.renderer);return e===void 0&&(e=new Pt,Zc.set(this.renderer,e)),e}createRenderTarget(e,t,s){return new As(e,t,s)}createCubeRenderTarget(e,t){return new Cm(e,t)}includes(e){return this.nodes.includes(e)}getOutputStructName(){}_getBindGroup(e,t){const s=this.getBindGroupsCache(),n=[];let r=!0;for(const a of t)n.push(a),r=r&&a.groupNode.shared!==!0;let o;return r?(o=s.get(n),o===void 0&&(o=new iu(e,n,this.bindingsIndexes[e].group,n),s.set(n,o))):o=new iu(e,n,this.bindingsIndexes[e].group,n),o}getBindGroupArray(e,t){const s=this.bindings[t];let n=s[e];return n===void 0&&(this.bindingsIndexes[e]===void 0&&(this.bindingsIndexes[e]={binding:0,group:Object.keys(this.bindingsIndexes).length}),s[e]=n=[]),n}getBindings(){let e=this.bindGroups;if(e===null){const t={},s=this.bindings;for(const n of Oa)for(const r in s[n]){const o=s[n][r];(t[r]||(t[r]=[])).push(...o)}e=[];for(const n in t){const r=t[n],o=this._getBindGroup(n,r);e.push(o)}this.bindGroups=e}return e}sortBindingGroups(){const e=this.getBindings();e.sort((t,s)=>t.bindings[0].groupNode.order-s.bindings[0].groupNode.order);for(let t=0;t<e.length;t++){const s=e[t];this.bindingsIndexes[s.name].group=t,s.index=t}}setHashNode(e,t){this.hashNodes[t]=e}addNode(e){this.nodes.includes(e)===!1&&(this.nodes.push(e),this.setHashNode(e,e.getHash(this)))}addSequentialNode(e){this.sequentialNodes.includes(e)===!1&&this.sequentialNodes.push(e)}buildUpdateNodes(){for(const e of this.nodes)e.getUpdateType()!==Y.NONE&&this.updateNodes.push(e);for(const e of this.sequentialNodes){const t=e.getUpdateBeforeType(),s=e.getUpdateAfterType();t!==Y.NONE&&this.updateBeforeNodes.push(e),s!==Y.NONE&&this.updateAfterNodes.push(e)}}get currentNode(){return this.chaining[this.chaining.length-1]}isFilteredTexture(e){return e.magFilter===rs||e.magFilter===ma||e.magFilter===Nr||e.magFilter===Ys||e.minFilter===rs||e.minFilter===ma||e.minFilter===Nr||e.minFilter===Ys}addChain(e){this.chaining.push(e)}removeChain(e){if(this.chaining.pop()!==e)throw new Error("NodeBuilder: Invalid node chaining!")}getMethod(e){return e}getTernary(){return null}getNodeFromHash(e){return this.hashNodes[e]}addFlow(e,t){return this.flowNodes[e].push(t),t}setContext(e){this.context=e}getContext(){return this.context}getSharedContext(){return{...this.context},this.context}setCache(e){this.cache=e}getCache(){return this.cache}getCacheFromNode(e,t=!0){const s=this.getDataFromNode(e);return s.cache===void 0&&(s.cache=new ta(t?this.getCache():null)),s.cache}isAvailable(){return!1}getVertexIndex(){console.warn("Abstract function.")}getInstanceIndex(){console.warn("Abstract function.")}getDrawIndex(){console.warn("Abstract function.")}getFrontFacing(){console.warn("Abstract function.")}getFragCoord(){console.warn("Abstract function.")}isFlipY(){return!1}increaseUsage(e){const t=this.getDataFromNode(e);return t.usageCount=t.usageCount===void 0?1:t.usageCount+1,t.usageCount}generateTexture(){console.warn("Abstract function.")}generateTextureLod(){console.warn("Abstract function.")}generateArrayDeclaration(e,t){return this.getType(e)+"[ "+t+" ]"}generateArray(e,t,s=null){let n=this.generateArrayDeclaration(e,t)+"( ";for(let r=0;r<t;r++){const o=s?s[r]:null;o!==null?n+=o.build(this,e):n+=this.generateConst(e),r<t-1&&(n+=", ")}return n+=" )",n}generateStruct(e,t,s=null){const n=[];for(const r of t){const{name:o,type:a}=r;s&&s[o]&&s[o].isNode?n.push(s[o].build(this,a)):n.push(this.generateConst(a))}return e+"( "+n.join(", ")+" )"}generateConst(e,t=null){if(t===null&&(e==="float"||e==="int"||e==="uint"?t=0:e==="bool"?t=!1:e==="color"?t=new jt:e==="vec2"?t=new he:e==="vec3"?t=new j:e==="vec4"&&(t=new _e)),e==="float")return ui(t);if(e==="int")return`${Math.round(t)}`;if(e==="uint")return t>=0?`${Math.round(t)}u`:"0u";if(e==="bool")return t?"true":"false";if(e==="color")return`${this.getType("vec3")}( ${ui(t.r)}, ${ui(t.g)}, ${ui(t.b)} )`;const s=this.getTypeLength(e),n=this.getComponentType(e),r=o=>this.generateConst(n,o);if(s===2)return`${this.getType(e)}( ${r(t.x)}, ${r(t.y)} )`;if(s===3)return`${this.getType(e)}( ${r(t.x)}, ${r(t.y)}, ${r(t.z)} )`;if(s===4&&e!=="mat2")return`${this.getType(e)}( ${r(t.x)}, ${r(t.y)}, ${r(t.z)}, ${r(t.w)} )`;if(s>=4&&t&&(t.isMatrix2||t.isMatrix3||t.isMatrix4))return`${this.getType(e)}( ${t.elements.map(r).join(", ")} )`;if(s>4)return`${this.getType(e)}()`;throw new Error(`NodeBuilder: Type '${e}' not found in generate constant attempt.`)}getType(e){return e==="color"?"vec3":e}hasGeometryAttribute(e){return this.geometry&&this.geometry.getAttribute(e)!==void 0}getAttribute(e,t){const s=this.attributes;for(const r of s)if(r.name===e)return r;const n=new Qc(e,t);return this.registerDeclaration(n),s.push(n),n}getPropertyName(e){return e.name}isVector(e){return/vec\d/.test(e)}isMatrix(e){return/mat\d/.test(e)}isReference(e){return e==="void"||e==="property"||e==="sampler"||e==="samplerComparison"||e==="texture"||e==="cubeTexture"||e==="storageTexture"||e==="depthTexture"||e==="texture3D"}needsToWorkingColorSpace(){return!1}getComponentTypeFromTexture(e){const t=e.type;if(e.isDataTexture){if(t===Ke)return"int";if(t===Fe)return"uint"}return"float"}getElementType(e){return e==="mat2"?"vec2":e==="mat3"?"vec3":e==="mat4"?"vec4":this.getComponentType(e)}getComponentType(e){if(e=this.getVectorType(e),e==="float"||e==="bool"||e==="int"||e==="uint")return e;const t=/(b|i|u|)(vec|mat)([2-4])/.exec(e);return t===null?null:t[1]==="b"?"bool":t[1]==="i"?"int":t[1]==="u"?"uint":"float"}getVectorType(e){return e==="color"?"vec3":e==="texture"||e==="cubeTexture"||e==="storageTexture"||e==="texture3D"?"vec4":e}getTypeFromLength(e,t="float"){if(e===1)return t;let s=gh(e);const n=t==="float"?"":t[0];return/mat2/.test(t)===!0&&(s=s.replace("vec","mat")),n+s}getTypeFromArray(e){return D0.get(e.constructor)}isInteger(e){return/int|uint|(i|u)vec/.test(e)}getTypeFromAttribute(e){let t=e;e.isInterleavedBufferAttribute&&(t=e.data);const s=t.array,n=e.itemSize,r=e.normalized;let o;return!(e instanceof hh)&&r!==!0&&(o=this.getTypeFromArray(s)),this.getTypeFromLength(n,o)}getTypeLength(e){const t=this.getVectorType(e),s=/vec([2-4])/.exec(t);return s!==null?Number(s[1]):t==="float"||t==="bool"||t==="int"||t==="uint"?1:/mat2/.test(e)===!0?4:/mat3/.test(e)===!0?9:/mat4/.test(e)===!0?16:0}getVectorFromMatrix(e){return e.replace("mat","vec")}changeComponentType(e,t){return this.getTypeFromLength(this.getTypeLength(e),t)}getIntegerType(e){const t=this.getComponentType(e);return t==="int"||t==="uint"?e:this.changeComponentType(e,"int")}addStack(){this.stack=Ei(this.stack);const e=ro();return this.stacks.push(e),Rr(this.stack),this.stack}removeStack(){const e=this.stack;return this.stack=e.parent,Rr(this.stacks.pop()),e}getDataFromNode(e,t=this.shaderStage,s=null){s=s===null?e.isGlobal(this)?this.globalCache:this.cache:s;let n=s.getData(e);n===void 0&&(n={},s.setData(e,n)),n[t]===void 0&&(n[t]={});let r=n[t];const o=n.any?n.any.subBuilds:null,a=this.getClosestSubBuild(o);return a&&(r.subBuildsCache===void 0&&(r.subBuildsCache={}),r=r.subBuildsCache[a]||(r.subBuildsCache[a]={}),r.subBuilds=o),r}getNodeProperties(e,t="any"){const s=this.getDataFromNode(e,t);return s.properties||(s.properties={outputNode:null})}getBufferAttributeFromNode(e,t){const s=this.getDataFromNode(e);let n=s.bufferAttribute;if(n===void 0){const r=this.uniforms.index++;n=new Qc("nodeAttribute"+r,t,e),this.bufferAttributes.push(n),s.bufferAttribute=n}return n}getStructTypeNode(e,t=this.shaderStage){return this.types[t][e]||null}getStructTypeFromNode(e,t,s=null,n=this.shaderStage){const r=this.getDataFromNode(e,n,this.globalCache);let o=r.structType;if(o===void 0){const a=this.structs.index++;s===null&&(s="StructType"+a),o=new _0(s,t),this.structs[n].push(o),this.types[n][s]=e,r.structType=o}return o}getOutputStructTypeFromNode(e,t){const s=this.getStructTypeFromNode(e,t,"OutputType","fragment");return s.output=!0,s}getUniformFromNode(e,t,s=this.shaderStage,n=null){const r=this.getDataFromNode(e,s,this.globalCache);let o=r.uniform;if(o===void 0){const a=this.uniforms.index++;o=new f0(n||"nodeUniform"+a,t,e),this.uniforms[s].push(o),this.registerDeclaration(o),r.uniform=o}return o}getVarFromNode(e,t=null,s=e.getNodeType(this),n=this.shaderStage,r=!1){const o=this.getDataFromNode(e,n),a=this.getSubBuildProperty("variable",o.subBuilds);let u=o[a];if(u===void 0){const l=r?"_const":"_var",c=this.vars[n]||(this.vars[n]=[]),d=this.vars[l]||(this.vars[l]=0);t===null&&(t=(r?"nodeConst":"nodeVar")+d,this.vars[l]++),a!=="variable"&&(t=this.getSubBuildProperty(t,o.subBuilds));const p=e.getArrayCount(this);u=new Hg(t,s,r,p),r||c.push(u),this.registerDeclaration(u),o[a]=u}return u}isDeterministic(e){if(e.isMathNode)return this.isDeterministic(e.aNode)&&(e.bNode?this.isDeterministic(e.bNode):!0)&&(e.cNode?this.isDeterministic(e.cNode):!0);if(e.isOperatorNode)return this.isDeterministic(e.aNode)&&(e.bNode?this.isDeterministic(e.bNode):!0);if(e.isArrayNode){if(e.values!==null){for(const t of e.values)if(!this.isDeterministic(t))return!1}return!0}else if(e.isConstNode)return!0;return!1}getVaryingFromNode(e,t=null,s=e.getNodeType(this),n=null,r=null){const o=this.getDataFromNode(e,"any"),a=this.getSubBuildProperty("varying",o.subBuilds);let u=o[a];if(u===void 0){const l=this.varyings,c=l.length;t===null&&(t="nodeVarying"+c),a!=="varying"&&(t=this.getSubBuildProperty(t,o.subBuilds)),u=new m0(t,s,n,r),l.push(u),this.registerDeclaration(u),o[a]=u}return u}registerDeclaration(e){const t=this.shaderStage,s=this.declarations[t]||(this.declarations[t]={}),n=this.getPropertyName(e);let r=1,o=n;for(;s[o]!==void 0;)o=n+"_"+r++;r>1&&(e.name=o,console.warn(`THREE.TSL: Declaration name '${n}' of '${e.type}' already in use. Renamed to '${o}'.`)),s[o]=e}getCodeFromNode(e,t,s=this.shaderStage){const n=this.getDataFromNode(e);let r=n.code;if(r===void 0){const o=this.codes[s]||(this.codes[s]=[]),a=o.length;r=new g0("nodeCode"+a,t),o.push(r),n.code=r}return r}addFlowCodeHierarchy(e,t){const{flowCodes:s,flowCodeBlock:n}=this.getDataFromNode(e);let r=!0,o=t;for(;o;){if(n.get(o)===!0){r=!1;break}o=this.getDataFromNode(o).parentNodeBlock}if(r)for(const a of s)this.addLineFlowCode(a)}addLineFlowCodeBlock(e,t,s){const n=this.getDataFromNode(e),r=n.flowCodes||(n.flowCodes=[]),o=n.flowCodeBlock||(n.flowCodeBlock=new WeakMap);r.push(t),o.set(s,!0)}addLineFlowCode(e,t=null){return e===""?this:(t!==null&&this.context.nodeBlock&&this.addLineFlowCodeBlock(t,e,this.context.nodeBlock),e=this.tab+e,/;\s*$/.test(e)||(e=e+`;
`),this.flow.code+=e,this)}addFlowCode(e){return this.flow.code+=e,this}addFlowTab(){return this.tab+="	",this}removeFlowTab(){return this.tab=this.tab.slice(0,-1),this}getFlowData(e){return this.flowsData.get(e)}flowNode(e){const t=e.getNodeType(this),s=this.flowChildNode(e,t);return this.flowsData.set(e,s),s}addInclude(e){this.currentFunctionNode!==null&&this.currentFunctionNode.includes.push(e)}buildFunctionNode(e){const t=new _g,s=this.currentFunctionNode;return this.currentFunctionNode=t,t.code=this.buildFunctionCode(e),this.currentFunctionNode=s,t}flowShaderNode(e){const t=e.layout,s={[Symbol.iterator](){let o=0;const a=Object.values(this);return{next:()=>({value:a[o],done:o++>=a.length})}}};for(const o of t.inputs)s[o.name]=new Zm(o.type,o.name);e.layout=null;const n=e.call(s),r=this.flowStagesNode(n,t.type);return e.layout=t,r}flowBuildStage(e,t,s=null){const n=this.getBuildStage();this.setBuildStage(t);const r=e.build(this,s);return this.setBuildStage(n),r}flowStagesNode(e,t=null){const s=this.flow,n=this.vars,r=this.declarations,o=this.cache,a=this.buildStage,u=this.stack,l={code:""};this.flow=l,this.vars={},this.declarations={},this.cache=new ta,this.stack=Ei();for(const c of Va)this.setBuildStage(c),l.result=e.build(this,t);return l.vars=this.getVars(this.shaderStage),this.flow=s,this.vars=n,this.declarations=r,this.cache=o,this.stack=u,this.setBuildStage(a),l}getFunctionOperator(){return null}buildFunctionCode(){console.warn("Abstract function.")}flowChildNode(e,t=null){const s=this.flow,n={code:""};return this.flow=n,n.result=e.build(this,t),this.flow=s,n}flowNodeFromShaderStage(e,t,s=null,n=null){const r=this.tab,o=this.cache,a=this.shaderStage,u=this.context;this.setShaderStage(e);const l={...this.context};delete l.nodeBlock,this.cache=this.globalCache,this.tab="	",this.context=l;let c=null;if(this.buildStage==="generate"){const d=this.flowChildNode(t,s);n!==null&&(d.code+=`${this.tab+n} = ${d.result};
`),this.flowCode[e]=this.flowCode[e]+d.code,c=d}else c=t.build(this);return this.setShaderStage(a),this.cache=o,this.tab=r,this.context=u,c}getAttributesArray(){return this.attributes.concat(this.bufferAttributes)}getAttributes(){console.warn("Abstract function.")}getVaryings(){console.warn("Abstract function.")}getVar(e,t,s=null){return`${s!==null?this.generateArrayDeclaration(e,s):this.getType(e)} ${t}`}getVars(e){let t="";const s=this.vars[e];if(s!==void 0)for(const n of s)t+=`${this.getVar(n.type,n.name)}; `;return t}getUniforms(){console.warn("Abstract function.")}getCodes(e){const t=this.codes[e];let s="";if(t!==void 0)for(const n of t)s+=n.code+`
`;return s}getHash(){return this.vertexShader+this.fragmentShader+this.computeShader}setShaderStage(e){this.shaderStage=e}getShaderStage(){return this.shaderStage}setBuildStage(e){this.buildStage=e}getBuildStage(){return this.buildStage}buildCode(){console.warn("Abstract function.")}get subBuild(){return this.subBuildLayers[this.subBuildLayers.length-1]||null}addSubBuild(e){this.subBuildLayers.push(e)}removeSubBuild(){return this.subBuildLayers.pop()}getClosestSubBuild(e){let t;if(e&&e.isNode?e.isShaderCallNodeInternal?t=e.shaderNode.subBuilds:e.isStackNode?t=[e.subBuild]:t=this.getDataFromNode(e,"any").subBuilds:e instanceof Set?t=[...e]:t=e,!t)return null;const s=this.subBuildLayers;for(let n=t.length-1;n>=0;n--){const r=t[n];if(s.includes(r))return r}return null}getSubBuildOutput(e){return this.getSubBuildProperty("outputNode",e)}getSubBuildProperty(e="",t=null){let s;t!==null?s=this.getClosestSubBuild(t):s=this.subBuildFn;let n;return s?n=e?s+"_"+e:s:n=e,n}build(){const{object:e,material:t,renderer:s}=this;if(t!==null){let n=s.library.fromMaterial(t);n===null&&(console.error(`NodeMaterial: Material "${t.type}" is not compatible.`),n=new we),n.build(this)}else this.addFlow("compute",e);for(const n of Va){this.setBuildStage(n),this.context.vertex&&this.context.vertex.isNode&&this.flowNodeFromShaderStage("vertex",this.context.vertex);for(const r of Oa){this.setShaderStage(r);const o=this.flowNodes[r];for(const a of o)n==="generate"?this.flowNode(a):a.build(this)}}return this.setBuildStage(null),this.setShaderStage(null),this.buildCode(),this.buildUpdateNodes(),this}getNodeUniform(e,t){if(t==="float"||t==="int"||t==="uint")return new E0(e);if(t==="vec2"||t==="ivec2"||t==="uvec2")return new w0(e);if(t==="vec3"||t==="ivec3"||t==="uvec3")return new C0(e);if(t==="vec4"||t==="ivec4"||t==="uvec4")return new M0(e);if(t==="color")return new B0(e);if(t==="mat2")return new P0(e);if(t==="mat3")return new F0(e);if(t==="mat4")return new L0(e);throw new Error(`Uniform "${t}" not declared.`)}format(e,t,s){if(t=this.getVectorType(t),s=this.getVectorType(s),t===s||s===null||this.isReference(s))return e;const n=this.getTypeLength(t),r=this.getTypeLength(s);return n===16&&r===9?`${this.getType(s)}( ${e}[ 0 ].xyz, ${e}[ 1 ].xyz, ${e}[ 2 ].xyz )`:n===9&&r===4?`${this.getType(s)}( ${e}[ 0 ].xy, ${e}[ 1 ].xy )`:n>4||r>4||r===0?e:n===r?`${this.getType(s)}( ${e} )`:n>r?(e=s==="bool"?`all( ${e} )`:`${e}.${"xyz".slice(0,r)}`,this.format(e,this.getTypeFromLength(r,this.getComponentType(t)),s)):r===4&&n>1?`${this.getType(s)}( ${this.format(e,t,"vec3")}, 1.0 )`:n===2?`${this.getType(s)}( ${this.format(e,t,"vec2")}, 0.0 )`:(n===1&&r>1&&t!==this.getComponentType(s)&&(e=`${this.getType(this.getComponentType(s))}( ${e} )`),`${this.getType(s)}( ${e} )`)}getSignature(){return`// Three.js r${Dd} - Node System
`}}class Jc{constructor(){this.time=0,this.deltaTime=0,this.frameId=0,this.renderId=0,this.updateMap=new WeakMap,this.updateBeforeMap=new WeakMap,this.updateAfterMap=new WeakMap,this.renderer=null,this.material=null,this.camera=null,this.object=null,this.scene=null}_getMaps(e,t){let s=e.get(t);return s===void 0&&(s={renderMap:new WeakMap,frameMap:new WeakMap},e.set(t,s)),s}updateBeforeNode(e){const t=e.getUpdateBeforeType(),s=e.updateReference(this);if(t===Y.FRAME){const{frameMap:n}=this._getMaps(this.updateBeforeMap,s);n.get(s)!==this.frameId&&e.updateBefore(this)!==!1&&n.set(s,this.frameId)}else if(t===Y.RENDER){const{renderMap:n}=this._getMaps(this.updateBeforeMap,s);n.get(s)!==this.renderId&&e.updateBefore(this)!==!1&&n.set(s,this.renderId)}else t===Y.OBJECT&&e.updateBefore(this)}updateAfterNode(e){const t=e.getUpdateAfterType(),s=e.updateReference(this);if(t===Y.FRAME){const{frameMap:n}=this._getMaps(this.updateAfterMap,s);n.get(s)!==this.frameId&&e.updateAfter(this)!==!1&&n.set(s,this.frameId)}else if(t===Y.RENDER){const{renderMap:n}=this._getMaps(this.updateAfterMap,s);n.get(s)!==this.renderId&&e.updateAfter(this)!==!1&&n.set(s,this.renderId)}else t===Y.OBJECT&&e.updateAfter(this)}updateNode(e){const t=e.getUpdateType(),s=e.updateReference(this);if(t===Y.FRAME){const{frameMap:n}=this._getMaps(this.updateMap,s);n.get(s)!==this.frameId&&e.update(this)!==!1&&n.set(s,this.frameId)}else if(t===Y.RENDER){const{renderMap:n}=this._getMaps(this.updateMap,s);n.get(s)!==this.renderId&&e.update(this)!==!1&&n.set(s,this.renderId)}else t===Y.OBJECT&&e.update(this)}update(){this.frameId++,this.lastTime===void 0&&(this.lastTime=performance.now()),this.deltaTime=(performance.now()-this.lastTime)/1e3,this.lastTime=performance.now(),this.time+=this.deltaTime}}class $l{constructor(e,t,s=null,n="",r=!1){this.type=e,this.name=t,this.count=s,this.qualifier=n,this.isConst=r}}$l.isNodeFunctionInput=!0;class U0 extends an{static get type(){return"DirectionalLightNode"}constructor(e=null){super(e)}setupDirect(){const e=this.colorNode;return{lightDirection:Il(this.light),lightColor:e}}}const sa=new Ge,li=new Ge;let tr=null;class I0 extends an{static get type(){return"RectAreaLightNode"}constructor(e=null){super(e),this.halfHeight=$(new j).setGroup(z),this.halfWidth=$(new j).setGroup(z),this.updateType=Y.RENDER}update(e){super.update(e);const{light:t}=this,s=e.camera.matrixWorldInverse;li.identity(),sa.copy(t.matrixWorld),sa.premultiply(s),li.extractRotation(sa),this.halfWidth.value.set(t.width*.5,0,0),this.halfHeight.value.set(0,t.height*.5,0),this.halfWidth.value.applyMatrix4(li),this.halfHeight.value.applyMatrix4(li)}setupDirectRectArea(e){let t,s;e.isAvailable("float32Filterable")?(t=Q(tr.LTC_FLOAT_1),s=Q(tr.LTC_FLOAT_2)):(t=Q(tr.LTC_HALF_1),s=Q(tr.LTC_HALF_2));const{colorNode:n,light:r}=this,o=Ul(r);return{lightColor:n,lightPosition:o,halfWidth:this.halfWidth,halfHeight:this.halfHeight,ltc_1:t,ltc_2:s}}static setLTC(e){tr=e}}class Wl extends an{static get type(){return"SpotLightNode"}constructor(e=null){super(e),this.coneCosNode=$(0).setGroup(z),this.penumbraCosNode=$(0).setGroup(z),this.cutoffDistanceNode=$(0).setGroup(z),this.decayExponentNode=$(0).setGroup(z),this.colorNode=$(this.color).setGroup(z)}update(e){super.update(e);const{light:t}=this;this.coneCosNode.value=Math.cos(t.angle),this.penumbraCosNode.value=Math.cos(t.angle*(1-t.penumbra)),this.cutoffDistanceNode.value=t.distance,this.decayExponentNode.value=t.decay}getSpotAttenuation(e,t){const{coneCosNode:s,penumbraCosNode:n}=this;return Wt(s,n,t)}getLightCoord(e){const t=e.getNodeProperties(this);let s=t.projectionUV;return s===void 0&&(s=Ng(this.light,e.context.positionWorld),t.projectionUV=s),s}setupDirect(e){const{colorNode:t,cutoffDistanceNode:s,decayExponentNode:n,light:r}=this,o=this.getLightVector(e),a=o.normalize(),u=a.dot(Il(r)),l=this.getSpotAttenuation(e,u),c=o.length(),d=Gl({lightDistance:c,cutoffDistance:s,decayExponent:n});let p=t.mul(l).mul(d),f,m;return r.colorNode?(m=this.getLightCoord(e),f=r.colorNode(m)):r.map&&(m=this.getLightCoord(e),f=Q(r.map,m.xy).onRenderUpdate(()=>r.map)),f&&(p=m.mul(2).sub(1).abs().lessThan(1).all().select(p.mul(f),p)),{lightColor:p,lightDirection:a}}}class V0 extends Wl{static get type(){return"IESSpotLightNode"}getSpotAttenuation(e,t){const s=this.light.iesMap;let n=null;if(s&&s.isTexture===!0){const r=t.acos().mul(1/Math.PI);n=Q(s,M(r,0),0).r}else n=super.getSpotAttenuation(t);return n}}const O0=N(([i,e])=>{const t=i.abs().sub(e);return kt(Se(t,0)).add(rt(Se(t.x,t.y),0))});class G0 extends Wl{static get type(){return"ProjectorLightNode"}update(e){super.update(e);const t=this.light;if(this.penumbraCosNode.value=Math.min(Math.cos(t.angle*(1-t.penumbra)),.99999),t.aspect===null){let s=1;t.map!==null&&(s=t.map.width/t.map.height),t.shadow.aspect=s}else t.shadow.aspect=t.aspect}getSpotAttenuation(e){const t=g(0),s=this.penumbraCosNode,n=wo(this.light).mul(e.context.positionWorld||zt);return H(n.w.greaterThan(0),()=>{const r=n.xyz.div(n.w),o=O0(r.xy.sub(M(.5)),M(.5)),a=dt(-1,Z(1,zu(s)).sub(1));t.assign(Xu(o.mul(-2).mul(a)))}),t}}class k0 extends an{static get type(){return"AmbientLightNode"}constructor(e=null){super(e)}setup({context:e}){e.irradiance.addAssign(this.colorNode)}}class z0 extends an{static get type(){return"HemisphereLightNode"}constructor(e=null){super(e),this.lightPositionNode=Dl(e),this.lightDirectionNode=this.lightPositionNode.normalize(),this.groundColorNode=$(new jt).setGroup(z)}update(e){const{light:t}=this;super.update(e),this.lightPositionNode.object3d=t,this.groundColorNode.value.copy(t.groundColor).multiplyScalar(t.intensity)}setup(e){const{colorNode:t,groundColorNode:s,lightDirectionNode:n}=this,o=Cs.dot(n).mul(.5).add(.5),a=ne(s,t,o);e.context.irradiance.addAssign(a)}}class $0 extends an{static get type(){return"LightProbeNode"}constructor(e=null){super(e);const t=[];for(let s=0;s<9;s++)t.push(new j);this.lightProbe=qe(t)}update(e){const{light:t}=this;super.update(e);for(let s=0;s<9;s++)this.lightProbe.array[s].copy(t.sh.coefficients[s]).multiplyScalar(t.intensity)}setup(e){const t=Wg(Cs,this.lightProbe);e.context.irradiance.addAssign(t)}}class jg{parseFunction(){console.warn("Abstract function.")}}class Hl{constructor(e,t,s="",n=""){this.type=e,this.inputs=t,this.name=s,this.precision=n}getCode(){console.warn("Abstract function.")}}Hl.isNodeFunction=!0;const W0=/^\s*(highp|mediump|lowp)?\s*([a-z_0-9]+)\s*([a-z_0-9]+)?\s*\(([\s\S]*?)\)/i,H0=/[a-z_0-9]+/ig,ed="#pragma main",q0=i=>{i=i.trim();const e=i.indexOf(ed),t=e!==-1?i.slice(e+ed.length):i,s=t.match(W0);if(s!==null&&s.length===5){const n=s[4],r=[];let o=null;for(;(o=H0.exec(n))!==null;)r.push(o);const a=[];let u=0;for(;u<r.length;){const m=r[u][0]==="const";m===!0&&u++;let y=r[u][0];y==="in"||y==="out"||y==="inout"?u++:y="";const x=r[u++][0];let S=Number.parseInt(r[u][0]);Number.isNaN(S)===!1?u++:S=null;const R=r[u++][0];a.push(new $l(x,R,S,y,m))}const l=t.substring(s[0].length),c=s[3]!==void 0?s[3]:"",d=s[2],p=s[1]!==void 0?s[1]:"",f=e!==-1?i.slice(0,e):"";return{type:d,inputs:a,name:c,precision:p,inputsCode:n,blockCode:l,headerCode:f}}else throw new Error("FunctionNode: Function is not a GLSL code.")};class j0 extends Hl{constructor(e){const{type:t,inputs:s,name:n,precision:r,inputsCode:o,blockCode:a,headerCode:u}=q0(e);super(t,s,n,r),this.inputsCode=o,this.blockCode=a,this.headerCode=u}getCode(e=this.name){let t;const s=this.blockCode;if(s!==""){const{type:n,inputsCode:r,headerCode:o,precision:a}=this;let u=`${n} ${e} ( ${r.trim()} )`;a!==""&&(u=`${a} ${u}`),t=o+u+s}else t="";return t}}class X0 extends jg{parseFunction(e){return new j0(e)}}const td=new WeakMap,It=[],Is=[];class Y0 extends Ms{constructor(e,t){super(),this.renderer=e,this.backend=t,this.nodeFrame=new Jc,this.nodeBuilderCache=new Map,this.callHashCache=new Pt,this.groupsData=new Pt,this.cacheLib={}}updateGroup(e){const t=e.groupNode,s=t.name;if(s===Iu.name)return!0;if(s===z.name){const r=this.get(e),o=this.nodeFrame.renderId;return r.renderId!==o?(r.renderId=o,!0):!1}if(s===Vh.name){const r=this.get(e),o=this.nodeFrame.frameId;return r.frameId!==o?(r.frameId=o,!0):!1}It[0]=t,It[1]=e;let n=this.groupsData.get(It);return n===void 0&&this.groupsData.set(It,n={}),It.length=0,n.version!==t.version?(n.version=t.version,!0):!1}getForRenderCacheKey(e){return e.initialCacheKey}getForRender(e){const t=this.get(e);let s=t.nodeBuilderState;if(s===void 0){const{nodeBuilderCache:n}=this,r=this.getForRenderCacheKey(e);if(s=n.get(r),s===void 0){const o=this.backend.createNodeBuilder(e.object,this.renderer);o.scene=e.scene,o.material=e.material,o.camera=e.camera,o.context.material=e.material,o.lightsNode=e.lightsNode,o.environmentNode=this.getEnvironmentNode(e.scene),o.fogNode=this.getFogNode(e.scene),o.clippingContext=e.clippingContext,this.renderer.getOutputRenderTarget()&&this.renderer.getOutputRenderTarget().multiview&&o.enableMultiview(),o.build(),s=this._createNodeBuilderState(o),n.set(r,s)}s.usedTimes++,t.nodeBuilderState=s}return s}delete(e){if(e.isRenderObject){const t=this.get(e).nodeBuilderState;t.usedTimes--,t.usedTimes===0&&this.nodeBuilderCache.delete(this.getForRenderCacheKey(e))}return super.delete(e)}getForCompute(e){const t=this.get(e);let s=t.nodeBuilderState;if(s===void 0){const n=this.backend.createNodeBuilder(e,this.renderer);n.build(),s=this._createNodeBuilderState(n),t.nodeBuilderState=s}return s}_createNodeBuilderState(e){return new p0(e.vertexShader,e.fragmentShader,e.computeShader,e.getAttributesArray(),e.getBindings(),e.updateNodes,e.updateBeforeNodes,e.updateAfterNodes,e.observer,e.transforms)}getEnvironmentNode(e){this.updateEnvironment(e);let t=null;if(e.environmentNode&&e.environmentNode.isNode)t=e.environmentNode;else{const s=this.get(e);s.environmentNode&&(t=s.environmentNode)}return t}getBackgroundNode(e){this.updateBackground(e);let t=null;if(e.backgroundNode&&e.backgroundNode.isNode)t=e.backgroundNode;else{const s=this.get(e);s.backgroundNode&&(t=s.backgroundNode)}return t}getFogNode(e){return this.updateFog(e),e.fogNode||this.get(e).fogNode||null}getCacheKey(e,t){It[0]=e,It[1]=t;const s=this.renderer.info.calls,n=this.callHashCache.get(It)||{};if(n.callId!==s){const r=this.getEnvironmentNode(e),o=this.getFogNode(e);t&&Is.push(t.getCacheKey(!0)),r&&Is.push(r.getCacheKey()),o&&Is.push(o.getCacheKey()),Is.push(this.renderer.getOutputRenderTarget()&&this.renderer.getOutputRenderTarget().multiview?1:0),Is.push(this.renderer.shadowMap.enabled?1:0),n.callId=s,n.cacheKey=eo(Is),this.callHashCache.set(It,n),Is.length=0}return It.length=0,n.cacheKey}get isToneMappingState(){return!this.renderer.getRenderTarget()}updateBackground(e){const t=this.get(e),s=e.background;if(s){const n=e.backgroundBlurriness===0&&t.backgroundBlurriness>0||e.backgroundBlurriness>0&&t.backgroundBlurriness===0;if(t.background!==s||n){const r=this.getCacheNode("background",s,()=>{if(s.isCubeTexture===!0||s.mapping===gu||s.mapping===yu||s.mapping===fa){if(e.backgroundBlurriness>0||s.mapping===fa)return wl(s);{let o;return s.isCubeTexture===!0?o=Dn(s):o=Q(s),Bm(o)}}else{if(s.isTexture===!0)return Q(s,ns.flipY()).setUpdateMatrix(!0);s.isColor!==!0&&console.error("WebGPUNodes: Unsupported background configuration.",s)}},n);t.backgroundNode=r,t.background=s,t.backgroundBlurriness=e.backgroundBlurriness}}else t.backgroundNode&&(delete t.backgroundNode,delete t.background)}getCacheNode(e,t,s,n=!1){const r=this.cacheLib[e]||(this.cacheLib[e]=new WeakMap);let o=r.get(t);return(o===void 0||n)&&(o=s(),r.set(t,o)),o}updateFog(e){const t=this.get(e),s=e.fog;if(s){if(t.fog!==s){const n=this.getCacheNode("fog",s,()=>{if(s.isFogExp2){const r=fe("color","color",s).setGroup(z),o=fe("density","float",s).setGroup(z);return Br(r,Fl(o))}else if(s.isFog){const r=fe("color","color",s).setGroup(z),o=fe("near","float",s).setGroup(z),a=fe("far","float",s).setGroup(z);return Br(r,Pl(o,a))}else console.error("THREE.Renderer: Unsupported fog configuration.",s)});t.fogNode=n,t.fog=s}}else delete t.fogNode,delete t.fog}updateEnvironment(e){const t=this.get(e),s=e.environment;if(s){if(t.environment!==s){const n=this.getCacheNode("environment",s,()=>{if(s.isCubeTexture===!0)return Dn(s);if(s.isTexture===!0)return Q(s);console.error("Nodes: Unsupported environment configuration.",s)});t.environmentNode=n,t.environment=s}}else t.environmentNode&&(delete t.environmentNode,delete t.environment)}getNodeFrame(e=this.renderer,t=null,s=null,n=null,r=null){const o=this.nodeFrame;return o.renderer=e,o.scene=t,o.object=s,o.camera=n,o.material=r,o}getNodeFrameForRender(e){return this.getNodeFrame(e.renderer,e.scene,e.object,e.camera,e.material)}getOutputCacheKey(){const e=this.renderer;return e.toneMapping+","+e.currentColorSpace+","+e.xr.isPresenting}hasOutputChange(e){return td.get(e)!==this.getOutputCacheKey()}getOutputNode(e){const t=this.renderer,s=this.getOutputCacheKey(),n=e.isArrayTexture?lg(e,b(ns,ls("gl_ViewID_OVR"))).renderOutput(t.toneMapping,t.currentColorSpace):Q(e,ns).renderOutput(t.toneMapping,t.currentColorSpace);return td.set(e,s),n}updateBefore(e){const t=e.getNodeBuilderState();for(const s of t.updateBeforeNodes)this.getNodeFrameForRender(e).updateBeforeNode(s)}updateAfter(e){const t=e.getNodeBuilderState();for(const s of t.updateAfterNodes)this.getNodeFrameForRender(e).updateAfterNode(s)}updateForCompute(e){const t=this.getNodeFrame(),s=this.getForCompute(e);for(const n of s.updateNodes)t.updateNode(n)}updateForRender(e){const t=this.getNodeFrameForRender(e),s=e.getNodeBuilderState();for(const n of s.updateNodes)t.updateNode(n)}needsRefresh(e){const t=this.getNodeFrameForRender(e);return e.getMonitor().needsRefresh(e,t)}dispose(){super.dispose(),this.nodeFrame=new Jc,this.nodeBuilderCache=new Map,this.cacheLib={}}}const na=new lu;class Ki{constructor(e=null){this.version=0,this.clipIntersection=null,this.cacheKey="",this.shadowPass=!1,this.viewNormalMatrix=new Pr,this.clippingGroupContexts=new WeakMap,this.intersectionPlanes=[],this.unionPlanes=[],this.parentVersion=null,e!==null&&(this.viewNormalMatrix=e.viewNormalMatrix,this.clippingGroupContexts=e.clippingGroupContexts,this.shadowPass=e.shadowPass,this.viewMatrix=e.viewMatrix)}projectPlanes(e,t,s){const n=e.length;for(let r=0;r<n;r++){na.copy(e[r]).applyMatrix4(this.viewMatrix,this.viewNormalMatrix);const o=t[s+r],a=na.normal;o.x=-a.x,o.y=-a.y,o.z=-a.z,o.w=na.constant}}updateGlobal(e,t){this.shadowPass=e.overrideMaterial!==null&&e.overrideMaterial.isShadowPassMaterial,this.viewMatrix=t.matrixWorldInverse,this.viewNormalMatrix.getNormalMatrix(this.viewMatrix)}update(e,t){let s=!1;e.version!==this.parentVersion&&(this.intersectionPlanes=Array.from(e.intersectionPlanes),this.unionPlanes=Array.from(e.unionPlanes),this.parentVersion=e.version),this.clipIntersection!==t.clipIntersection&&(this.clipIntersection=t.clipIntersection,this.clipIntersection?this.unionPlanes.length=e.unionPlanes.length:this.intersectionPlanes.length=e.intersectionPlanes.length);const n=t.clippingPlanes,r=n.length;let o,a;if(this.clipIntersection?(o=this.intersectionPlanes,a=e.intersectionPlanes.length):(o=this.unionPlanes,a=e.unionPlanes.length),o.length!==a+r){o.length=a+r;for(let u=0;u<r;u++)o[a+u]=new _e;s=!0}this.projectPlanes(n,o,a),s&&(this.version++,this.cacheKey=`${this.intersectionPlanes.length}:${this.unionPlanes.length}`)}getGroupContext(e){if(this.shadowPass&&!e.clipShadows)return this;let t=this.clippingGroupContexts.get(e);return t===void 0&&(t=new Ki(this),this.clippingGroupContexts.set(e,t)),t.update(this,e),t}get unionClippingCount(){return this.unionPlanes.length}}class K0{constructor(e,t){this.bundleGroup=e,this.camera=t}}const sr=[];class Q0{constructor(){this.bundles=new Pt}get(e,t){const s=this.bundles;sr[0]=e,sr[1]=t;let n=s.get(sr);return n===void 0&&(n=new K0(e,t),s.set(sr,n)),sr.length=0,n}dispose(){this.bundles=new Pt}}class Xg{constructor(){this.lightNodes=new WeakMap,this.materialNodes=new Map,this.toneMappingNodes=new Map}fromMaterial(e){if(e.isNodeMaterial)return e;let t=null;const s=this.getMaterialNodeClass(e.type);if(s!==null){t=new s;for(const n in e)t[n]=e[n]}return t}addToneMapping(e,t){this.addType(e,t,this.toneMappingNodes)}getToneMappingFunction(e){return this.toneMappingNodes.get(e)||null}getMaterialNodeClass(e){return this.materialNodes.get(e)||null}addMaterial(e,t){this.addType(e,t,this.materialNodes)}getLightNodeClass(e){return this.lightNodes.get(e)||null}addLight(e,t){this.addClass(e,t,this.lightNodes)}addType(e,t,s){if(s.has(t)){console.warn(`Redefinition of node ${t}`);return}if(typeof e!="function")throw new Error(`Node class ${e.name} is not a class.`);if(typeof t=="function"||typeof t=="object")throw new Error(`Base class ${t} is not a class.`);s.set(t,e)}addClass(e,t,s){if(s.has(t)){console.warn(`Redefinition of node ${t.name}`);return}if(typeof e!="function")throw new Error(`Node class ${e.name} is not a class.`);if(typeof t!="function")throw new Error(`Base class ${t.name} is not a class.`);s.set(t,e)}}const Z0=new Vl,nr=[];class J0 extends Pt{constructor(){super()}createNode(e=[]){return new Vl().setLights(e)}getNode(e,t){if(e.isQuadMesh)return Z0;nr[0]=e,nr[1]=t;let s=this.get(nr);return s===void 0&&(s=this.createNode(),this.set(nr,s)),nr.length=0,s}}class ur extends As{constructor(e=1,t=1,s={}){super(e,t,s),this.isXRRenderTarget=!0,this._hasExternalTextures=!1,this._autoAllocateDepthBuffer=!0,this._isOpaqueFramebuffer=!1}copy(e){return super.copy(e),this._hasExternalTextures=e._hasExternalTextures,this._autoAllocateDepthBuffer=e._autoAllocateDepthBuffer,this._isOpaqueFramebuffer=e._isOpaqueFramebuffer,this}}const sd=new j,nd=new j;class ew extends pu{constructor(e,t=!1){super(),this.enabled=!1,this.isPresenting=!1,this.cameraAutoUpdate=!0,this._renderer=e,this._cameraL=new xr,this._cameraL.viewport=new _e,this._cameraR=new xr,this._cameraR.viewport=new _e,this._cameras=[this._cameraL,this._cameraR],this._cameraXR=new ky,this._currentDepthNear=null,this._currentDepthFar=null,this._controllers=[],this._controllerInputSources=[],this._xrRenderTarget=null,this._layers=[],this._sessionUsesLayers=!1,this._supportsGlBinding=typeof XRWebGLBinding<"u",this._frameBufferTargets=null,this._createXRLayer=ow.bind(this),this._gl=null,this._currentAnimationContext=null,this._currentAnimationLoop=null,this._currentPixelRatio=null,this._currentSize=new he,this._onSessionEvent=nw.bind(this),this._onSessionEnd=rw.bind(this),this._onInputSourcesChange=iw.bind(this),this._onAnimationFrame=aw.bind(this),this._referenceSpace=null,this._referenceSpaceType="local-floor",this._customReferenceSpace=null,this._framebufferScaleFactor=1,this._foveation=1,this._session=null,this._glBaseLayer=null,this._glBinding=null,this._glProjLayer=null,this._xrFrame=null,this._supportsLayers=this._supportsGlBinding&&"createProjectionLayer"in XRWebGLBinding.prototype,this._useMultiviewIfPossible=t,this._useMultiview=!1}getController(e){return this._getController(e).getTargetRaySpace()}getControllerGrip(e){return this._getController(e).getGripSpace()}getHand(e){return this._getController(e).getHandSpace()}getFoveation(){if(!(this._glProjLayer===null&&this._glBaseLayer===null))return this._foveation}setFoveation(e){this._foveation=e,this._glProjLayer!==null&&(this._glProjLayer.fixedFoveation=e),this._glBaseLayer!==null&&this._glBaseLayer.fixedFoveation!==void 0&&(this._glBaseLayer.fixedFoveation=e)}getFramebufferScaleFactor(){return this._framebufferScaleFactor}setFramebufferScaleFactor(e){this._framebufferScaleFactor=e,this.isPresenting===!0&&console.warn("THREE.XRManager: Cannot change framebuffer scale while presenting.")}getReferenceSpaceType(){return this._referenceSpaceType}setReferenceSpaceType(e){this._referenceSpaceType=e,this.isPresenting===!0&&console.warn("THREE.XRManager: Cannot change reference space type while presenting.")}getReferenceSpace(){return this._customReferenceSpace||this._referenceSpace}setReferenceSpace(e){this._customReferenceSpace=e}getCamera(){return this._cameraXR}getEnvironmentBlendMode(){if(this._session!==null)return this._session.environmentBlendMode}getBinding(){return this._glBinding===null&&this._supportsGlBinding&&(this._glBinding=new XRWebGLBinding(this._session,this._gl)),this._glBinding}getFrame(){return this._xrFrame}useMultiview(){return this._useMultiview}createQuadLayer(e,t,s,n,r,o,a,u={}){const l=new zy(e,t),c=new ur(r,o,{format:Ct,type:ct,depthTexture:new Mt(r,o,u.stencil?_s:Fe,void 0,void 0,void 0,void 0,void 0,void 0,u.stencil?Ts:xs),stencilBuffer:u.stencil,resolveDepthBuffer:!1,resolveStencilBuffer:!1});c._autoAllocateDepthBuffer=!0;const d=new ks({color:16777215,side:lr});d.map=c.texture,d.map.offset.y=1,d.map.repeat.y=-1;const p=new Ss(l,d);p.position.copy(s),p.quaternion.copy(n);const f={type:"quad",width:e,height:t,translation:s,quaternion:n,pixelwidth:r,pixelheight:o,plane:p,material:d,rendercall:a,renderTarget:c};if(this._layers.push(f),this._session!==null){f.plane.material=new ks({color:16777215,side:lr}),f.plane.material.blending=cr,f.plane.material.blendEquation=es,f.plane.material.blendSrc=hs,f.plane.material.blendDst=hs,f.xrlayer=this._createXRLayer(f);const m=this._session.renderState.layers;m.unshift(f.xrlayer),this._session.updateRenderState({layers:m})}else c.isXRRenderTarget=!1;return p}createCylinderLayer(e,t,s,n,r,o,a,u,l={}){const c=new $y(e,e,e*t/s,64,64,!0,Math.PI-t/2,t),d=new ur(o,a,{format:Ct,type:ct,depthTexture:new Mt(o,a,l.stencil?_s:Fe,void 0,void 0,void 0,void 0,void 0,void 0,l.stencil?Ts:xs),stencilBuffer:l.stencil,resolveDepthBuffer:!1,resolveStencilBuffer:!1});d._autoAllocateDepthBuffer=!0;const p=new ks({color:16777215,side:nt});p.map=d.texture,p.map.offset.y=1,p.map.repeat.y=-1;const f=new Ss(c,p);f.position.copy(n),f.quaternion.copy(r);const m={type:"cylinder",radius:e,centralAngle:t,aspectratio:s,translation:n,quaternion:r,pixelwidth:o,pixelheight:a,plane:f,material:p,rendercall:u,renderTarget:d};if(this._layers.push(m),this._session!==null){m.plane.material=new ks({color:16777215,side:nt}),m.plane.material.blending=cr,m.plane.material.blendEquation=es,m.plane.material.blendSrc=hs,m.plane.material.blendDst=hs,m.xrlayer=this._createXRLayer(m);const y=this._session.renderState.layers;y.unshift(m.xrlayer),this._session.updateRenderState({layers:y})}else d.isXRRenderTarget=!1;return f}renderLayers(){const e=new j,t=new pa,s=this._renderer,n=this.isPresenting,r=s.getOutputRenderTarget(),o=s._frameBufferTarget;this.isPresenting=!1;const a=new he;s.getSize(a);const u=s._quad;for(const l of this._layers)if(l.renderTarget.isXRRenderTarget=this._session!==null,l.renderTarget._hasExternalTextures=l.renderTarget.isXRRenderTarget,l.renderTarget.isXRRenderTarget&&this._sessionUsesLayers){l.xrlayer.transform=new XRRigidTransform(l.plane.getWorldPosition(e),l.plane.getWorldQuaternion(t));const c=this._glBinding.getSubImage(l.xrlayer,this._xrFrame);s.backend.setXRRenderTargetTextures(l.renderTarget,c.colorTexture,void 0),s._setXRLayerSize(l.renderTarget.width,l.renderTarget.height),s.setOutputRenderTarget(l.renderTarget),s.setRenderTarget(null),s._frameBufferTarget=null,this._frameBufferTargets||(this._frameBufferTargets=new WeakMap);const{frameBufferTarget:d,quad:p}=this._frameBufferTargets.get(l.renderTarget)||{frameBufferTarget:null,quad:null};d?(s._frameBufferTarget=d,s._quad=p):(s._quad=new Ro(new we),this._frameBufferTargets.set(l.renderTarget,{frameBufferTarget:s._getFrameBufferTarget(),quad:s._quad})),l.rendercall(),s._frameBufferTarget=null}else s.setRenderTarget(l.renderTarget),l.rendercall();s.setRenderTarget(null),s.setOutputRenderTarget(r),s._frameBufferTarget=o,s._setXRLayerSize(a.x,a.y),s._quad=u,this.isPresenting=n}getSession(){return this._session}async setSession(e){const t=this._renderer,s=t.backend;this._gl=t.getContext();const n=this._gl,r=n.getContextAttributes();if(this._session=e,e!==null){if(s.isWebGPUBackend===!0)throw new Error('THREE.XRManager: XR is currently not supported with a WebGPU backend. Use WebGL by passing "{ forceWebGL: true }" to the constructor of the renderer.');if(e.addEventListener("select",this._onSessionEvent),e.addEventListener("selectstart",this._onSessionEvent),e.addEventListener("selectend",this._onSessionEvent),e.addEventListener("squeeze",this._onSessionEvent),e.addEventListener("squeezestart",this._onSessionEvent),e.addEventListener("squeezeend",this._onSessionEvent),e.addEventListener("end",this._onSessionEnd),e.addEventListener("inputsourceschange",this._onInputSourcesChange),await s.makeXRCompatible(),this._currentPixelRatio=t.getPixelRatio(),t.getSize(this._currentSize),this._currentAnimationContext=t._animation.getContext(),this._currentAnimationLoop=t._animation.getAnimationLoop(),t._animation.stop(),this._supportsLayers===!0){let o=null,a=null,u=null;t.depth&&(u=t.stencil?n.DEPTH24_STENCIL8:n.DEPTH_COMPONENT24,o=t.stencil?Ts:xs,a=t.stencil?_s:Fe);const l={colorFormat:n.RGBA8,depthFormat:u,scaleFactor:this._framebufferScaleFactor,clearOnAccess:!1};this._useMultiviewIfPossible&&t.hasFeature("OVR_multiview2")&&(l.textureType="texture-array",this._useMultiview=!0),this._glBinding=this.getBinding();const c=this._glBinding.createProjectionLayer(l),d=[c];this._glProjLayer=c,t.setPixelRatio(1),t._setXRLayerSize(c.textureWidth,c.textureHeight);const p=this._useMultiview?2:1,f=new Mt(c.textureWidth,c.textureHeight,a,void 0,void 0,void 0,void 0,void 0,void 0,o,p);if(this._xrRenderTarget=new ur(c.textureWidth,c.textureHeight,{format:Ct,type:ct,colorSpace:t.outputColorSpace,depthTexture:f,stencilBuffer:t.stencil,samples:r.antialias?4:0,resolveDepthBuffer:c.ignoreDepthValues===!1,resolveStencilBuffer:c.ignoreDepthValues===!1,depth:this._useMultiview?2:1,multiview:this._useMultiview}),this._xrRenderTarget._hasExternalTextures=!0,this._xrRenderTarget.depth=this._useMultiview?2:1,this._sessionUsesLayers=e.enabledFeatures.includes("layers"),this._referenceSpace=await e.requestReferenceSpace(this.getReferenceSpaceType()),this._sessionUsesLayers)for(const m of this._layers)m.plane.material=new ks({color:16777215,side:m.type==="cylinder"?nt:lr}),m.plane.material.blending=cr,m.plane.material.blendEquation=es,m.plane.material.blendSrc=hs,m.plane.material.blendDst=hs,m.xrlayer=this._createXRLayer(m),d.unshift(m.xrlayer);e.updateRenderState({layers:d})}else{const o={antialias:t.samples>0,alpha:!0,depth:t.depth,stencil:t.stencil,framebufferScaleFactor:this.getFramebufferScaleFactor()},a=new XRWebGLLayer(e,n,o);this._glBaseLayer=a,e.updateRenderState({baseLayer:a}),t.setPixelRatio(1),t._setXRLayerSize(a.framebufferWidth,a.framebufferHeight),this._xrRenderTarget=new ur(a.framebufferWidth,a.framebufferHeight,{format:Ct,type:ct,colorSpace:t.outputColorSpace,stencilBuffer:t.stencil,resolveDepthBuffer:a.ignoreDepthValues===!1,resolveStencilBuffer:a.ignoreDepthValues===!1}),this._xrRenderTarget._isOpaqueFramebuffer=!0,this._referenceSpace=await e.requestReferenceSpace(this.getReferenceSpaceType())}this.setFoveation(this.getFoveation()),t._animation.setAnimationLoop(this._onAnimationFrame),t._animation.setContext(e),t._animation.start(),this.isPresenting=!0,this.dispatchEvent({type:"sessionstart"})}}updateCamera(e){const t=this._session;if(t===null)return;const s=e.near,n=e.far,r=this._cameraXR,o=this._cameraL,a=this._cameraR;r.near=a.near=o.near=s,r.far=a.far=o.far=n,r.isMultiViewCamera=this._useMultiview,(this._currentDepthNear!==r.near||this._currentDepthFar!==r.far)&&(t.updateRenderState({depthNear:r.near,depthFar:r.far}),this._currentDepthNear=r.near,this._currentDepthFar=r.far),r.layers.mask=e.layers.mask|6,o.layers.mask=r.layers.mask&3,a.layers.mask=r.layers.mask&5;const u=e.parent,l=r.cameras;rd(r,u);for(let c=0;c<l.length;c++)rd(l[c],u);l.length===2?tw(r,o,a):r.projectionMatrix.copy(o.projectionMatrix),sw(e,r,u)}_getController(e){let t=this._controllers[e];return t===void 0&&(t=new Wy,this._controllers[e]=t),t}}function tw(i,e,t){sd.setFromMatrixPosition(e.matrixWorld),nd.setFromMatrixPosition(t.matrixWorld);const s=sd.distanceTo(nd),n=e.projectionMatrix.elements,r=t.projectionMatrix.elements,o=n[14]/(n[10]-1),a=n[14]/(n[10]+1),u=(n[9]+1)/n[5],l=(n[9]-1)/n[5],c=(n[8]-1)/n[0],d=(r[8]+1)/r[0],p=o*c,f=o*d,m=s/(-c+d),y=m*-c;if(e.matrixWorld.decompose(i.position,i.quaternion,i.scale),i.translateX(y),i.translateZ(m),i.matrixWorld.compose(i.position,i.quaternion,i.scale),i.matrixWorldInverse.copy(i.matrixWorld).invert(),n[10]===-1)i.projectionMatrix.copy(e.projectionMatrix),i.projectionMatrixInverse.copy(e.projectionMatrixInverse);else{const x=o+m,S=a+m,R=p-y,C=f+(s-y),D=u*a/S*x,P=l*a/S*x;i.projectionMatrix.makePerspective(R,C,D,P,x,S),i.projectionMatrixInverse.copy(i.projectionMatrix).invert()}}function rd(i,e){e===null?i.matrixWorld.copy(i.matrix):i.matrixWorld.multiplyMatrices(e.matrixWorld,i.matrix),i.matrixWorldInverse.copy(i.matrixWorld).invert()}function sw(i,e,t){t===null?i.matrix.copy(e.matrixWorld):(i.matrix.copy(t.matrixWorld),i.matrix.invert(),i.matrix.multiply(e.matrixWorld)),i.matrix.decompose(i.position,i.quaternion,i.scale),i.updateMatrixWorld(!0),i.projectionMatrix.copy(e.projectionMatrix),i.projectionMatrixInverse.copy(e.projectionMatrixInverse),i.isPerspectiveCamera&&(i.fov=p_*2*Math.atan(1/i.projectionMatrix.elements[5]),i.zoom=1)}function nw(i){const e=this._controllerInputSources.indexOf(i.inputSource);if(e===-1)return;const t=this._controllers[e];if(t!==void 0){const s=this.getReferenceSpace();t.update(i.inputSource,i.frame,s),t.dispatchEvent({type:i.type,data:i.inputSource})}}function rw(){const i=this._session,e=this._renderer;i.removeEventListener("select",this._onSessionEvent),i.removeEventListener("selectstart",this._onSessionEvent),i.removeEventListener("selectend",this._onSessionEvent),i.removeEventListener("squeeze",this._onSessionEvent),i.removeEventListener("squeezestart",this._onSessionEvent),i.removeEventListener("squeezeend",this._onSessionEvent),i.removeEventListener("end",this._onSessionEnd),i.removeEventListener("inputsourceschange",this._onInputSourcesChange);for(let t=0;t<this._controllers.length;t++){const s=this._controllerInputSources[t];s!==null&&(this._controllerInputSources[t]=null,this._controllers[t].disconnect(s))}if(this._currentDepthNear=null,this._currentDepthFar=null,e._resetXRState(),this._session=null,this._xrRenderTarget=null,this._sessionUsesLayers===!0)for(const t of this._layers)t.renderTarget=new ur(t.pixelwidth,t.pixelheight,{format:Ct,type:ct,depthTexture:new Mt(t.pixelwidth,t.pixelheight,t.stencilBuffer?_s:Fe,void 0,void 0,void 0,void 0,void 0,void 0,t.stencilBuffer?Ts:xs),stencilBuffer:t.stencilBuffer,resolveDepthBuffer:!1,resolveStencilBuffer:!1}),t.renderTarget.isXRRenderTarget=!1,t.plane.material=t.material,t.material.map=t.renderTarget.texture,t.material.map.offset.y=1,t.material.map.repeat.y=-1,delete t.xrlayer;this.isPresenting=!1,this._useMultiview=!1,e._animation.stop(),e._animation.setAnimationLoop(this._currentAnimationLoop),e._animation.setContext(this._currentAnimationContext),e._animation.start(),e.setPixelRatio(this._currentPixelRatio),e.setSize(this._currentSize.width,this._currentSize.height,!1),this.dispatchEvent({type:"sessionend"})}function iw(i){const e=this._controllers,t=this._controllerInputSources;for(let s=0;s<i.removed.length;s++){const n=i.removed[s],r=t.indexOf(n);r>=0&&(t[r]=null,e[r].disconnect(n))}for(let s=0;s<i.added.length;s++){const n=i.added[s];let r=t.indexOf(n);if(r===-1){for(let a=0;a<e.length;a++)if(a>=t.length){t.push(n),r=a;break}else if(t[a]===null){t[a]=n,r=a;break}if(r===-1)break}const o=e[r];o&&o.connect(n)}}function ow(i){return i.type==="quad"?this._glBinding.createQuadLayer({transform:new XRRigidTransform(i.translation,i.quaternion),width:i.width/2,height:i.height/2,space:this._referenceSpace,viewPixelWidth:i.pixelwidth,viewPixelHeight:i.pixelheight,clearOnAccess:!1}):this._glBinding.createCylinderLayer({transform:new XRRigidTransform(i.translation,i.quaternion),radius:i.radius,centralAngle:i.centralAngle,aspectRatio:i.aspectRatio,space:this._referenceSpace,viewPixelWidth:i.pixelwidth,viewPixelHeight:i.pixelheight,clearOnAccess:!1})}function aw(i,e){if(e===void 0)return;const t=this._cameraXR,s=this._renderer,n=s.backend,r=this._glBaseLayer,o=this.getReferenceSpace(),a=e.getViewerPose(o);if(this._xrFrame=e,a!==null){const u=a.views;this._glBaseLayer!==null&&n.setXRTarget(r.framebuffer);let l=!1;u.length!==t.cameras.length&&(t.cameras.length=0,l=!0);for(let c=0;c<u.length;c++){const d=u[c];let p;if(this._supportsLayers===!0){const m=this._glBinding.getViewSubImage(this._glProjLayer,d);p=m.viewport,c===0&&n.setXRRenderTargetTextures(this._xrRenderTarget,m.colorTexture,this._glProjLayer.ignoreDepthValues&&!this._useMultiview?void 0:m.depthStencilTexture)}else p=r.getViewport(d);let f=this._cameras[c];f===void 0&&(f=new xr,f.layers.enable(c),f.viewport=new _e,this._cameras[c]=f),f.matrix.fromArray(d.transform.matrix),f.matrix.decompose(f.position,f.quaternion,f.scale),f.projectionMatrix.fromArray(d.projectionMatrix),f.projectionMatrixInverse.copy(f.projectionMatrix).invert(),f.viewport.set(p.x,p.y,p.width,p.height),c===0&&(t.matrix.copy(f.matrix),t.matrix.decompose(t.position,t.quaternion,t.scale)),l===!0&&t.cameras.push(f)}s.setOutputRenderTarget(this._xrRenderTarget)}for(let u=0;u<this._controllers.length;u++){const l=this._controllerInputSources[u],c=this._controllers[u];l!==null&&c!==void 0&&c.update(l,e,o)}this._currentAnimationLoop&&this._currentAnimationLoop(i,e),e.detectedPlanes&&this.dispatchEvent({type:"planesdetected",data:e}),this._xrFrame=null}const id=new Qi,fn=new he,ra=new _e,ia=new My,oa=new Cy,ci=new Ge,Qt=new _e;class uw{constructor(e,t={}){this.isRenderer=!0;const{logarithmicDepthBuffer:s=!1,alpha:n=!0,depth:r=!0,stencil:o=!1,antialias:a=!1,samples:u=0,getFallback:l=null,colorBufferType:c=et,multiview:d=!1}=t;this.domElement=e.getDomElement(),this.backend=e,this.samples=u||a===!0?4:0,this.autoClear=!0,this.autoClearColor=!0,this.autoClearDepth=!0,this.autoClearStencil=!0,this.alpha=n,this.logarithmicDepthBuffer=s,this.outputColorSpace=Pd,this.toneMapping=wn,this.toneMappingExposure=1,this.sortObjects=!0,this.depth=r,this.stencil=o,this.info=new mS,this.overrideNodes={modelViewMatrix:null,modelNormalViewMatrix:null},this.library=new Xg,this.lighting=new J0,this._getFallback=l,this._pixelRatio=1,this._width=this.domElement.width,this._height=this.domElement.height,this._viewport=new _e(0,0,this._width,this._height),this._scissor=new _e(0,0,this._width,this._height),this._scissorTest=!1,this._attributes=null,this._geometries=null,this._nodes=null,this._animation=null,this._bindings=null,this._objects=null,this._pipelines=null,this._bundles=null,this._renderLists=null,this._renderContexts=null,this._textures=null,this._background=null,this._quad=new Ro(new we),this._quad.material.name="Renderer_output",this._currentRenderContext=null,this._opaqueSort=null,this._transparentSort=null,this._frameBufferTarget=null;const p=this.alpha===!0?0:1;this._clearColor=new Cl(0,0,0,p),this._clearDepth=1,this._clearStencil=0,this._renderTarget=null,this._activeCubeFace=0,this._activeMipmapLevel=0,this._outputRenderTarget=null,this._mrt=null,this._renderObjectFunction=null,this._currentRenderObjectFunction=null,this._currentRenderBundle=null,this._handleObjectFunction=this._renderObjectDirect,this._isDeviceLost=!1,this.onDeviceLost=this._onDeviceLost,this._colorBufferType=c,this._initialized=!1,this._initPromise=null,this._compilationPromises=null,this.transparent=!0,this.opaque=!0,this.shadowMap={enabled:!1,type:wy},this.xr=new ew(this,d),this.debug={checkShaderErrors:!0,onShaderError:null,getShaderAsync:async(f,m,y)=>{await this.compileAsync(f,m);const x=this._renderLists.get(f,m),S=this._renderContexts.get(f,m,this._renderTarget),R=f.overrideMaterial||y.material,C=this._objects.get(y,R,f,m,x.lightsNode,S,S.clippingContext),{fragmentShader:D,vertexShader:P}=C.getNodeBuilderState();return{fragmentShader:D,vertexShader:P}}}}async init(){if(this._initialized)throw new Error("Renderer: Backend has already been initialized.");return this._initPromise!==null?this._initPromise:(this._initPromise=new Promise(async(e,t)=>{let s=this.backend;try{await s.init(this)}catch(n){if(this._getFallback!==null)try{this.backend=s=this._getFallback(n),await s.init(this)}catch(r){t(r);return}else{t(n);return}}this._nodes=new Y0(this,s),this._animation=new oS(this._nodes,this.info),this._attributes=new pS(s),this._background=new d0(this,this._nodes),this._geometries=new fS(this._attributes,this.info),this._textures=new MS(this,s,this.info),this._pipelines=new TS(s,this._nodes),this._bindings=new xS(s,this._nodes,this._textures,this._attributes,this._pipelines,this.info),this._objects=new cS(this,this._nodes,this._geometries,this._pipelines,this._bindings,this.info),this._renderLists=new SS(this.lighting),this._bundles=new Q0,this._renderContexts=new wS,this._animation.start(),this._initialized=!0,e(this)}),this._initPromise)}get coordinateSystem(){return this.backend.coordinateSystem}async compileAsync(e,t,s=null){if(this._isDeviceLost===!0)return;this._initialized===!1&&await this.init();const n=this._nodes.nodeFrame,r=n.renderId,o=this._currentRenderContext,a=this._currentRenderObjectFunction,u=this._compilationPromises,l=e.isScene===!0?e:id;s===null&&(s=e);const c=this._renderTarget,d=this._renderContexts.get(s,t,c),p=this._activeMipmapLevel,f=[];this._currentRenderContext=d,this._currentRenderObjectFunction=this.renderObject,this._handleObjectFunction=this._createObjectPipeline,this._compilationPromises=f,n.renderId++,n.update(),d.depth=this.depth,d.stencil=this.stencil,d.clippingContext||(d.clippingContext=new Ki),d.clippingContext.updateGlobal(l,t),l.onBeforeRender(this,e,t,c);const m=this._renderLists.get(e,t);if(m.begin(),this._projectObject(e,t,0,m,d.clippingContext),s!==e&&s.traverseVisible(function(C){C.isLight&&C.layers.test(t.layers)&&m.pushLight(C)}),m.finish(),c!==null){this._textures.updateRenderTarget(c,p);const C=this._textures.get(c);d.textures=C.textures,d.depthTexture=C.depthTexture}else d.textures=null,d.depthTexture=null;this._background.update(l,m,d);const y=m.opaque,x=m.transparent,S=m.transparentDoublePass,R=m.lightsNode;this.opaque===!0&&y.length>0&&this._renderObjects(y,t,l,R),this.transparent===!0&&x.length>0&&this._renderTransparents(x,S,t,l,R),n.renderId=r,this._currentRenderContext=o,this._currentRenderObjectFunction=a,this._compilationPromises=u,this._handleObjectFunction=this._renderObjectDirect,await Promise.all(f)}async renderAsync(e,t){this._initialized===!1&&await this.init(),this._renderScene(e,t)}async waitForGPU(){await this.backend.waitForGPU()}set highPrecision(e){e===!0?(this.overrideNodes.modelViewMatrix=Ha,this.overrideNodes.modelNormalViewMatrix=qa):this.highPrecision&&(this.overrideNodes.modelViewMatrix=null,this.overrideNodes.modelNormalViewMatrix=null)}get highPrecision(){return this.overrideNodes.modelViewMatrix===Ha&&this.overrideNodes.modelNormalViewMatrix===qa}setMRT(e){return this._mrt=e,this}getMRT(){return this._mrt}getColorBufferType(){return this._colorBufferType}_onDeviceLost(e){let t=`THREE.WebGPURenderer: ${e.api} Device Lost:

Message: ${e.message}`;e.reason&&(t+=`
Reason: ${e.reason}`),console.error(t),this._isDeviceLost=!0}_renderBundle(e,t,s){const{bundleGroup:n,camera:r,renderList:o}=e,a=this._currentRenderContext,u=this._bundles.get(n,r),l=this.backend.get(u);l.renderContexts===void 0&&(l.renderContexts=new Set);const c=n.version!==l.version,d=l.renderContexts.has(a)===!1||c;if(l.renderContexts.add(a),d){this.backend.beginBundle(a),(l.renderObjects===void 0||c)&&(l.renderObjects=[]),this._currentRenderBundle=u;const{transparentDoublePass:p,transparent:f,opaque:m}=o;this.opaque===!0&&m.length>0&&this._renderObjects(m,r,t,s),this.transparent===!0&&f.length>0&&this._renderTransparents(f,p,r,t,s),this._currentRenderBundle=null,this.backend.finishBundle(a,u),l.version=n.version}else{const{renderObjects:p}=l;for(let f=0,m=p.length;f<m;f++){const y=p[f];this._nodes.needsRefresh(y)&&(this._nodes.updateBefore(y),this._nodes.updateForRender(y),this._bindings.updateForRender(y),this._nodes.updateAfter(y))}}this.backend.addBundle(a,u)}render(e,t){if(this._initialized===!1)return console.warn("THREE.Renderer: .render() called before the backend is initialized. Try using .renderAsync() instead."),this.renderAsync(e,t);this._renderScene(e,t)}_getFrameBufferTarget(){const{currentToneMapping:e,currentColorSpace:t}=this,s=e!==wn,n=t!==Re.workingColorSpace;if(s===!1&&n===!1)return null;const{width:r,height:o}=this.getDrawingBufferSize(fn),{depth:a,stencil:u}=this;let l=this._frameBufferTarget;l===null&&(l=new As(r,o,{depthBuffer:a,stencilBuffer:u,type:this._colorBufferType,format:Ct,colorSpace:Re.workingColorSpace,generateMipmaps:!1,minFilter:rs,magFilter:rs,samples:this.samples}),l.isPostProcessingRenderTarget=!0,this._frameBufferTarget=l);const c=this.getOutputRenderTarget();return l.depthBuffer=a,l.stencilBuffer=u,c!==null?l.setSize(c.width,c.height,c.depth):l.setSize(r,o,1),l.viewport.copy(this._viewport),l.scissor.copy(this._scissor),l.viewport.multiplyScalar(this._pixelRatio),l.scissor.multiplyScalar(this._pixelRatio),l.scissorTest=this._scissorTest,l.multiview=c!==null?c.multiview:!1,l.resolveDepthBuffer=c!==null?c.resolveDepthBuffer:!0,l._autoAllocateDepthBuffer=c!==null?c._autoAllocateDepthBuffer:!1,l}_renderScene(e,t,s=!0){if(this._isDeviceLost===!0)return;const n=s?this._getFrameBufferTarget():null,r=this._nodes.nodeFrame,o=r.renderId,a=this._currentRenderContext,u=this._currentRenderObjectFunction,l=e.isScene===!0?e:id,c=this._renderTarget||this._outputRenderTarget,d=this._activeCubeFace,p=this._activeMipmapLevel;let f;n!==null?(f=n,this.setRenderTarget(f)):f=c;const m=this._renderContexts.get(e,t,f);this._currentRenderContext=m,this._currentRenderObjectFunction=this._renderObjectFunction||this.renderObject,this.info.calls++,this.info.render.calls++,this.info.render.frameCalls++,r.renderId=this.info.calls;const y=this.coordinateSystem,x=this.xr;if(t.coordinateSystem!==y&&x.isPresenting===!1&&(t.coordinateSystem=y,t.updateProjectionMatrix(),t.isArrayCamera))for(const de of t.cameras)de.coordinateSystem=y,de.updateProjectionMatrix();e.matrixWorldAutoUpdate===!0&&e.updateMatrixWorld(),t.parent===null&&t.matrixWorldAutoUpdate===!0&&t.updateMatrixWorld(),x.enabled===!0&&x.isPresenting===!0&&(x.cameraAutoUpdate===!0&&x.updateCamera(t),t=x.getCamera());let S=this._viewport,R=this._scissor,C=this._pixelRatio;f!==null&&(S=f.viewport,R=f.scissor,C=1),this.getDrawingBufferSize(fn),ra.set(0,0,fn.width,fn.height);const D=S.minDepth===void 0?0:S.minDepth,P=S.maxDepth===void 0?1:S.maxDepth;m.viewportValue.copy(S).multiplyScalar(C).floor(),m.viewportValue.width>>=p,m.viewportValue.height>>=p,m.viewportValue.minDepth=D,m.viewportValue.maxDepth=P,m.viewport=m.viewportValue.equals(ra)===!1,m.scissorValue.copy(R).multiplyScalar(C).floor(),m.scissor=this._scissorTest&&m.scissorValue.equals(ra)===!1,m.scissorValue.width>>=p,m.scissorValue.height>>=p,m.clippingContext||(m.clippingContext=new Ki),m.clippingContext.updateGlobal(l,t),l.onBeforeRender(this,e,t,f);const F=t.isArrayCamera?oa:ia;t.isArrayCamera||(ci.multiplyMatrices(t.projectionMatrix,t.matrixWorldInverse),F.setFromProjectionMatrix(ci,t.coordinateSystem,t.reversedDepth));const B=this._renderLists.get(e,t);if(B.begin(),this._projectObject(e,t,0,B,m.clippingContext),B.finish(),this.sortObjects===!0&&B.sort(this._opaqueSort,this._transparentSort),f!==null){this._textures.updateRenderTarget(f,p);const de=this._textures.get(f);m.textures=de.textures,m.depthTexture=de.depthTexture,m.width=de.width,m.height=de.height,m.renderTarget=f,m.depth=f.depthBuffer,m.stencil=f.stencilBuffer}else m.textures=null,m.depthTexture=null,m.width=fn.width,m.height=fn.height,m.depth=this.depth,m.stencil=this.stencil;m.width>>=p,m.height>>=p,m.activeCubeFace=d,m.activeMipmapLevel=p,m.occlusionQueryCount=B.occlusionQueryCount,m.scissorValue.max(Qt.set(0,0,0,0)),m.scissorValue.x+m.scissorValue.width>m.width&&(m.scissorValue.width=Math.max(m.width-m.scissorValue.x,0)),m.scissorValue.y+m.scissorValue.height>m.height&&(m.scissorValue.height=Math.max(m.height-m.scissorValue.y,0)),this._background.update(l,B,m),m.camera=t,this.backend.beginRender(m);const{bundles:V,lightsNode:G,transparentDoublePass:te,transparent:se,opaque:ye}=B;return V.length>0&&this._renderBundles(V,l,G),this.opaque===!0&&ye.length>0&&this._renderObjects(ye,t,l,G),this.transparent===!0&&se.length>0&&this._renderTransparents(se,te,t,l,G),this.backend.finishRender(m),r.renderId=o,this._currentRenderContext=a,this._currentRenderObjectFunction=u,n!==null&&(this.setRenderTarget(c,d,p),this._renderOutput(f)),l.onAfterRender(this,e,t,f),m}_setXRLayerSize(e,t){this._width=e,this._height=t,this.setViewport(0,0,e,t)}_renderOutput(e){const t=this._quad;this._nodes.hasOutputChange(e.texture)&&(t.material.fragmentNode=this._nodes.getOutputNode(e.texture),t.material.needsUpdate=!0);const s=this.autoClear,n=this.xr.enabled;this.autoClear=!1,this.xr.enabled=!1,this._renderScene(t,t.camera,!1),this.autoClear=s,this.xr.enabled=n}getMaxAnisotropy(){return this.backend.getMaxAnisotropy()}getActiveCubeFace(){return this._activeCubeFace}getActiveMipmapLevel(){return this._activeMipmapLevel}async setAnimationLoop(e){this._initialized===!1&&await this.init(),this._animation.setAnimationLoop(e)}async getArrayBufferAsync(e){return await this.backend.getArrayBufferAsync(e)}getContext(){return this.backend.getContext()}getPixelRatio(){return this._pixelRatio}getDrawingBufferSize(e){return e.set(this._width*this._pixelRatio,this._height*this._pixelRatio).floor()}getSize(e){return e.set(this._width,this._height)}setPixelRatio(e=1){this._pixelRatio!==e&&(this._pixelRatio=e,this.setSize(this._width,this._height,!1))}setDrawingBufferSize(e,t,s){this.xr&&this.xr.isPresenting||(this._width=e,this._height=t,this._pixelRatio=s,this.domElement.width=Math.floor(e*s),this.domElement.height=Math.floor(t*s),this.setViewport(0,0,e,t),this._initialized&&this.backend.updateSize())}setSize(e,t,s=!0){this.xr&&this.xr.isPresenting||(this._width=e,this._height=t,this.domElement.width=Math.floor(e*this._pixelRatio),this.domElement.height=Math.floor(t*this._pixelRatio),s===!0&&(this.domElement.style.width=e+"px",this.domElement.style.height=t+"px"),this.setViewport(0,0,e,t),this._initialized&&this.backend.updateSize())}setOpaqueSort(e){this._opaqueSort=e}setTransparentSort(e){this._transparentSort=e}getScissor(e){const t=this._scissor;return e.x=t.x,e.y=t.y,e.width=t.width,e.height=t.height,e}setScissor(e,t,s,n){const r=this._scissor;e.isVector4?r.copy(e):r.set(e,t,s,n)}getScissorTest(){return this._scissorTest}setScissorTest(e){this._scissorTest=e,this.backend.setScissorTest(e)}getViewport(e){return e.copy(this._viewport)}setViewport(e,t,s,n,r=0,o=1){const a=this._viewport;e.isVector4?a.copy(e):a.set(e,t,s,n),a.minDepth=r,a.maxDepth=o}getClearColor(e){return e.copy(this._clearColor)}setClearColor(e,t=1){this._clearColor.set(e),this._clearColor.a=t}getClearAlpha(){return this._clearColor.a}setClearAlpha(e){this._clearColor.a=e}getClearDepth(){return this._clearDepth}setClearDepth(e){this._clearDepth=e}getClearStencil(){return this._clearStencil}setClearStencil(e){this._clearStencil=e}isOccluded(e){const t=this._currentRenderContext;return t&&this.backend.isOccluded(t,e)}clear(e=!0,t=!0,s=!0){if(this._initialized===!1)return console.warn("THREE.Renderer: .clear() called before the backend is initialized. Try using .clearAsync() instead."),this.clearAsync(e,t,s);const n=this._renderTarget||this._getFrameBufferTarget();let r=null;if(n!==null){this._textures.updateRenderTarget(n);const o=this._textures.get(n);r=this._renderContexts.getForClear(n),r.textures=o.textures,r.depthTexture=o.depthTexture,r.width=o.width,r.height=o.height,r.renderTarget=n,r.depth=n.depthBuffer,r.stencil=n.stencilBuffer,r.clearColorValue=this.backend.getClearColor(),r.activeCubeFace=this.getActiveCubeFace(),r.activeMipmapLevel=this.getActiveMipmapLevel()}this.backend.clear(e,t,s,r),n!==null&&this._renderTarget===null&&this._renderOutput(n)}clearColor(){return this.clear(!0,!1,!1)}clearDepth(){return this.clear(!1,!0,!1)}clearStencil(){return this.clear(!1,!1,!0)}async clearAsync(e=!0,t=!0,s=!0){this._initialized===!1&&await this.init(),this.clear(e,t,s)}async clearColorAsync(){this.clearAsync(!0,!1,!1)}async clearDepthAsync(){this.clearAsync(!1,!0,!1)}async clearStencilAsync(){this.clearAsync(!1,!1,!0)}get currentToneMapping(){return this.isOutputTarget?this.toneMapping:wn}get currentColorSpace(){return this.isOutputTarget?this.outputColorSpace:Re.workingColorSpace}get isOutputTarget(){return this._renderTarget===this._outputRenderTarget||this._renderTarget===null}dispose(){this._initialized===!0&&(this.info.dispose(),this.backend.dispose(),this._animation.dispose(),this._objects.dispose(),this._pipelines.dispose(),this._nodes.dispose(),this._bindings.dispose(),this._renderLists.dispose(),this._renderContexts.dispose(),this._textures.dispose(),this._frameBufferTarget!==null&&this._frameBufferTarget.dispose(),Object.values(this.backend.timestampQueryPool).forEach(e=>{e!==null&&e.dispose()})),this.setRenderTarget(null),this.setAnimationLoop(null)}setRenderTarget(e,t=0,s=0){this._renderTarget=e,this._activeCubeFace=t,this._activeMipmapLevel=s}getRenderTarget(){return this._renderTarget}setOutputRenderTarget(e){this._outputRenderTarget=e}getOutputRenderTarget(){return this._outputRenderTarget}_resetXRState(){this.backend.setXRTarget(null),this.setOutputRenderTarget(null),this.setRenderTarget(null),this._frameBufferTarget.dispose(),this._frameBufferTarget=null}setRenderObjectFunction(e){this._renderObjectFunction=e}getRenderObjectFunction(){return this._renderObjectFunction}compute(e,t=null){if(this._isDeviceLost===!0)return;if(this._initialized===!1)return console.warn("THREE.Renderer: .compute() called before the backend is initialized. Try using .computeAsync() instead."),this.computeAsync(e);const s=this._nodes.nodeFrame,n=s.renderId;this.info.calls++,this.info.compute.calls++,this.info.compute.frameCalls++,s.renderId=this.info.calls;const r=this.backend,o=this._pipelines,a=this._bindings,u=this._nodes,l=Array.isArray(e)?e:[e];if(l[0]===void 0||l[0].isComputeNode!==!0)throw new Error("THREE.Renderer: .compute() expects a ComputeNode.");r.beginCompute(e);for(const c of l){if(o.has(c)===!1){const f=()=>{c.removeEventListener("dispose",f),o.delete(c),a.delete(c),u.delete(c)};c.addEventListener("dispose",f);const m=c.onInitFunction;m!==null&&m.call(c,{renderer:this})}u.updateForCompute(c),a.updateForCompute(c);const d=a.getForCompute(c),p=o.getForCompute(c,d);r.compute(e,c,d,p,t)}r.finishCompute(e),s.renderId=n}async computeAsync(e,t=null){this._initialized===!1&&await this.init(),this.compute(e,t)}async hasFeatureAsync(e){return this._initialized===!1&&await this.init(),this.backend.hasFeature(e)}async resolveTimestampsAsync(e="render"){return this._initialized===!1&&await this.init(),this.backend.resolveTimestampsAsync(e)}hasFeature(e){return this._initialized===!1?(console.warn("THREE.Renderer: .hasFeature() called before the backend is initialized. Try using .hasFeatureAsync() instead."),!1):this.backend.hasFeature(e)}hasInitialized(){return this._initialized}async initTextureAsync(e){this._initialized===!1&&await this.init(),this._textures.updateTexture(e)}initTexture(e){this._initialized===!1&&console.warn("THREE.Renderer: .initTexture() called before the backend is initialized. Try using .initTextureAsync() instead."),this._textures.updateTexture(e)}copyFramebufferToTexture(e,t=null){if(t!==null)if(t.isVector2)t=Qt.set(t.x,t.y,e.image.width,e.image.height).floor();else if(t.isVector4)t=Qt.copy(t).floor();else{console.error("THREE.Renderer.copyFramebufferToTexture: Invalid rectangle.");return}else t=Qt.set(0,0,e.image.width,e.image.height);let s=this._currentRenderContext,n;s!==null?n=s.renderTarget:(n=this._renderTarget||this._getFrameBufferTarget(),n!==null&&(this._textures.updateRenderTarget(n),s=this._textures.get(n))),this._textures.updateTexture(e,{renderTarget:n}),this.backend.copyFramebufferToTexture(e,s,t)}copyTextureToTexture(e,t,s=null,n=null,r=0,o=0){this._textures.updateTexture(e),this._textures.updateTexture(t),this.backend.copyTextureToTexture(e,t,s,n,r,o)}async readRenderTargetPixelsAsync(e,t,s,n,r,o=0,a=0){return this.backend.copyTextureToBuffer(e.textures[o],t,s,n,r,a)}_projectObject(e,t,s,n,r){if(e.visible===!1)return;if(e.layers.test(t.layers)){if(e.isGroup)s=e.renderOrder,e.isClippingGroup&&e.enabled&&(r=r.getGroupContext(e));else if(e.isLOD)e.autoUpdate===!0&&e.update(t);else if(e.isLight)n.pushLight(e);else if(e.isSprite){const u=t.isArrayCamera?oa:ia;if(!e.frustumCulled||u.intersectsSprite(e,t)){this.sortObjects===!0&&Qt.setFromMatrixPosition(e.matrixWorld).applyMatrix4(ci);const{geometry:l,material:c}=e;c.visible&&n.push(e,l,c,s,Qt.z,null,r)}}else if(e.isLineLoop)console.error("THREE.Renderer: Objects of type THREE.LineLoop are not supported. Please use THREE.Line or THREE.LineSegments.");else if(e.isMesh||e.isLine||e.isPoints){const u=t.isArrayCamera?oa:ia;if(!e.frustumCulled||u.intersectsObject(e,t)){const{geometry:l,material:c}=e;if(this.sortObjects===!0&&(l.boundingSphere===null&&l.computeBoundingSphere(),Qt.copy(l.boundingSphere.center).applyMatrix4(e.matrixWorld).applyMatrix4(ci)),Array.isArray(c)){const d=l.groups;for(let p=0,f=d.length;p<f;p++){const m=d[p],y=c[m.materialIndex];y&&y.visible&&n.push(e,l,y,s,Qt.z,m,r)}}else c.visible&&n.push(e,l,c,s,Qt.z,null,r)}}}if(e.isBundleGroup===!0&&this.backend.beginBundle!==void 0){const u=n;n=this._renderLists.get(e,t),n.begin(),u.pushBundle({bundleGroup:e,camera:t,renderList:n}),n.finish()}const a=e.children;for(let u=0,l=a.length;u<l;u++)this._projectObject(a[u],t,s,n,r)}_renderBundles(e,t,s){for(const n of e)this._renderBundle(n,t,s)}_renderTransparents(e,t,s,n,r){if(t.length>0){for(const{material:o}of t)o.side=nt;this._renderObjects(t,s,n,r,"backSide");for(const{material:o}of t)o.side=lr;this._renderObjects(e,s,n,r);for(const{material:o}of t)o.side=Xs}else this._renderObjects(e,s,n,r)}_renderObjects(e,t,s,n,r=null){for(let o=0,a=e.length;o<a;o++){const{object:u,geometry:l,material:c,group:d,clippingContext:p}=e[o];this._currentRenderObjectFunction(u,s,t,l,c,d,n,p,r)}}renderObject(e,t,s,n,r,o,a,u=null,l=null){let c,d,p;if(e.onBeforeRender(this,t,s,n,r,o),r.allowOverride===!0&&t.overrideMaterial!==null){const f=t.overrideMaterial;r.positionNode&&r.positionNode.isNode&&(c=f.positionNode,f.positionNode=r.positionNode),f.alphaTest=r.alphaTest,f.alphaMap=r.alphaMap,f.transparent=r.transparent||r.transmission>0,f.isShadowPassMaterial&&(f.side=r.shadowSide===null?r.side:r.shadowSide,r.depthNode&&r.depthNode.isNode&&(p=f.depthNode,f.depthNode=r.depthNode),r.castShadowNode&&r.castShadowNode.isNode&&(d=f.colorNode,f.colorNode=r.castShadowNode),r.castShadowPositionNode&&r.castShadowPositionNode.isNode&&(c=f.positionNode,f.positionNode=r.castShadowPositionNode)),r=f}r.transparent===!0&&r.side===Xs&&r.forceSinglePass===!1?(r.side=nt,this._handleObjectFunction(e,r,t,s,a,o,u,"backSide"),r.side=lr,this._handleObjectFunction(e,r,t,s,a,o,u,l),r.side=Xs):this._handleObjectFunction(e,r,t,s,a,o,u,l),c!==void 0&&(t.overrideMaterial.positionNode=c),p!==void 0&&(t.overrideMaterial.depthNode=p),d!==void 0&&(t.overrideMaterial.colorNode=d),e.onAfterRender(this,t,s,n,r,o)}_renderObjectDirect(e,t,s,n,r,o,a,u){const l=this._objects.get(e,t,s,n,r,this._currentRenderContext,a,u);l.drawRange=e.geometry.drawRange,l.group=o;const c=this._nodes.needsRefresh(l);c&&(this._nodes.updateBefore(l),this._geometries.updateForRender(l),this._nodes.updateForRender(l),this._bindings.updateForRender(l)),this._pipelines.updateForRender(l),this._currentRenderBundle!==null&&(this.backend.get(this._currentRenderBundle).renderObjects.push(l),l.bundle=this._currentRenderBundle.bundleGroup),this.backend.draw(l,this.info),c&&this._nodes.updateAfter(l)}_createObjectPipeline(e,t,s,n,r,o,a,u){const l=this._objects.get(e,t,s,n,r,this._currentRenderContext,a,u);l.drawRange=e.geometry.drawRange,l.group=o,this._nodes.updateBefore(l),this._geometries.updateForRender(l),this._nodes.updateForRender(l),this._bindings.updateForRender(l),this._pipelines.getForRender(l,this._compilationPromises),this._nodes.updateAfter(l)}get compile(){return this.compileAsync}}class Yg{constructor(e=""){this.name=e,this.visibility=0}setVisibility(e){this.visibility|=e}clone(){return Object.assign(new this.constructor,this)}}function lw(i){return i+(gs-i%gs)%gs}class Kg extends Yg{constructor(e,t=null){super(e),this.isBuffer=!0,this.bytesPerElement=Float32Array.BYTES_PER_ELEMENT,this._buffer=t}get byteLength(){return lw(this._buffer.byteLength)}get buffer(){return this._buffer}update(){return!0}}class Qg extends Kg{constructor(e,t=null){super(e,t),this.isUniformBuffer=!0}}let cw=0;class Zg extends Qg{constructor(e,t){super("UniformBuffer_"+cw++,e?e.value:null),this.nodeUniform=e,this.groupNode=t}get buffer(){return this.nodeUniform.value}}class dw extends Qg{constructor(e){super(e),this.isUniformsGroup=!0,this._values=null,this.uniforms=[]}addUniform(e){return this.uniforms.push(e),this}removeUniform(e){const t=this.uniforms.indexOf(e);return t!==-1&&this.uniforms.splice(t,1),this}get values(){return this._values===null&&(this._values=Array.from(this.buffer)),this._values}get buffer(){let e=this._buffer;if(e===null){const t=this.byteLength;e=new Float32Array(new ArrayBuffer(t)),this._buffer=e}return e}get byteLength(){const e=this.bytesPerElement;let t=0;for(let s=0,n=this.uniforms.length;s<n;s++){const r=this.uniforms[s],o=r.boundary,a=r.itemSize*e,u=t%gs,l=u%o,c=u+l;t+=l,c!==0&&gs-c<a&&(t+=gs-c),r.offset=t/e,t+=a}return Math.ceil(t/gs)*gs}update(){let e=!1;for(const t of this.uniforms)this.updateByType(t)===!0&&(e=!0);return e}updateByType(e){if(e.isNumberUniform)return this.updateNumber(e);if(e.isVector2Uniform)return this.updateVector2(e);if(e.isVector3Uniform)return this.updateVector3(e);if(e.isVector4Uniform)return this.updateVector4(e);if(e.isColorUniform)return this.updateColor(e);if(e.isMatrix3Uniform)return this.updateMatrix3(e);if(e.isMatrix4Uniform)return this.updateMatrix4(e);console.error("THREE.WebGPUUniformsGroup: Unsupported uniform type.",e)}updateNumber(e){let t=!1;const s=this.values,n=e.getValue(),r=e.offset,o=e.getType();if(s[r]!==n){const a=this._getBufferForType(o);a[r]=s[r]=n,t=!0}return t}updateVector2(e){let t=!1;const s=this.values,n=e.getValue(),r=e.offset,o=e.getType();if(s[r+0]!==n.x||s[r+1]!==n.y){const a=this._getBufferForType(o);a[r+0]=s[r+0]=n.x,a[r+1]=s[r+1]=n.y,t=!0}return t}updateVector3(e){let t=!1;const s=this.values,n=e.getValue(),r=e.offset,o=e.getType();if(s[r+0]!==n.x||s[r+1]!==n.y||s[r+2]!==n.z){const a=this._getBufferForType(o);a[r+0]=s[r+0]=n.x,a[r+1]=s[r+1]=n.y,a[r+2]=s[r+2]=n.z,t=!0}return t}updateVector4(e){let t=!1;const s=this.values,n=e.getValue(),r=e.offset,o=e.getType();if(s[r+0]!==n.x||s[r+1]!==n.y||s[r+2]!==n.z||s[r+4]!==n.w){const a=this._getBufferForType(o);a[r+0]=s[r+0]=n.x,a[r+1]=s[r+1]=n.y,a[r+2]=s[r+2]=n.z,a[r+3]=s[r+3]=n.w,t=!0}return t}updateColor(e){let t=!1;const s=this.values,n=e.getValue(),r=e.offset;if(s[r+0]!==n.r||s[r+1]!==n.g||s[r+2]!==n.b){const o=this.buffer;o[r+0]=s[r+0]=n.r,o[r+1]=s[r+1]=n.g,o[r+2]=s[r+2]=n.b,t=!0}return t}updateMatrix3(e){let t=!1;const s=this.values,n=e.getValue().elements,r=e.offset;if(s[r+0]!==n[0]||s[r+1]!==n[1]||s[r+2]!==n[2]||s[r+4]!==n[3]||s[r+5]!==n[4]||s[r+6]!==n[5]||s[r+8]!==n[6]||s[r+9]!==n[7]||s[r+10]!==n[8]){const o=this.buffer;o[r+0]=s[r+0]=n[0],o[r+1]=s[r+1]=n[1],o[r+2]=s[r+2]=n[2],o[r+4]=s[r+4]=n[3],o[r+5]=s[r+5]=n[4],o[r+6]=s[r+6]=n[5],o[r+8]=s[r+8]=n[6],o[r+9]=s[r+9]=n[7],o[r+10]=s[r+10]=n[8],t=!0}return t}updateMatrix4(e){let t=!1;const s=this.values,n=e.getValue().elements,r=e.offset;return pw(s,n,r)===!1&&(this.buffer.set(n,r),hw(s,n,r),t=!0),t}_getBufferForType(e){return e==="int"||e==="ivec2"||e==="ivec3"||e==="ivec4"?new Int32Array(this.buffer.buffer):e==="uint"||e==="uvec2"||e==="uvec3"||e==="uvec4"?new Uint32Array(this.buffer.buffer):this.buffer}}function hw(i,e,t){for(let s=0,n=e.length;s<n;s++)i[t+s]=e[s]}function pw(i,e,t){for(let s=0,n=e.length;s<n;s++)if(i[t+s]!==e[s])return!1;return!0}let fw=0;class Jg extends dw{constructor(e,t){super(e),this.id=fw++,this.groupNode=t,this.isNodeUniformsGroup=!0}}class ey extends Yg{constructor(e,t){super(e),this.texture=t,this.version=t?t.version:0,this.generation=null,this.isSampler=!0}set texture(e){if(this._texture===e)return;const t=()=>{this._texture=null,this.generation=null,this.version=0};this._texture&&this._texture.removeEventListener("dispose",t),this._texture=e,this.generation=null,this.version=0,this._texture&&this._texture.addEventListener("dispose",t)}get texture(){return this._texture}update(){const{texture:e,version:t}=this;return t!==e.version?(this.version=e.version,!0):!1}clone(){const e=super.clone();return e._texture=null,e.texture=this.texture,e}}let mw=0;class gw extends ey{constructor(e,t){super(e,t),this.id=mw++,this.store=!1,this.isSampledTexture=!0}}class Bo extends gw{constructor(e,t,s,n=null){super(e,t?t.value:null),this.textureNode=t,this.groupNode=s,this.access=n}update(){const{textureNode:e}=this;return this.texture!==e.value?(this.texture=e.value,!0):super.update()}}class ty extends Bo{constructor(e,t,s,n=null){super(e,t,s,n),this.isSampledCubeTexture=!0}}class ou extends Bo{constructor(e,t,s,n=null){super(e,t,s,n),this.isSampledTexture3D=!0}}const od={textureDimensions:"textureSize",equals:"equal",bitcast_float_int:"floatBitsToInt",bitcast_int_float:"intBitsToFloat",bitcast_uint_float:"uintBitsToFloat",bitcast_float_uint:"floatBitsToUint"},yw={low:"lowp",medium:"mediump",high:"highp"},ad={swizzleAssign:!0,storageBuffer:!1},ud={perspective:"smooth",linear:"noperspective"},ld={centroid:"centroid"},cd=`
precision highp float;
precision highp int;
precision highp sampler2D;
precision highp sampler3D;
precision highp samplerCube;
precision highp sampler2DArray;

precision highp usampler2D;
precision highp usampler3D;
precision highp usamplerCube;
precision highp usampler2DArray;

precision highp isampler2D;
precision highp isampler3D;
precision highp isamplerCube;
precision highp isampler2DArray;

precision lowp sampler2DShadow;
precision lowp sampler2DArrayShadow;
precision lowp samplerCubeShadow;
`;class _w extends qg{constructor(e,t){super(e,t,new X0),this.uniformGroups={},this.transforms=[],this.extensions={},this.builtins={vertex:[],fragment:[],compute:[]}}needsToWorkingColorSpace(e){return e.isVideoTexture===!0&&e.colorSpace!==Pn}getMethod(e){return od[e]||e}getBitcastMethod(e,t){return od[`bitcast_${t}_${e}`]}getTernary(e,t,s){return`${e} ? ${t} : ${s}`}getOutputStructName(){return""}buildFunctionCode(e){const t=e.layout,s=this.flowShaderNode(e),n=[];for(const o of t.inputs)n.push(this.getType(o.type)+" "+o.name);return`${this.getType(t.type)} ${t.name}( ${n.join(", ")} ) {

	${s.vars}

${s.code}
	return ${s.result};

}`}setupPBO(e){const t=e.value;if(t.pbo===void 0){const s=t.array,n=t.count*t.itemSize,{itemSize:r}=t,o=t.array.constructor.name.toLowerCase().includes("int");let a=o?bu:xu;r===2?a=o?Nu:Ws:r===3?a=o?D_:Tu:r===4&&(a=o?Su:Ct);const u={Float32Array:ft,Uint8Array:ct,Uint16Array:Nn,Uint32Array:Fe,Int8Array:dr,Int16Array:hr,Int32Array:Ke,Uint8ClampedArray:ct},l=Math.pow(2,Math.ceil(Math.log2(Math.sqrt(n/r))));let c=Math.ceil(n/r/l);l*c*r<n&&c++;const d=l*c*r,p=new s.constructor(d);p.set(s,0),t.array=p;const f=new t_(t.array,l,c,a,u[t.array.constructor.name]||ft);f.needsUpdate=!0,f.isPBOTexture=!0;const m=new Ht(f,null,null);m.setPrecision("high"),t.pboNode=m,t.pbo=m.value,this.getUniformFromNode(t.pboNode,"texture",this.shaderStage,this.context.nodeName)}}getPropertyName(e,t=this.shaderStage){return e.isNodeUniform&&e.node.isTextureNode!==!0&&e.node.isBufferNode!==!0?t.charAt(0)+"_"+e.name:super.getPropertyName(e,t)}generatePBO(e){const{node:t,indexNode:s}=e,n=t.value;if(this.renderer.backend.has(n)){const c=this.renderer.backend.get(n);c.pbo=n.pbo}const r=this.getUniformFromNode(n.pboNode,"texture",this.shaderStage,this.context.nodeName),o=this.getPropertyName(r);this.increaseUsage(s);const a=s.build(this,"uint"),u=this.getDataFromNode(e);let l=u.propertyName;if(l===void 0){const c=this.getVarFromNode(e);l=this.getPropertyName(c);const d=this.getDataFromNode(t);let p=d.propertySizeName;p===void 0&&(p=l+"Size",this.getVarFromNode(t,p,"uint"),this.addLineFlowCode(`${p} = uint( textureSize( ${o}, 0 ).x )`,e),d.propertySizeName=p);const{itemSize:f}=n,m="."+nn.join("").slice(0,f),y=`ivec2(${a} % ${p}, ${a} / ${p})`,x=this.generateTextureLoad(null,o,y,null,null,"0");let S="vec4";n.pbo.type===Fe?S="uvec4":n.pbo.type===Ke&&(S="ivec4"),this.addLineFlowCode(`${l} = ${S}(${x})${m}`,e),u.propertyName=l}return l}generateTextureLoad(e,t,s,n,r,o="0"){let a;return n?r?a=`texelFetchOffset( ${t}, ivec3( ${s}, ${n} ), ${o}, ${r} )`:a=`texelFetch( ${t}, ivec3( ${s}, ${n} ), ${o} )`:r?a=`texelFetchOffset( ${t}, ${s}, ${o}, ${r} )`:a=`texelFetch( ${t}, ${s}, ${o} )`,e!==null&&e.isDepthTexture&&(a+=".x"),a}generateTexture(e,t,s,n,r){return n&&(s=`vec3( ${s}, ${n} )`),e.isDepthTexture?r?`textureOffset( ${t}, ${s}, ${r} ).x`:`texture( ${t}, ${s} ).x`:r?`textureOffset( ${t}, ${s}, ${r} )`:`texture( ${t}, ${s} )`}generateTextureLevel(e,t,s,n,r){return r?`textureLodOffset( ${t}, ${s}, ${n}, ${r} )`:`textureLod( ${t}, ${s}, ${n} )`}generateTextureBias(e,t,s,n,r){return r?`textureOffset( ${t}, ${s}, ${r}, ${n} )`:`texture( ${t}, ${s}, ${n} )`}generateTextureGrad(e,t,s,n,r){return r?`textureGradOffset( ${t}, ${s}, ${n[0]}, ${n[1]}, ${r} )`:`textureGrad( ${t}, ${s}, ${n[0]}, ${n[1]} )`}generateTextureCompare(e,t,s,n,r,o,a=this.shaderStage){if(a==="fragment")return r?o?`textureOffset( ${t}, vec4( ${s}, ${r}, ${n} ), ${o} )`:`texture( ${t}, vec4( ${s}, ${r}, ${n} ) )`:o?`textureOffset( ${t}, vec3( ${s}, ${n} ), ${o} )`:`texture( ${t}, vec3( ${s}, ${n} ) )`;console.error(`WebGPURenderer: THREE.DepthTexture.compareFunction() does not support ${a} shader.`)}getVars(e){const t=[],s=this.vars[e];if(s!==void 0)for(const n of s)t.push(`${this.getVar(n.type,n.name,n.count)};`);return t.join(`
	`)}getUniforms(e){const t=this.uniforms[e],s=[],n={};for(const o of t){let a=null,u=!1;if(o.type==="texture"||o.type==="texture3D"){const c=o.node.value;let d="";(c.isDataTexture===!0||c.isData3DTexture===!0)&&(c.type===Fe?d="u":c.type===Ke&&(d="i")),o.type==="texture3D"&&c.isArrayTexture===!1?a=`${d}sampler3D ${o.name};`:c.compareFunction?c.isArrayTexture===!0?a=`sampler2DArrayShadow ${o.name};`:a=`sampler2DShadow ${o.name};`:c.isArrayTexture===!0||c.isDataArrayTexture===!0||c.isCompressedArrayTexture===!0?a=`${d}sampler2DArray ${o.name};`:a=`${d}sampler2D ${o.name};`}else if(o.type==="cubeTexture")a=`samplerCube ${o.name};`;else if(o.type==="buffer"){const c=o.node,d=this.getType(c.bufferType),p=c.bufferCount,f=p>0?p:"";a=`${c.name} {
	${d} ${o.name}[${f}];
};
`}else a=`${this.getVectorType(o.type)} ${this.getPropertyName(o,e)};`,u=!0;const l=o.node.precision;if(l!==null&&(a=yw[l]+" "+a),u){a="	"+a;const c=o.groupNode.name;(n[c]||(n[c]=[])).push(a)}else a="uniform "+a,s.push(a)}let r="";for(const o in n){const a=n[o];r+=this._getGLSLUniformStruct(e+"_"+o,a.join(`
`))+`
`}return r+=s.join(`
`),r}getTypeFromAttribute(e){let t=super.getTypeFromAttribute(e);if(/^[iu]/.test(t)&&e.gpuType!==Ke){let s=e;e.isInterleavedBufferAttribute&&(s=e.data);const n=s.array;n instanceof Uint32Array||n instanceof Int32Array||(t=t.slice(1))}return t}getAttributes(e){let t="";if(e==="vertex"||e==="compute"){const s=this.getAttributesArray();let n=0;for(const r of s)t+=`layout( location = ${n++} ) in ${r.type} ${r.name};
`}return t}getStructMembers(e){const t=[];for(const s of e.members)t.push(`	${s.type} ${s.name};`);return t.join(`
`)}getStructs(e){const t=[],s=this.structs[e],n=[];for(const r of s)if(r.output)for(const o of r.members)n.push(`layout( location = ${o.index} ) out ${o.type} ${o.name};`);else{let o="struct "+r.name+` {
`;o+=this.getStructMembers(r),o+=`
};
`,t.push(o)}return n.length===0&&n.push("layout( location = 0 ) out vec4 fragColor;"),`
`+n.join(`
`)+`

`+t.join(`
`)}getVaryings(e){let t="";const s=this.varyings;if(e==="vertex"||e==="compute")for(const n of s){e==="compute"&&(n.needsInterpolation=!0);const r=this.getType(n.type);if(n.needsInterpolation)if(n.interpolationType){const o=ud[n.interpolationType]||n.interpolationType,a=ld[n.interpolationSampling]||"";t+=`${o} ${a} out ${r} ${n.name};
`}else{const o=r.includes("int")||r.includes("uv")||r.includes("iv")?"flat ":"";t+=`${o}out ${r} ${n.name};
`}else t+=`${r} ${n.name};
`}else if(e==="fragment"){for(const n of s)if(n.needsInterpolation){const r=this.getType(n.type);if(n.interpolationType){const o=ud[n.interpolationType]||n.interpolationType,a=ld[n.interpolationSampling]||"";t+=`${o} ${a} in ${r} ${n.name};
`}else{const o=r.includes("int")||r.includes("uv")||r.includes("iv")?"flat ":"";t+=`${o}in ${r} ${n.name};
`}}}for(const n of this.builtins[e])t+=`${n};
`;return t}getVertexIndex(){return"uint( gl_VertexID )"}getInstanceIndex(){return"uint( gl_InstanceID )"}getInvocationLocalIndex(){return`uint( gl_InstanceID ) % ${this.object.workgroupSize.reduce((s,n)=>s*n,1)}u`}getDrawIndex(){return this.renderer.backend.extensions.has("WEBGL_multi_draw")?"uint( gl_DrawID )":null}getFrontFacing(){return"gl_FrontFacing"}getFragCoord(){return"gl_FragCoord.xy"}getFragDepth(){return"gl_FragDepth"}enableExtension(e,t,s=this.shaderStage){const n=this.extensions[s]||(this.extensions[s]=new Map);n.has(e)===!1&&n.set(e,{name:e,behavior:t})}getExtensions(e){const t=[];if(e==="vertex"){const n=this.renderer.backend.extensions;this.object.isBatchedMesh&&n.has("WEBGL_multi_draw")&&this.enableExtension("GL_ANGLE_multi_draw","require",e)}const s=this.extensions[e];if(s!==void 0)for(const{name:n,behavior:r}of s.values())t.push(`#extension ${n} : ${r}`);return t.join(`
`)}getClipDistance(){return"gl_ClipDistance"}isAvailable(e){let t=ad[e];if(t===void 0){let s;switch(t=!1,e){case"float32Filterable":s="OES_texture_float_linear";break;case"clipDistance":s="WEBGL_clip_cull_distance";break}if(s!==void 0){const n=this.renderer.backend.extensions;n.has(s)&&(n.get(s),t=!0)}ad[e]=t}return t}isFlipY(){return!0}enableHardwareClipping(e){this.enableExtension("GL_ANGLE_clip_cull_distance","require"),this.builtins.vertex.push(`out float gl_ClipDistance[ ${e} ]`)}enableMultiview(){this.enableExtension("GL_OVR_multiview2","require","fragment"),this.enableExtension("GL_OVR_multiview2","require","vertex"),this.builtins.vertex.push("layout(num_views = 2) in")}registerTransform(e,t){this.transforms.push({varyingName:e,attributeNode:t})}getTransforms(){const e=this.transforms;let t="";for(let s=0;s<e.length;s++){const n=e[s],r=this.getPropertyName(n.attributeNode);r&&(t+=`${n.varyingName} = ${r};
	`)}return t}_getGLSLUniformStruct(e,t){return`
layout( std140 ) uniform ${e} {
${t}
};`}_getGLSLVertexCode(e){return`#version 300 es

${this.getSignature()}

// extensions
${e.extensions}

// precision
${cd}

// uniforms
${e.uniforms}

// varyings
${e.varyings}

// attributes
${e.attributes}

// codes
${e.codes}

void main() {

	// vars
	${e.vars}

	// transforms
	${e.transforms}

	// flow
	${e.flow}

	gl_PointSize = 1.0;

}
`}_getGLSLFragmentCode(e){return`#version 300 es

${this.getSignature()}

// extensions
${e.extensions}

// precision
${cd}

// uniforms
${e.uniforms}

// varyings
${e.varyings}

// codes
${e.codes}

// structs
${e.structs}

void main() {

	// vars
	${e.vars}

	// flow
	${e.flow}

}
`}buildCode(){const e=this.material!==null?{fragment:{},vertex:{}}:{compute:{}};this.sortBindingGroups();for(const t in e){let s=`// code

`;s+=this.flowCode[t];const n=this.flowNodes[t],r=n[n.length-1];for(const a of n){const u=this.getFlowData(a),l=a.name;l&&(s.length>0&&(s+=`
`),s+=`	// flow -> ${l}
	`),s+=`${u.code}
	`,a===r&&t!=="compute"&&(s+=`// result
	`,t==="vertex"?(s+="gl_Position = ",s+=`${u.result};`):t==="fragment"&&(a.outputNode.isOutputStructNode||(s+="fragColor = ",s+=`${u.result};`)))}const o=e[t];o.extensions=this.getExtensions(t),o.uniforms=this.getUniforms(t),o.attributes=this.getAttributes(t),o.varyings=this.getVaryings(t),o.vars=this.getVars(t),o.structs=this.getStructs(t),o.codes=this.getCodes(t),o.transforms=this.getTransforms(t),o.flow=s}this.material!==null?(this.vertexShader=this._getGLSLVertexCode(e.vertex),this.fragmentShader=this._getGLSLFragmentCode(e.fragment)):this.computeShader=this._getGLSLVertexCode(e.compute)}getUniformFromNode(e,t,s,n=null){const r=super.getUniformFromNode(e,t,s,n),o=this.getDataFromNode(e,s,this.globalCache);let a=o.uniformGPU;if(a===void 0){const u=e.groupNode,l=u.name,c=this.getBindGroupArray(l,s);if(t==="texture")a=new Bo(r.name,r.node,u),c.push(a);else if(t==="cubeTexture")a=new ty(r.name,r.node,u),c.push(a);else if(t==="texture3D")a=new ou(r.name,r.node,u),c.push(a);else if(t==="buffer"){e.name=`NodeBuffer_${e.id}`,r.name=`buffer${e.id}`;const d=new Zg(e,u);d.name=e.name,c.push(d),a=d}else{const d=this.uniformGroups[s]||(this.uniformGroups[s]={});let p=d[l];p===void 0&&(p=new Jg(s+"_"+l,u),d[l]=p,c.push(p)),a=this.getNodeUniform(r,t),p.addUniform(a)}o.uniformGPU=a}return r}}let aa=null,mn=null;class sy{constructor(e={}){this.parameters=Object.assign({},e),this.data=new WeakMap,this.renderer=null,this.domElement=null,this.timestampQueryPool={render:null,compute:null},this.trackTimestamp=e.trackTimestamp===!0}async init(e){this.renderer=e}get coordinateSystem(){}beginRender(){}finishRender(){}beginCompute(){}finishCompute(){}draw(){}compute(){}createProgram(){}destroyProgram(){}createBindings(){}updateBindings(){}updateBinding(){}createRenderPipeline(){}createComputePipeline(){}needsRenderUpdate(){}getRenderCacheKey(){}createNodeBuilder(){}createSampler(){}destroySampler(){}createDefaultTexture(){}createTexture(){}updateTexture(){}generateMipmaps(){}destroyTexture(){}async copyTextureToBuffer(){}copyTextureToTexture(){}copyFramebufferToTexture(){}createAttribute(){}createIndexAttribute(){}createStorageAttribute(){}updateAttribute(){}destroyAttribute(){}getContext(){}updateSize(){}updateViewport(){}getTimestampUID(e){const t=this.get(e);let s=e.isComputeNode===!0?"c":"r";return s+=":"+t.frameCalls+":"+e.id,s}isOccluded(){}async resolveTimestampsAsync(e="render"){if(!this.trackTimestamp){Bt("WebGPURenderer: Timestamp tracking is disabled.");return}const t=this.timestampQueryPool[e];if(!t){Bt(`WebGPURenderer: No timestamp query pool for type '${e}' found.`);return}const s=await t.resolveQueriesAsync();return this.renderer.info[e].timestamp=s,s}async waitForGPU(){}async getArrayBufferAsync(){}async hasFeatureAsync(){}hasFeature(){}getMaxAnisotropy(){}getDrawingBufferSize(){return aa=aa||new he,this.renderer.getDrawingBufferSize(aa)}setScissorTest(){}getClearColor(){const e=this.renderer;return mn=mn||new Cl,e.getClearColor(mn),mn.getRGB(mn),mn}getDomElement(){let e=this.domElement;return e===null&&(e=this.parameters.canvas!==void 0?this.parameters.canvas:jy(),"setAttribute"in e&&e.setAttribute("data-engine",`three.js r${Dd} webgpu`),this.domElement=e),e}set(e,t){this.data.set(e,t)}get(e){let t=this.data.get(e);return t===void 0&&(t={},this.data.set(e,t)),t}has(e){return this.data.has(e)}delete(e){this.data.delete(e)}dispose(){}}let Tw=0;class xw{constructor(e,t){this.buffers=[e.bufferGPU,t],this.type=e.type,this.bufferType=e.bufferType,this.pbo=e.pbo,this.byteLength=e.byteLength,this.bytesPerElement=e.BYTES_PER_ELEMENT,this.version=e.version,this.isInteger=e.isInteger,this.activeBufferIndex=0,this.baseId=e.id}get id(){return`${this.baseId}|${this.activeBufferIndex}`}get bufferGPU(){return this.buffers[this.activeBufferIndex]}get transformBuffer(){return this.buffers[this.activeBufferIndex^1]}switchBuffers(){this.activeBufferIndex^=1}}class bw{constructor(e){this.backend=e}createAttribute(e,t){const s=this.backend,{gl:n}=s,r=e.array,o=e.usage||n.STATIC_DRAW,a=e.isInterleavedBufferAttribute?e.data:e,u=s.get(a);let l=u.bufferGPU;l===void 0&&(l=this._createBuffer(n,t,r,o),u.bufferGPU=l,u.bufferType=t,u.version=a.version);let c;if(r instanceof Float32Array)c=n.FLOAT;else if(typeof Float16Array<"u"&&r instanceof Float16Array)c=n.HALF_FLOAT;else if(r instanceof Uint16Array)e.isFloat16BufferAttribute?c=n.HALF_FLOAT:c=n.UNSIGNED_SHORT;else if(r instanceof Int16Array)c=n.SHORT;else if(r instanceof Uint32Array)c=n.UNSIGNED_INT;else if(r instanceof Int32Array)c=n.INT;else if(r instanceof Int8Array)c=n.BYTE;else if(r instanceof Uint8Array)c=n.UNSIGNED_BYTE;else if(r instanceof Uint8ClampedArray)c=n.UNSIGNED_BYTE;else throw new Error("THREE.WebGLBackend: Unsupported buffer data format: "+r);let d={bufferGPU:l,bufferType:t,type:c,byteLength:r.byteLength,bytesPerElement:r.BYTES_PER_ELEMENT,version:e.version,pbo:e.pbo,isInteger:c===n.INT||c===n.UNSIGNED_INT||e.gpuType===Ke,id:Tw++};if(e.isStorageBufferAttribute||e.isStorageInstancedBufferAttribute){const p=this._createBuffer(n,t,r,o);d=new xw(d,p)}s.set(e,d)}updateAttribute(e){const t=this.backend,{gl:s}=t,n=e.array,r=e.isInterleavedBufferAttribute?e.data:e,o=t.get(r),a=o.bufferType,u=e.isInterleavedBufferAttribute?e.data.updateRanges:e.updateRanges;if(s.bindBuffer(a,o.bufferGPU),u.length===0)s.bufferSubData(a,0,n);else{for(let l=0,c=u.length;l<c;l++){const d=u[l];s.bufferSubData(a,d.start*n.BYTES_PER_ELEMENT,n,d.start,d.count)}r.clearUpdateRanges()}s.bindBuffer(a,null),o.version=r.version}destroyAttribute(e){const t=this.backend,{gl:s}=t;e.isInterleavedBufferAttribute&&t.delete(e.data);const n=t.get(e);s.deleteBuffer(n.bufferGPU),t.delete(e)}async getArrayBufferAsync(e){const t=this.backend,{gl:s}=t,n=e.isInterleavedBufferAttribute?e.data:e,{bufferGPU:r}=t.get(n),o=e.array,a=o.byteLength;s.bindBuffer(s.COPY_READ_BUFFER,r);const u=s.createBuffer();s.bindBuffer(s.COPY_WRITE_BUFFER,u),s.bufferData(s.COPY_WRITE_BUFFER,a,s.STREAM_READ),s.copyBufferSubData(s.COPY_READ_BUFFER,s.COPY_WRITE_BUFFER,0,0,a),await t.utils._clientWaitAsync();const l=new e.array.constructor(o.length);return s.bindBuffer(s.COPY_WRITE_BUFFER,u),s.getBufferSubData(s.COPY_WRITE_BUFFER,0,l),s.deleteBuffer(u),s.bindBuffer(s.COPY_READ_BUFFER,null),s.bindBuffer(s.COPY_WRITE_BUFFER,null),l.buffer}_createBuffer(e,t,s,n){const r=e.createBuffer();return e.bindBuffer(t,r),e.bufferData(t,s,n),e.bindBuffer(t,null),r}}let ua,rr;class Nw{constructor(e){this.backend=e,this.gl=this.backend.gl,this.enabled={},this.currentFlipSided=null,this.currentCullFace=null,this.currentProgram=null,this.currentBlendingEnabled=!1,this.currentBlending=null,this.currentBlendSrc=null,this.currentBlendDst=null,this.currentBlendSrcAlpha=null,this.currentBlendDstAlpha=null,this.currentPremultipledAlpha=null,this.currentPolygonOffsetFactor=null,this.currentPolygonOffsetUnits=null,this.currentColorMask=null,this.currentDepthFunc=null,this.currentDepthMask=null,this.currentStencilFunc=null,this.currentStencilRef=null,this.currentStencilFuncMask=null,this.currentStencilFail=null,this.currentStencilZFail=null,this.currentStencilZPass=null,this.currentStencilMask=null,this.currentLineWidth=null,this.currentClippingPlanes=0,this.currentVAO=null,this.currentIndex=null,this.currentBoundFramebuffers={},this.currentDrawbuffers=new WeakMap,this.maxTextures=this.gl.getParameter(this.gl.MAX_TEXTURE_IMAGE_UNITS),this.currentTextureSlot=null,this.currentBoundTextures={},this.currentBoundBufferBases={},this._init()}_init(){const e=this.gl;ua={[es]:e.FUNC_ADD,[Hd]:e.FUNC_SUBTRACT,[Wd]:e.FUNC_REVERSE_SUBTRACT},rr={[hs]:e.ZERO,[th]:e.ONE,[eh]:e.SRC_COLOR,[Jd]:e.SRC_ALPHA,[Zd]:e.SRC_ALPHA_SATURATE,[Qd]:e.DST_COLOR,[Kd]:e.DST_ALPHA,[Yd]:e.ONE_MINUS_SRC_COLOR,[Xd]:e.ONE_MINUS_SRC_ALPHA,[jd]:e.ONE_MINUS_DST_COLOR,[qd]:e.ONE_MINUS_DST_ALPHA};const t=e.getParameter(e.SCISSOR_BOX),s=e.getParameter(e.VIEWPORT);this.currentScissor=new _e().fromArray(t),this.currentViewport=new _e().fromArray(s),this._tempVec4=new _e}enable(e){const{enabled:t}=this;t[e]!==!0&&(this.gl.enable(e),t[e]=!0)}disable(e){const{enabled:t}=this;t[e]!==!1&&(this.gl.disable(e),t[e]=!1)}setFlipSided(e){if(this.currentFlipSided!==e){const{gl:t}=this;e?t.frontFace(t.CW):t.frontFace(t.CCW),this.currentFlipSided=e}}setCullFace(e){const{gl:t}=this;e!==Yy?(this.enable(t.CULL_FACE),e!==this.currentCullFace&&(e===Ky?t.cullFace(t.BACK):e===Qy?t.cullFace(t.FRONT):t.cullFace(t.FRONT_AND_BACK))):this.disable(t.CULL_FACE),this.currentCullFace=e}setLineWidth(e){const{currentLineWidth:t,gl:s}=this;e!==t&&(s.lineWidth(e),this.currentLineWidth=e)}setBlending(e,t,s,n,r,o,a,u){const{gl:l}=this;if(e===br){this.currentBlendingEnabled===!0&&(this.disable(l.BLEND),this.currentBlendingEnabled=!1);return}if(this.currentBlendingEnabled===!1&&(this.enable(l.BLEND),this.currentBlendingEnabled=!0),e!==cr){if(e!==this.currentBlending||u!==this.currentPremultipledAlpha){if((this.currentBlendEquation!==es||this.currentBlendEquationAlpha!==es)&&(l.blendEquation(l.FUNC_ADD),this.currentBlendEquation=es,this.currentBlendEquationAlpha=es),u)switch(e){case Ks:l.blendFuncSeparate(l.ONE,l.ONE_MINUS_SRC_ALPHA,l.ONE,l.ONE_MINUS_SRC_ALPHA);break;case Di:l.blendFunc(l.ONE,l.ONE);break;case Li:l.blendFuncSeparate(l.ZERO,l.ONE_MINUS_SRC_COLOR,l.ZERO,l.ONE);break;case Fi:l.blendFuncSeparate(l.DST_COLOR,l.ONE_MINUS_SRC_ALPHA,l.ZERO,l.ONE);break;default:console.error("THREE.WebGLState: Invalid blending: ",e);break}else switch(e){case Ks:l.blendFuncSeparate(l.SRC_ALPHA,l.ONE_MINUS_SRC_ALPHA,l.ONE,l.ONE_MINUS_SRC_ALPHA);break;case Di:l.blendFuncSeparate(l.SRC_ALPHA,l.ONE,l.ONE,l.ONE);break;case Li:console.error("THREE.WebGLState: SubtractiveBlending requires material.premultipliedAlpha = true");break;case Fi:console.error("THREE.WebGLState: MultiplyBlending requires material.premultipliedAlpha = true");break;default:console.error("THREE.WebGLState: Invalid blending: ",e);break}this.currentBlendSrc=null,this.currentBlendDst=null,this.currentBlendSrcAlpha=null,this.currentBlendDstAlpha=null,this.currentBlending=e,this.currentPremultipledAlpha=u}return}r=r||t,o=o||s,a=a||n,(t!==this.currentBlendEquation||r!==this.currentBlendEquationAlpha)&&(l.blendEquationSeparate(ua[t],ua[r]),this.currentBlendEquation=t,this.currentBlendEquationAlpha=r),(s!==this.currentBlendSrc||n!==this.currentBlendDst||o!==this.currentBlendSrcAlpha||a!==this.currentBlendDstAlpha)&&(l.blendFuncSeparate(rr[s],rr[n],rr[o],rr[a]),this.currentBlendSrc=s,this.currentBlendDst=n,this.currentBlendSrcAlpha=o,this.currentBlendDstAlpha=a),this.currentBlending=e,this.currentPremultipledAlpha=!1}setColorMask(e){this.currentColorMask!==e&&(this.gl.colorMask(e,e,e,e),this.currentColorMask=e)}setDepthTest(e){const{gl:t}=this;e?this.enable(t.DEPTH_TEST):this.disable(t.DEPTH_TEST)}setDepthMask(e){this.currentDepthMask!==e&&(this.gl.depthMask(e),this.currentDepthMask=e)}setDepthFunc(e){if(this.currentDepthFunc!==e){const{gl:t}=this;switch(e){case lh:t.depthFunc(t.NEVER);break;case uh:t.depthFunc(t.ALWAYS);break;case ah:t.depthFunc(t.LESS);break;case oh:t.depthFunc(t.LEQUAL);break;case ih:t.depthFunc(t.EQUAL);break;case rh:t.depthFunc(t.GEQUAL);break;case nh:t.depthFunc(t.GREATER);break;case sh:t.depthFunc(t.NOTEQUAL);break;default:t.depthFunc(t.LEQUAL)}this.currentDepthFunc=e}}scissor(e,t,s,n){const r=this._tempVec4.set(e,t,s,n);if(this.currentScissor.equals(r)===!1){const{gl:o}=this;o.scissor(r.x,r.y,r.z,r.w),this.currentScissor.copy(r)}}viewport(e,t,s,n){const r=this._tempVec4.set(e,t,s,n);if(this.currentViewport.equals(r)===!1){const{gl:o}=this;o.viewport(r.x,r.y,r.z,r.w),this.currentViewport.copy(r)}}setScissorTest(e){const t=this.gl;e?t.enable(t.SCISSOR_TEST):t.disable(t.SCISSOR_TEST)}setStencilTest(e){const{gl:t}=this;e?this.enable(t.STENCIL_TEST):this.disable(t.STENCIL_TEST)}setStencilMask(e){this.currentStencilMask!==e&&(this.gl.stencilMask(e),this.currentStencilMask=e)}setStencilFunc(e,t,s){(this.currentStencilFunc!==e||this.currentStencilRef!==t||this.currentStencilFuncMask!==s)&&(this.gl.stencilFunc(e,t,s),this.currentStencilFunc=e,this.currentStencilRef=t,this.currentStencilFuncMask=s)}setStencilOp(e,t,s){(this.currentStencilFail!==e||this.currentStencilZFail!==t||this.currentStencilZPass!==s)&&(this.gl.stencilOp(e,t,s),this.currentStencilFail=e,this.currentStencilZFail=t,this.currentStencilZPass=s)}setMaterial(e,t,s){const{gl:n}=this;e.side===Xs?this.disable(n.CULL_FACE):this.enable(n.CULL_FACE);let r=e.side===nt;t&&(r=!r),this.setFlipSided(r),e.blending===Ks&&e.transparent===!1?this.setBlending(br):this.setBlending(e.blending,e.blendEquation,e.blendSrc,e.blendDst,e.blendEquationAlpha,e.blendSrcAlpha,e.blendDstAlpha,e.premultipliedAlpha),this.setDepthFunc(e.depthFunc),this.setDepthTest(e.depthTest),this.setDepthMask(e.depthWrite),this.setColorMask(e.colorWrite);const o=e.stencilWrite;if(this.setStencilTest(o),o&&(this.setStencilMask(e.stencilWriteMask),this.setStencilFunc(e.stencilFunc,e.stencilRef,e.stencilFuncMask),this.setStencilOp(e.stencilFail,e.stencilZFail,e.stencilZPass)),this.setPolygonOffset(e.polygonOffset,e.polygonOffsetFactor,e.polygonOffsetUnits),e.alphaToCoverage===!0&&this.backend.renderer.samples>1?this.enable(n.SAMPLE_ALPHA_TO_COVERAGE):this.disable(n.SAMPLE_ALPHA_TO_COVERAGE),s>0&&this.currentClippingPlanes!==s)for(let u=0;u<8;u++)u<s?this.enable(12288+u):this.disable(12288+u)}setPolygonOffset(e,t,s){const{gl:n}=this;e?(this.enable(n.POLYGON_OFFSET_FILL),(this.currentPolygonOffsetFactor!==t||this.currentPolygonOffsetUnits!==s)&&(n.polygonOffset(t,s),this.currentPolygonOffsetFactor=t,this.currentPolygonOffsetUnits=s)):this.disable(n.POLYGON_OFFSET_FILL)}useProgram(e){return this.currentProgram!==e?(this.gl.useProgram(e),this.currentProgram=e,!0):!1}setVertexState(e,t=null){const s=this.gl;return this.currentVAO!==e||this.currentIndex!==t?(s.bindVertexArray(e),t!==null&&s.bindBuffer(s.ELEMENT_ARRAY_BUFFER,t),this.currentVAO=e,this.currentIndex=t,!0):!1}resetVertexState(){const e=this.gl;e.bindVertexArray(null),e.bindBuffer(e.ELEMENT_ARRAY_BUFFER,null),this.currentVAO=null,this.currentIndex=null}bindFramebuffer(e,t){const{gl:s,currentBoundFramebuffers:n}=this;return n[e]!==t?(s.bindFramebuffer(e,t),n[e]=t,e===s.DRAW_FRAMEBUFFER&&(n[s.FRAMEBUFFER]=t),e===s.FRAMEBUFFER&&(n[s.DRAW_FRAMEBUFFER]=t),!0):!1}drawBuffers(e,t){const{gl:s}=this;let n=[],r=!1;if(e.textures!==null){n=this.currentDrawbuffers.get(t),n===void 0&&(n=[],this.currentDrawbuffers.set(t,n));const o=e.textures;if(n.length!==o.length||n[0]!==s.COLOR_ATTACHMENT0){for(let a=0,u=o.length;a<u;a++)n[a]=s.COLOR_ATTACHMENT0+a;n.length=o.length,r=!0}}else n[0]!==s.BACK&&(n[0]=s.BACK,r=!0);r&&s.drawBuffers(n)}activeTexture(e){const{gl:t,currentTextureSlot:s,maxTextures:n}=this;e===void 0&&(e=t.TEXTURE0+n-1),s!==e&&(t.activeTexture(e),this.currentTextureSlot=e)}bindTexture(e,t,s){const{gl:n,currentTextureSlot:r,currentBoundTextures:o,maxTextures:a}=this;s===void 0&&(r===null?s=n.TEXTURE0+a-1:s=r);let u=o[s];u===void 0&&(u={type:void 0,texture:void 0},o[s]=u),(u.type!==e||u.texture!==t)&&(r!==s&&(n.activeTexture(s),this.currentTextureSlot=s),n.bindTexture(e,t),u.type=e,u.texture=t)}bindBufferBase(e,t,s){const{gl:n}=this,r=`${e}-${t}`;return this.currentBoundBufferBases[r]!==s?(n.bindBufferBase(e,t,s),this.currentBoundBufferBases[r]=s,!0):!1}unbindTexture(){const{gl:e,currentTextureSlot:t,currentBoundTextures:s}=this,n=s[t];n!==void 0&&n.type!==void 0&&(e.bindTexture(n.type,null),n.type=void 0,n.texture=void 0)}}class Sw{constructor(e){this.backend=e,this.gl=this.backend.gl,this.extensions=e.extensions}convert(e,t=Pn){const{gl:s,extensions:n}=this;let r;const o=Re.getTransfer(t);if(e===ct)return s.UNSIGNED_BYTE;if(e===Zy)return s.UNSIGNED_SHORT_4_4_4_4;if(e===Jy)return s.UNSIGNED_SHORT_5_5_5_1;if(e===ch)return s.UNSIGNED_INT_5_9_9_9_REV;if(e===dh)return s.UNSIGNED_INT_10F_11F_11F_REV;if(e===dr)return s.BYTE;if(e===hr)return s.SHORT;if(e===Nn)return s.UNSIGNED_SHORT;if(e===Ke)return s.INT;if(e===Fe)return s.UNSIGNED_INT;if(e===ft)return s.FLOAT;if(e===et)return s.HALF_FLOAT;if(e===e_)return s.ALPHA;if(e===Tu)return s.RGB;if(e===Ct)return s.RGBA;if(e===xs)return s.DEPTH_COMPONENT;if(e===Ts)return s.DEPTH_STENCIL;if(e===xu)return s.RED;if(e===bu)return s.RED_INTEGER;if(e===Ws)return s.RG;if(e===Nu)return s.RG_INTEGER;if(e===Su)return s.RGBA_INTEGER;if(e===_i||e===Ti||e===xi||e===bi)if(o===K)if(r=n.get("WEBGL_compressed_texture_s3tc_srgb"),r!==null){if(e===_i)return r.COMPRESSED_SRGB_S3TC_DXT1_EXT;if(e===Ti)return r.COMPRESSED_SRGB_ALPHA_S3TC_DXT1_EXT;if(e===xi)return r.COMPRESSED_SRGB_ALPHA_S3TC_DXT3_EXT;if(e===bi)return r.COMPRESSED_SRGB_ALPHA_S3TC_DXT5_EXT}else return null;else if(r=n.get("WEBGL_compressed_texture_s3tc"),r!==null){if(e===_i)return r.COMPRESSED_RGB_S3TC_DXT1_EXT;if(e===Ti)return r.COMPRESSED_RGBA_S3TC_DXT1_EXT;if(e===xi)return r.COMPRESSED_RGBA_S3TC_DXT3_EXT;if(e===bi)return r.COMPRESSED_RGBA_S3TC_DXT5_EXT}else return null;if(e===Jl||e===ec||e===tc||e===sc)if(r=n.get("WEBGL_compressed_texture_pvrtc"),r!==null){if(e===Jl)return r.COMPRESSED_RGB_PVRTC_4BPPV1_IMG;if(e===ec)return r.COMPRESSED_RGB_PVRTC_2BPPV1_IMG;if(e===tc)return r.COMPRESSED_RGBA_PVRTC_4BPPV1_IMG;if(e===sc)return r.COMPRESSED_RGBA_PVRTC_2BPPV1_IMG}else return null;if(e===ga||e===ya||e===_a)if(r=n.get("WEBGL_compressed_texture_etc"),r!==null){if(e===ga||e===ya)return o===K?r.COMPRESSED_SRGB8_ETC2:r.COMPRESSED_RGB8_ETC2;if(e===_a)return o===K?r.COMPRESSED_SRGB8_ALPHA8_ETC2_EAC:r.COMPRESSED_RGBA8_ETC2_EAC}else return null;if(e===Ta||e===xa||e===ba||e===Na||e===Sa||e===va||e===Ra||e===Aa||e===Ea||e===wa||e===Ca||e===Ma||e===Ba||e===Pa)if(r=n.get("WEBGL_compressed_texture_astc"),r!==null){if(e===Ta)return o===K?r.COMPRESSED_SRGB8_ALPHA8_ASTC_4x4_KHR:r.COMPRESSED_RGBA_ASTC_4x4_KHR;if(e===xa)return o===K?r.COMPRESSED_SRGB8_ALPHA8_ASTC_5x4_KHR:r.COMPRESSED_RGBA_ASTC_5x4_KHR;if(e===ba)return o===K?r.COMPRESSED_SRGB8_ALPHA8_ASTC_5x5_KHR:r.COMPRESSED_RGBA_ASTC_5x5_KHR;if(e===Na)return o===K?r.COMPRESSED_SRGB8_ALPHA8_ASTC_6x5_KHR:r.COMPRESSED_RGBA_ASTC_6x5_KHR;if(e===Sa)return o===K?r.COMPRESSED_SRGB8_ALPHA8_ASTC_6x6_KHR:r.COMPRESSED_RGBA_ASTC_6x6_KHR;if(e===va)return o===K?r.COMPRESSED_SRGB8_ALPHA8_ASTC_8x5_KHR:r.COMPRESSED_RGBA_ASTC_8x5_KHR;if(e===Ra)return o===K?r.COMPRESSED_SRGB8_ALPHA8_ASTC_8x6_KHR:r.COMPRESSED_RGBA_ASTC_8x6_KHR;if(e===Aa)return o===K?r.COMPRESSED_SRGB8_ALPHA8_ASTC_8x8_KHR:r.COMPRESSED_RGBA_ASTC_8x8_KHR;if(e===Ea)return o===K?r.COMPRESSED_SRGB8_ALPHA8_ASTC_10x5_KHR:r.COMPRESSED_RGBA_ASTC_10x5_KHR;if(e===wa)return o===K?r.COMPRESSED_SRGB8_ALPHA8_ASTC_10x6_KHR:r.COMPRESSED_RGBA_ASTC_10x6_KHR;if(e===Ca)return o===K?r.COMPRESSED_SRGB8_ALPHA8_ASTC_10x8_KHR:r.COMPRESSED_RGBA_ASTC_10x8_KHR;if(e===Ma)return o===K?r.COMPRESSED_SRGB8_ALPHA8_ASTC_10x10_KHR:r.COMPRESSED_RGBA_ASTC_10x10_KHR;if(e===Ba)return o===K?r.COMPRESSED_SRGB8_ALPHA8_ASTC_12x10_KHR:r.COMPRESSED_RGBA_ASTC_12x10_KHR;if(e===Pa)return o===K?r.COMPRESSED_SRGB8_ALPHA8_ASTC_12x12_KHR:r.COMPRESSED_RGBA_ASTC_12x12_KHR}else return null;if(e===Fa)if(r=n.get("EXT_texture_compression_bptc"),r!==null){if(e===Fa)return o===K?r.COMPRESSED_SRGB_ALPHA_BPTC_UNORM_EXT:r.COMPRESSED_RGBA_BPTC_UNORM_EXT}else return null;if(e===La||e===Da||e===Ua||e===Ia)if(r=n.get("EXT_texture_compression_rgtc"),r!==null){if(e===La)return r.COMPRESSED_RED_RGTC1_EXT;if(e===Da)return r.COMPRESSED_SIGNED_RED_RGTC1_EXT;if(e===Ua)return r.COMPRESSED_RED_GREEN_RGTC2_EXT;if(e===Ia)return r.COMPRESSED_SIGNED_RED_GREEN_RGTC2_EXT}else return null;return e===_s?s.UNSIGNED_INT_24_8:s[e]!==void 0?s[e]:null}_clientWaitAsync(){const{gl:e}=this,t=e.fenceSync(e.SYNC_GPU_COMMANDS_COMPLETE,0);return e.flush(),new Promise((s,n)=>{function r(){const o=e.clientWaitSync(t,e.SYNC_FLUSH_COMMANDS_BIT,0);if(o===e.WAIT_FAILED){e.deleteSync(t),n();return}if(o===e.TIMEOUT_EXPIRED){requestAnimationFrame(r);return}e.deleteSync(t),s()}r()})}}let dd=!1,di,la,hd;class vw{constructor(e){this.backend=e,this.gl=e.gl,this.extensions=e.extensions,this.defaultTextures={},dd===!1&&(this._init(),dd=!0)}_init(){const e=this.gl;di={[Ji]:e.REPEAT,[_u]:e.CLAMP_TO_EDGE,[Zi]:e.MIRRORED_REPEAT},la={[wt]:e.NEAREST,[Ud]:e.NEAREST_MIPMAP_NEAREST,[Nr]:e.NEAREST_MIPMAP_LINEAR,[rs]:e.LINEAR,[ma]:e.LINEAR_MIPMAP_NEAREST,[Ys]:e.LINEAR_MIPMAP_LINEAR},hd={[$d]:e.NEVER,[zd]:e.ALWAYS,[fu]:e.LESS,[kd]:e.LEQUAL,[Gd]:e.EQUAL,[Od]:e.GEQUAL,[Vd]:e.GREATER,[Id]:e.NOTEQUAL}}getGLTextureType(e){const{gl:t}=this;let s;return e.isCubeTexture===!0?s=t.TEXTURE_CUBE_MAP:e.isArrayTexture===!0||e.isDataArrayTexture===!0||e.isCompressedArrayTexture===!0?s=t.TEXTURE_2D_ARRAY:e.isData3DTexture===!0?s=t.TEXTURE_3D:s=t.TEXTURE_2D,s}getInternalFormat(e,t,s,n,r=!1){const{gl:o,extensions:a}=this;if(e!==null){if(o[e]!==void 0)return o[e];console.warn("THREE.WebGLRenderer: Attempt to use non-existing WebGL internal format '"+e+"'")}let u=t;if(t===o.RED&&(s===o.FLOAT&&(u=o.R32F),s===o.HALF_FLOAT&&(u=o.R16F),s===o.UNSIGNED_BYTE&&(u=o.R8),s===o.UNSIGNED_SHORT&&(u=o.R16),s===o.UNSIGNED_INT&&(u=o.R32UI),s===o.BYTE&&(u=o.R8I),s===o.SHORT&&(u=o.R16I),s===o.INT&&(u=o.R32I)),t===o.RED_INTEGER&&(s===o.UNSIGNED_BYTE&&(u=o.R8UI),s===o.UNSIGNED_SHORT&&(u=o.R16UI),s===o.UNSIGNED_INT&&(u=o.R32UI),s===o.BYTE&&(u=o.R8I),s===o.SHORT&&(u=o.R16I),s===o.INT&&(u=o.R32I)),t===o.RG&&(s===o.FLOAT&&(u=o.RG32F),s===o.HALF_FLOAT&&(u=o.RG16F),s===o.UNSIGNED_BYTE&&(u=o.RG8),s===o.UNSIGNED_SHORT&&(u=o.RG16),s===o.UNSIGNED_INT&&(u=o.RG32UI),s===o.BYTE&&(u=o.RG8I),s===o.SHORT&&(u=o.RG16I),s===o.INT&&(u=o.RG32I)),t===o.RG_INTEGER&&(s===o.UNSIGNED_BYTE&&(u=o.RG8UI),s===o.UNSIGNED_SHORT&&(u=o.RG16UI),s===o.UNSIGNED_INT&&(u=o.RG32UI),s===o.BYTE&&(u=o.RG8I),s===o.SHORT&&(u=o.RG16I),s===o.INT&&(u=o.RG32I)),t===o.RGB){const l=r?Zl:Re.getTransfer(n);s===o.FLOAT&&(u=o.RGB32F),s===o.HALF_FLOAT&&(u=o.RGB16F),s===o.UNSIGNED_BYTE&&(u=o.RGB8),s===o.UNSIGNED_SHORT&&(u=o.RGB16),s===o.UNSIGNED_INT&&(u=o.RGB32UI),s===o.BYTE&&(u=o.RGB8I),s===o.SHORT&&(u=o.RGB16I),s===o.INT&&(u=o.RGB32I),s===o.UNSIGNED_BYTE&&(u=l===K?o.SRGB8:o.RGB8),s===o.UNSIGNED_SHORT_5_6_5&&(u=o.RGB565),s===o.UNSIGNED_SHORT_5_5_5_1&&(u=o.RGB5_A1),s===o.UNSIGNED_SHORT_4_4_4_4&&(u=o.RGB4),s===o.UNSIGNED_INT_5_9_9_9_REV&&(u=o.RGB9_E5),s===o.UNSIGNED_INT_10F_11F_11F_REV&&(u=o.R11F_G11F_B10F)}if(t===o.RGB_INTEGER&&(s===o.UNSIGNED_BYTE&&(u=o.RGB8UI),s===o.UNSIGNED_SHORT&&(u=o.RGB16UI),s===o.UNSIGNED_INT&&(u=o.RGB32UI),s===o.BYTE&&(u=o.RGB8I),s===o.SHORT&&(u=o.RGB16I),s===o.INT&&(u=o.RGB32I)),t===o.RGBA){const l=r?Zl:Re.getTransfer(n);s===o.FLOAT&&(u=o.RGBA32F),s===o.HALF_FLOAT&&(u=o.RGBA16F),s===o.UNSIGNED_BYTE&&(u=o.RGBA8),s===o.UNSIGNED_SHORT&&(u=o.RGBA16),s===o.UNSIGNED_INT&&(u=o.RGBA32UI),s===o.BYTE&&(u=o.RGBA8I),s===o.SHORT&&(u=o.RGBA16I),s===o.INT&&(u=o.RGBA32I),s===o.UNSIGNED_BYTE&&(u=l===K?o.SRGB8_ALPHA8:o.RGBA8),s===o.UNSIGNED_SHORT_4_4_4_4&&(u=o.RGBA4),s===o.UNSIGNED_SHORT_5_5_5_1&&(u=o.RGB5_A1)}return t===o.RGBA_INTEGER&&(s===o.UNSIGNED_BYTE&&(u=o.RGBA8UI),s===o.UNSIGNED_SHORT&&(u=o.RGBA16UI),s===o.UNSIGNED_INT&&(u=o.RGBA32UI),s===o.BYTE&&(u=o.RGBA8I),s===o.SHORT&&(u=o.RGBA16I),s===o.INT&&(u=o.RGBA32I)),t===o.DEPTH_COMPONENT&&(s===o.UNSIGNED_SHORT&&(u=o.DEPTH_COMPONENT16),s===o.UNSIGNED_INT&&(u=o.DEPTH_COMPONENT24),s===o.FLOAT&&(u=o.DEPTH_COMPONENT32F)),t===o.DEPTH_STENCIL&&s===o.UNSIGNED_INT_24_8&&(u=o.DEPTH24_STENCIL8),(u===o.R16F||u===o.R32F||u===o.RG16F||u===o.RG32F||u===o.RGBA16F||u===o.RGBA32F)&&a.get("EXT_color_buffer_float"),u}setTextureParameters(e,t){const{gl:s,extensions:n,backend:r}=this,o=Re.getPrimaries(Re.workingColorSpace),a=t.colorSpace===Pn?null:Re.getPrimaries(t.colorSpace),u=t.colorSpace===Pn||o===a?s.NONE:s.BROWSER_DEFAULT_WEBGL;s.pixelStorei(s.UNPACK_FLIP_Y_WEBGL,t.flipY),s.pixelStorei(s.UNPACK_PREMULTIPLY_ALPHA_WEBGL,t.premultiplyAlpha),s.pixelStorei(s.UNPACK_ALIGNMENT,t.unpackAlignment),s.pixelStorei(s.UNPACK_COLORSPACE_CONVERSION_WEBGL,u),s.texParameteri(e,s.TEXTURE_WRAP_S,di[t.wrapS]),s.texParameteri(e,s.TEXTURE_WRAP_T,di[t.wrapT]),(e===s.TEXTURE_3D||e===s.TEXTURE_2D_ARRAY)&&(t.isArrayTexture||s.texParameteri(e,s.TEXTURE_WRAP_R,di[t.wrapR])),s.texParameteri(e,s.TEXTURE_MAG_FILTER,la[t.magFilter]);const l=t.mipmaps!==void 0&&t.mipmaps.length>0,c=t.minFilter===rs&&l?Ys:t.minFilter;if(s.texParameteri(e,s.TEXTURE_MIN_FILTER,la[c]),t.compareFunction&&(s.texParameteri(e,s.TEXTURE_COMPARE_MODE,s.COMPARE_REF_TO_TEXTURE),s.texParameteri(e,s.TEXTURE_COMPARE_FUNC,hd[t.compareFunction])),n.has("EXT_texture_filter_anisotropic")===!0){if(t.magFilter===wt||t.minFilter!==Nr&&t.minFilter!==Ys||t.type===ft&&n.has("OES_texture_float_linear")===!1)return;if(t.anisotropy>1){const d=n.get("EXT_texture_filter_anisotropic");s.texParameterf(e,d.TEXTURE_MAX_ANISOTROPY_EXT,Math.min(t.anisotropy,r.getMaxAnisotropy()))}}}createDefaultTexture(e){const{gl:t,backend:s,defaultTextures:n}=this,r=this.getGLTextureType(e);let o=n[r];o===void 0&&(o=t.createTexture(),s.state.bindTexture(r,o),t.texParameteri(r,t.TEXTURE_MIN_FILTER,t.NEAREST),t.texParameteri(r,t.TEXTURE_MAG_FILTER,t.NEAREST),n[r]=o),s.set(e,{textureGPU:o,glTextureType:r,isDefault:!0})}createTexture(e,t){const{gl:s,backend:n}=this,{levels:r,width:o,height:a,depth:u}=t,l=n.utils.convert(e.format,e.colorSpace),c=n.utils.convert(e.type),d=this.getInternalFormat(e.internalFormat,l,c,e.colorSpace,e.isVideoTexture),p=s.createTexture(),f=this.getGLTextureType(e);n.state.bindTexture(f,p),this.setTextureParameters(f,e),e.isArrayTexture||e.isDataArrayTexture||e.isCompressedArrayTexture?s.texStorage3D(s.TEXTURE_2D_ARRAY,r,d,o,a,u):e.isData3DTexture?s.texStorage3D(s.TEXTURE_3D,r,d,o,a,u):e.isVideoTexture||s.texStorage2D(f,r,d,o,a),n.set(e,{textureGPU:p,glTextureType:f,glFormat:l,glType:c,glInternalFormat:d})}copyBufferToTexture(e,t){const{gl:s,backend:n}=this,{textureGPU:r,glTextureType:o,glFormat:a,glType:u}=n.get(t),{width:l,height:c}=t.source.data;s.bindBuffer(s.PIXEL_UNPACK_BUFFER,e),n.state.bindTexture(o,r),s.pixelStorei(s.UNPACK_FLIP_Y_WEBGL,!1),s.pixelStorei(s.UNPACK_PREMULTIPLY_ALPHA_WEBGL,!1),s.texSubImage2D(o,0,0,0,l,c,a,u,0),s.bindBuffer(s.PIXEL_UNPACK_BUFFER,null),n.state.unbindTexture()}updateTexture(e,t){const{gl:s}=this,{width:n,height:r}=t,{textureGPU:o,glTextureType:a,glFormat:u,glType:l,glInternalFormat:c}=this.backend.get(e);if(!(e.isRenderTargetTexture||o===void 0))if(this.backend.state.bindTexture(a,o),this.setTextureParameters(a,e),e.isCompressedTexture){const d=e.mipmaps,p=t.image;for(let f=0;f<d.length;f++){const m=d[f];e.isCompressedArrayTexture?e.format!==s.RGBA?u!==null?s.compressedTexSubImage3D(s.TEXTURE_2D_ARRAY,f,0,0,0,m.width,m.height,p.depth,u,m.data):console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .uploadTexture()"):s.texSubImage3D(s.TEXTURE_2D_ARRAY,f,0,0,0,m.width,m.height,p.depth,u,l,m.data):u!==null?s.compressedTexSubImage2D(s.TEXTURE_2D,f,0,0,m.width,m.height,u,m.data):console.warn("Unsupported compressed texture format")}}else if(e.isCubeTexture){const d=t.images,p=e.mipmaps;for(let f=0;f<6;f++){const m=hi(d[f]);s.texSubImage2D(s.TEXTURE_CUBE_MAP_POSITIVE_X+f,0,0,0,n,r,u,l,m);for(let y=0;y<p.length;y++){const x=p[y],S=hi(x.images[f]);s.texSubImage2D(s.TEXTURE_CUBE_MAP_POSITIVE_X+f,y+1,0,0,S.width,S.height,u,l,S)}}}else if(e.isDataArrayTexture||e.isArrayTexture){const d=t.image;if(e.layerUpdates.size>0){const p=Xy(d.width,d.height,e.format,e.type);for(const f of e.layerUpdates){const m=d.data.subarray(f*p/d.data.BYTES_PER_ELEMENT,(f+1)*p/d.data.BYTES_PER_ELEMENT);s.texSubImage3D(s.TEXTURE_2D_ARRAY,0,0,0,f,d.width,d.height,1,u,l,m)}e.clearLayerUpdates()}else s.texSubImage3D(s.TEXTURE_2D_ARRAY,0,0,0,0,d.width,d.height,d.depth,u,l,d.data)}else if(e.isData3DTexture){const d=t.image;s.texSubImage3D(s.TEXTURE_3D,0,0,0,0,d.width,d.height,d.depth,u,l,d.data)}else if(e.isVideoTexture)e.update(),s.texImage2D(a,0,c,u,l,t.image);else{const d=e.mipmaps;if(d.length>0)for(let p=0,f=d.length;p<f;p++){const m=d[p],y=hi(m);s.texSubImage2D(a,p,0,0,m.width,m.height,u,l,y)}else{const p=hi(t.image);s.texSubImage2D(a,0,0,0,n,r,u,l,p)}}}generateMipmaps(e){const{gl:t,backend:s}=this,{textureGPU:n,glTextureType:r}=s.get(e);s.state.bindTexture(r,n),t.generateMipmap(r)}deallocateRenderBuffers(e){const{gl:t,backend:s}=this;if(e){const n=s.get(e);if(n.renderBufferStorageSetup=void 0,n.framebuffers){for(const r in n.framebuffers)t.deleteFramebuffer(n.framebuffers[r]);delete n.framebuffers}if(n.depthRenderbuffer&&(t.deleteRenderbuffer(n.depthRenderbuffer),delete n.depthRenderbuffer),n.stencilRenderbuffer&&(t.deleteRenderbuffer(n.stencilRenderbuffer),delete n.stencilRenderbuffer),n.msaaFrameBuffer&&(t.deleteFramebuffer(n.msaaFrameBuffer),delete n.msaaFrameBuffer),n.msaaRenderbuffers){for(let r=0;r<n.msaaRenderbuffers.length;r++)t.deleteRenderbuffer(n.msaaRenderbuffers[r]);delete n.msaaRenderbuffers}}}destroyTexture(e){const{gl:t,backend:s}=this,{textureGPU:n,renderTarget:r}=s.get(e);this.deallocateRenderBuffers(r),t.deleteTexture(n),s.delete(e)}copyTextureToTexture(e,t,s=null,n=null,r=0,o=0){const{gl:a,backend:u}=this,{state:l}=this.backend,{textureGPU:c,glTextureType:d,glType:p,glFormat:f}=u.get(t);l.bindTexture(d,c);let m,y,x,S,R,C,D,P,F;const B=e.isCompressedTexture?e.mipmaps[o]:e.image;if(s!==null)m=s.max.x-s.min.x,y=s.max.y-s.min.y,x=s.isBox3?s.max.z-s.min.z:1,S=s.min.x,R=s.min.y,C=s.isBox3?s.min.z:0;else{const De=Math.pow(2,-r);m=Math.floor(B.width*De),y=Math.floor(B.height*De),e.isDataArrayTexture||e.isArrayTexture?x=B.depth:e.isData3DTexture?x=Math.floor(B.depth*De):x=1,S=0,R=0,C=0}n!==null?(D=n.x,P=n.y,F=n.z):(D=0,P=0,F=0),a.pixelStorei(a.UNPACK_FLIP_Y_WEBGL,t.flipY),a.pixelStorei(a.UNPACK_PREMULTIPLY_ALPHA_WEBGL,t.premultiplyAlpha),a.pixelStorei(a.UNPACK_ALIGNMENT,t.unpackAlignment);const V=a.getParameter(a.UNPACK_ROW_LENGTH),G=a.getParameter(a.UNPACK_IMAGE_HEIGHT),te=a.getParameter(a.UNPACK_SKIP_PIXELS),se=a.getParameter(a.UNPACK_SKIP_ROWS),ye=a.getParameter(a.UNPACK_SKIP_IMAGES);a.pixelStorei(a.UNPACK_ROW_LENGTH,B.width),a.pixelStorei(a.UNPACK_IMAGE_HEIGHT,B.height),a.pixelStorei(a.UNPACK_SKIP_PIXELS,S),a.pixelStorei(a.UNPACK_SKIP_ROWS,R),a.pixelStorei(a.UNPACK_SKIP_IMAGES,C);const de=t.isDataArrayTexture||t.isData3DTexture||t.isArrayTexture;if(e.isRenderTargetTexture||e.isDepthTexture){const De=u.get(e),vt=u.get(t),Qe=u.get(De.renderTarget),cs=u.get(vt.renderTarget),ot=Qe.framebuffers[De.cacheKey],Rt=cs.framebuffers[vt.cacheKey];l.bindFramebuffer(a.READ_FRAMEBUFFER,ot),l.bindFramebuffer(a.DRAW_FRAMEBUFFER,Rt);let Ps=a.COLOR_BUFFER_BIT;e.isDepthTexture&&(Ps=a.DEPTH_BUFFER_BIT),a.blitFramebuffer(S,R,m,y,D,P,m,y,Ps,a.NEAREST),l.bindFramebuffer(a.READ_FRAMEBUFFER,null),l.bindFramebuffer(a.DRAW_FRAMEBUFFER,null)}else de?e.isDataTexture||e.isData3DTexture?a.texSubImage3D(d,o,D,P,F,m,y,x,f,p,B.data):t.isCompressedArrayTexture?a.compressedTexSubImage3D(d,o,D,P,F,m,y,x,f,B.data):a.texSubImage3D(d,o,D,P,F,m,y,x,f,p,B):e.isDataTexture?a.texSubImage2D(d,o,D,P,m,y,f,p,B.data):e.isCompressedTexture?a.compressedTexSubImage2D(d,o,D,P,B.width,B.height,f,B.data):a.texSubImage2D(d,o,D,P,m,y,f,p,B);a.pixelStorei(a.UNPACK_ROW_LENGTH,V),a.pixelStorei(a.UNPACK_IMAGE_HEIGHT,G),a.pixelStorei(a.UNPACK_SKIP_PIXELS,te),a.pixelStorei(a.UNPACK_SKIP_ROWS,se),a.pixelStorei(a.UNPACK_SKIP_IMAGES,ye),o===0&&t.generateMipmaps&&a.generateMipmap(d),l.unbindTexture()}copyFramebufferToTexture(e,t,s){const{gl:n}=this,{state:r}=this.backend,{textureGPU:o}=this.backend.get(e),{x:a,y:u,z:l,w:c}=s,d=e.isDepthTexture===!0||t.renderTarget&&t.renderTarget.samples>0,p=t.renderTarget?t.renderTarget.height:this.backend.getDrawingBufferSize().y;if(d){const f=a!==0||u!==0;let m,y;if(e.isDepthTexture===!0?(m=n.DEPTH_BUFFER_BIT,y=n.DEPTH_ATTACHMENT,t.stencil&&(m|=n.STENCIL_BUFFER_BIT)):(m=n.COLOR_BUFFER_BIT,y=n.COLOR_ATTACHMENT0),f){const x=this.backend.get(t.renderTarget),S=x.framebuffers[t.getCacheKey()],R=x.msaaFrameBuffer;r.bindFramebuffer(n.DRAW_FRAMEBUFFER,S),r.bindFramebuffer(n.READ_FRAMEBUFFER,R);const C=p-u-c;n.blitFramebuffer(a,C,a+l,C+c,a,C,a+l,C+c,m,n.NEAREST),r.bindFramebuffer(n.READ_FRAMEBUFFER,S),r.bindTexture(n.TEXTURE_2D,o),n.copyTexSubImage2D(n.TEXTURE_2D,0,0,0,a,C,l,c),r.unbindTexture()}else{const x=n.createFramebuffer();r.bindFramebuffer(n.DRAW_FRAMEBUFFER,x),n.framebufferTexture2D(n.DRAW_FRAMEBUFFER,y,n.TEXTURE_2D,o,0),n.blitFramebuffer(0,0,l,c,0,0,l,c,m,n.NEAREST),n.deleteFramebuffer(x)}}else r.bindTexture(n.TEXTURE_2D,o),n.copyTexSubImage2D(n.TEXTURE_2D,0,0,0,a,p-c-u,l,c),r.unbindTexture();e.generateMipmaps&&this.generateMipmaps(e),this.backend._setFramebuffer(t)}setupRenderBufferStorage(e,t,s,n=!1){const{gl:r}=this,o=t.renderTarget,{depthTexture:a,depthBuffer:u,stencilBuffer:l,width:c,height:d}=o;if(r.bindRenderbuffer(r.RENDERBUFFER,e),u&&!l){let p=r.DEPTH_COMPONENT24;n===!0?this.extensions.get("WEBGL_multisampled_render_to_texture").renderbufferStorageMultisampleEXT(r.RENDERBUFFER,o.samples,p,c,d):s>0?(a&&a.isDepthTexture&&a.type===r.FLOAT&&(p=r.DEPTH_COMPONENT32F),r.renderbufferStorageMultisample(r.RENDERBUFFER,s,p,c,d)):r.renderbufferStorage(r.RENDERBUFFER,p,c,d),r.framebufferRenderbuffer(r.FRAMEBUFFER,r.DEPTH_ATTACHMENT,r.RENDERBUFFER,e)}else u&&l&&(s>0?r.renderbufferStorageMultisample(r.RENDERBUFFER,s,r.DEPTH24_STENCIL8,c,d):r.renderbufferStorage(r.RENDERBUFFER,r.DEPTH_STENCIL,c,d),r.framebufferRenderbuffer(r.FRAMEBUFFER,r.DEPTH_STENCIL_ATTACHMENT,r.RENDERBUFFER,e));r.bindRenderbuffer(r.RENDERBUFFER,null)}async copyTextureToBuffer(e,t,s,n,r,o){const{backend:a,gl:u}=this,{textureGPU:l,glFormat:c,glType:d}=this.backend.get(e),p=u.createFramebuffer();u.bindFramebuffer(u.READ_FRAMEBUFFER,p);const f=e.isCubeTexture?u.TEXTURE_CUBE_MAP_POSITIVE_X+o:u.TEXTURE_2D;u.framebufferTexture2D(u.READ_FRAMEBUFFER,u.COLOR_ATTACHMENT0,f,l,0);const m=this._getTypedArrayType(d),y=this._getBytesPerTexel(d,c),S=n*r*y,R=u.createBuffer();u.bindBuffer(u.PIXEL_PACK_BUFFER,R),u.bufferData(u.PIXEL_PACK_BUFFER,S,u.STREAM_READ),u.readPixels(t,s,n,r,c,d,0),u.bindBuffer(u.PIXEL_PACK_BUFFER,null),await a.utils._clientWaitAsync();const C=new m(S/m.BYTES_PER_ELEMENT);return u.bindBuffer(u.PIXEL_PACK_BUFFER,R),u.getBufferSubData(u.PIXEL_PACK_BUFFER,0,C),u.bindBuffer(u.PIXEL_PACK_BUFFER,null),u.deleteFramebuffer(p),C}_getTypedArrayType(e){const{gl:t}=this;if(e===t.UNSIGNED_BYTE)return Uint8Array;if(e===t.UNSIGNED_SHORT_4_4_4_4||e===t.UNSIGNED_SHORT_5_5_5_1||e===t.UNSIGNED_SHORT_5_6_5||e===t.UNSIGNED_SHORT)return Uint16Array;if(e===t.UNSIGNED_INT)return Uint32Array;if(e===t.HALF_FLOAT)return Uint16Array;if(e===t.FLOAT)return Float32Array;throw new Error(`Unsupported WebGL type: ${e}`)}_getBytesPerTexel(e,t){const{gl:s}=this;let n=0;if(e===s.UNSIGNED_BYTE&&(n=1),(e===s.UNSIGNED_SHORT_4_4_4_4||e===s.UNSIGNED_SHORT_5_5_5_1||e===s.UNSIGNED_SHORT_5_6_5||e===s.UNSIGNED_SHORT||e===s.HALF_FLOAT)&&(n=2),(e===s.UNSIGNED_INT||e===s.FLOAT)&&(n=4),t===s.RGBA)return n*4;if(t===s.RGB)return n*3;if(t===s.ALPHA)return n}}function hi(i){return i.isDataTexture?i.image.data:typeof HTMLImageElement<"u"&&i instanceof HTMLImageElement||typeof HTMLCanvasElement<"u"&&i instanceof HTMLCanvasElement||typeof ImageBitmap<"u"&&i instanceof ImageBitmap||typeof OffscreenCanvas<"u"&&i instanceof OffscreenCanvas?i:i.data}class Rw{constructor(e){this.backend=e,this.gl=this.backend.gl,this.availableExtensions=this.gl.getSupportedExtensions(),this.extensions={}}get(e){let t=this.extensions[e];return t===void 0&&(t=this.gl.getExtension(e),this.extensions[e]=t),t}has(e){return this.availableExtensions.includes(e)}}class Aw{constructor(e){this.backend=e,this.maxAnisotropy=null}getMaxAnisotropy(){if(this.maxAnisotropy!==null)return this.maxAnisotropy;const e=this.backend.gl,t=this.backend.extensions;if(t.has("EXT_texture_filter_anisotropic")===!0){const s=t.get("EXT_texture_filter_anisotropic");this.maxAnisotropy=e.getParameter(s.MAX_TEXTURE_MAX_ANISOTROPY_EXT)}else this.maxAnisotropy=0;return this.maxAnisotropy}}const pd={WEBGL_multi_draw:"WEBGL_multi_draw",WEBGL_compressed_texture_astc:"texture-compression-astc",WEBGL_compressed_texture_etc:"texture-compression-etc2",WEBGL_compressed_texture_etc1:"texture-compression-etc1",WEBGL_compressed_texture_pvrtc:"texture-compression-pvrtc",WEBKIT_WEBGL_compressed_texture_pvrtc:"texture-compression-pvrtc",WEBGL_compressed_texture_s3tc:"texture-compression-bc",EXT_texture_compression_bptc:"texture-compression-bptc",EXT_disjoint_timer_query_webgl2:"timestamp-query",OVR_multiview2:"OVR_multiview2"};class Ew{constructor(e){this.gl=e.gl,this.extensions=e.extensions,this.info=e.renderer.info,this.mode=null,this.index=0,this.type=null,this.object=null}render(e,t){const{gl:s,mode:n,object:r,type:o,info:a,index:u}=this;u!==0?s.drawElements(n,t,o,e):s.drawArrays(n,e,t),a.update(r,t,1)}renderInstances(e,t,s){const{gl:n,mode:r,type:o,index:a,object:u,info:l}=this;s!==0&&(a!==0?n.drawElementsInstanced(r,t,o,e,s):n.drawArraysInstanced(r,e,t,s),l.update(u,t,s))}renderMultiDraw(e,t,s){const{extensions:n,mode:r,object:o,info:a}=this;if(s===0)return;const u=n.get("WEBGL_multi_draw");if(u===null)for(let l=0;l<s;l++)this.render(e[l],t[l]);else{this.index!==0?u.multiDrawElementsWEBGL(r,t,0,this.type,e,0,s):u.multiDrawArraysWEBGL(r,e,0,t,0,s);let l=0;for(let c=0;c<s;c++)l+=t[c];a.update(o,l,1)}}renderMultiDrawInstances(e,t,s,n){const{extensions:r,mode:o,object:a,info:u}=this;if(s===0)return;const l=r.get("WEBGL_multi_draw");if(l===null)for(let c=0;c<s;c++)this.renderInstances(e[c],t[c],n[c]);else{this.index!==0?l.multiDrawElementsInstancedWEBGL(o,t,0,this.type,e,0,n,0,s):l.multiDrawArraysInstancedWEBGL(o,e,0,t,0,n,0,s);let c=0;for(let d=0;d<s;d++)c+=t[d]*n[d];u.update(a,c,1)}}}class ny{constructor(e=256){this.trackTimestamp=!0,this.maxQueries=e,this.currentQueryIndex=0,this.queryOffsets=new Map,this.isDisposed=!1,this.lastValue=0,this.pendingResolve=!1}allocateQueriesForContext(){}async resolveQueriesAsync(){}dispose(){}}class ww extends ny{constructor(e,t,s=2048){if(super(s),this.gl=e,this.type=t,this.ext=e.getExtension("EXT_disjoint_timer_query_webgl2")||e.getExtension("EXT_disjoint_timer_query"),!this.ext){console.warn("EXT_disjoint_timer_query not supported; timestamps will be disabled."),this.trackTimestamp=!1;return}this.queries=[];for(let n=0;n<this.maxQueries;n++)this.queries.push(e.createQuery());this.activeQuery=null,this.queryStates=new Map}allocateQueriesForContext(e){if(!this.trackTimestamp)return null;if(this.currentQueryIndex+2>this.maxQueries)return Bt(`WebGPUTimestampQueryPool [${this.type}]: Maximum number of queries exceeded, when using trackTimestamp it is necessary to resolves the queries via renderer.resolveTimestampsAsync( THREE.TimestampQuery.${this.type.toUpperCase()} ).`),null;const t=this.currentQueryIndex;return this.currentQueryIndex+=2,this.queryStates.set(t,"inactive"),this.queryOffsets.set(e,t),t}beginQuery(e){if(!this.trackTimestamp||this.isDisposed)return;const t=this.queryOffsets.get(e);if(t==null||this.activeQuery!==null)return;const s=this.queries[t];if(s)try{this.queryStates.get(t)==="inactive"&&(this.gl.beginQuery(this.ext.TIME_ELAPSED_EXT,s),this.activeQuery=t,this.queryStates.set(t,"started"))}catch(n){console.error("Error in beginQuery:",n),this.activeQuery=null,this.queryStates.set(t,"inactive")}}endQuery(e){if(!this.trackTimestamp||this.isDisposed)return;const t=this.queryOffsets.get(e);if(t!=null&&this.activeQuery===t)try{this.gl.endQuery(this.ext.TIME_ELAPSED_EXT),this.queryStates.set(t,"ended"),this.activeQuery=null}catch(s){console.error("Error in endQuery:",s),this.queryStates.set(t,"inactive"),this.activeQuery=null}}async resolveQueriesAsync(){if(!this.trackTimestamp||this.pendingResolve)return this.lastValue;this.pendingResolve=!0;try{const e=[];for(const[n,r]of this.queryStates)if(r==="ended"){const o=this.queries[n];e.push(this.resolveQuery(o))}if(e.length===0)return this.lastValue;const s=(await Promise.all(e)).reduce((n,r)=>n+r,0);return this.lastValue=s,this.currentQueryIndex=0,this.queryOffsets.clear(),this.queryStates.clear(),this.activeQuery=null,s}catch(e){return console.error("Error resolving queries:",e),this.lastValue}finally{this.pendingResolve=!1}}async resolveQuery(e){return new Promise(t=>{if(this.isDisposed){t(this.lastValue);return}let s,n=!1;const r=()=>{s&&(clearTimeout(s),s=null)},o=u=>{n||(n=!0,r(),t(u))},a=()=>{if(this.isDisposed){o(this.lastValue);return}try{if(this.gl.getParameter(this.ext.GPU_DISJOINT_EXT)){o(this.lastValue);return}if(!this.gl.getQueryParameter(e,this.gl.QUERY_RESULT_AVAILABLE)){s=setTimeout(a,1);return}const c=this.gl.getQueryParameter(e,this.gl.QUERY_RESULT);t(Number(c)/1e6)}catch(u){console.error("Error checking query:",u),t(this.lastValue)}};a()})}dispose(){if(!this.isDisposed&&(this.isDisposed=!0,!!this.trackTimestamp)){for(const e of this.queries)this.gl.deleteQuery(e);this.queries=[],this.queryStates.clear(),this.queryOffsets.clear(),this.lastValue=0,this.activeQuery=null}}}class fd extends sy{constructor(e={}){super(e),this.isWebGLBackend=!0,this.attributeUtils=null,this.extensions=null,this.capabilities=null,this.textureUtils=null,this.bufferRenderer=null,this.gl=null,this.state=null,this.utils=null,this.vaoCache={},this.transformFeedbackCache={},this.discard=!1,this.disjoint=null,this.parallel=null,this._currentContext=null,this._knownBindings=new WeakSet,this._supportsInvalidateFramebuffer=typeof navigator>"u"?!1:/OculusBrowser/g.test(navigator.userAgent),this._xrFramebuffer=null}init(e){super.init(e);const t=this.parameters,s={antialias:e.samples>0,alpha:!0,depth:e.depth,stencil:e.stencil},n=t.context!==void 0?t.context:e.domElement.getContext("webgl2",s);function r(o){o.preventDefault();const a={api:"WebGL",message:o.statusMessage||"Unknown reason",reason:null,originalEvent:o};e.onDeviceLost(a)}this._onContextLost=r,e.domElement.addEventListener("webglcontextlost",r,!1),this.gl=n,this.extensions=new Rw(this),this.capabilities=new Aw(this),this.attributeUtils=new bw(this),this.textureUtils=new vw(this),this.bufferRenderer=new Ew(this),this.state=new Nw(this),this.utils=new Sw(this),this.extensions.get("EXT_color_buffer_float"),this.extensions.get("WEBGL_clip_cull_distance"),this.extensions.get("OES_texture_float_linear"),this.extensions.get("EXT_color_buffer_half_float"),this.extensions.get("WEBGL_multisampled_render_to_texture"),this.extensions.get("WEBGL_render_shared_exponent"),this.extensions.get("WEBGL_multi_draw"),this.extensions.get("OVR_multiview2"),this.disjoint=this.extensions.get("EXT_disjoint_timer_query_webgl2"),this.parallel=this.extensions.get("KHR_parallel_shader_compile")}get coordinateSystem(){return Pi}async getArrayBufferAsync(e){return await this.attributeUtils.getArrayBufferAsync(e)}async waitForGPU(){await this.utils._clientWaitAsync()}async makeXRCompatible(){this.gl.getContextAttributes().xrCompatible!==!0&&await this.gl.makeXRCompatible()}setXRTarget(e){this._xrFramebuffer=e}setXRRenderTargetTextures(e,t,s=null){const n=this.gl;if(this.set(e.texture,{textureGPU:t,glInternalFormat:n.RGBA8}),s!==null){const r=e.stencilBuffer?n.DEPTH24_STENCIL8:n.DEPTH_COMPONENT24;this.set(e.depthTexture,{textureGPU:s,glInternalFormat:r}),this.extensions.has("WEBGL_multisampled_render_to_texture")===!0&&e._autoAllocateDepthBuffer===!0&&e.multiview===!1&&console.warn("THREE.WebGLBackend: Render-to-texture extension was disabled because an external texture was provided"),e._autoAllocateDepthBuffer=!1}}initTimestampQuery(e,t){if(!this.disjoint||!this.trackTimestamp)return;this.timestampQueryPool[e]||(this.timestampQueryPool[e]=new ww(this.gl,e,2048));const s=this.timestampQueryPool[e];s.allocateQueriesForContext(t)!==null&&s.beginQuery(t)}prepareTimestampBuffer(e,t){if(!this.disjoint||!this.trackTimestamp)return;this.timestampQueryPool[e].endQuery(t)}getContext(){return this.gl}beginRender(e){const{state:t}=this,s=this.get(e);if(s.frameCalls=this.renderer.info.render.frameCalls,e.viewport)this.updateViewport(e);else{const{width:r,height:o}=this.getDrawingBufferSize();t.viewport(0,0,r,o)}if(e.scissor){const{x:r,y:o,width:a,height:u}=e.scissorValue;t.scissor(r,e.height-u-o,a,u)}this.initTimestampQuery(bn.RENDER,this.getTimestampUID(e)),s.previousContext=this._currentContext,this._currentContext=e,this._setFramebuffer(e),this.clear(e.clearColor,e.clearDepth,e.clearStencil,e,!1);const n=e.occlusionQueryCount;n>0&&(s.currentOcclusionQueries=s.occlusionQueries,s.currentOcclusionQueryObjects=s.occlusionQueryObjects,s.lastOcclusionObject=null,s.occlusionQueries=new Array(n),s.occlusionQueryObjects=new Array(n),s.occlusionQueryIndex=0)}finishRender(e){const{gl:t,state:s}=this,n=this.get(e),r=n.previousContext;s.resetVertexState();const o=e.occlusionQueryCount;o>0&&(o>n.occlusionQueryIndex&&t.endQuery(t.ANY_SAMPLES_PASSED),this.resolveOccludedAsync(e));const a=e.textures;if(a!==null)for(let u=0;u<a.length;u++){const l=a[u];l.generateMipmaps&&this.generateMipmaps(l)}if(this._currentContext=r,this._resolveRenderTarget(e),r!==null)if(this._setFramebuffer(r),r.viewport)this.updateViewport(r);else{const{width:u,height:l}=this.getDrawingBufferSize();s.viewport(0,0,u,l)}this.prepareTimestampBuffer(bn.RENDER,this.getTimestampUID(e))}resolveOccludedAsync(e){const t=this.get(e),{currentOcclusionQueries:s,currentOcclusionQueryObjects:n}=t;if(s&&n){const r=new WeakSet,{gl:o}=this;t.currentOcclusionQueryObjects=null,t.currentOcclusionQueries=null;const a=()=>{let u=0;for(let l=0;l<s.length;l++){const c=s[l];c!==null&&o.getQueryParameter(c,o.QUERY_RESULT_AVAILABLE)&&(o.getQueryParameter(c,o.QUERY_RESULT)===0&&r.add(n[l]),s[l]=null,o.deleteQuery(c),u++)}u<s.length?requestAnimationFrame(a):t.occluded=r};a()}}isOccluded(e,t){const s=this.get(e);return s.occluded&&s.occluded.has(t)}updateViewport(e){const{state:t}=this,{x:s,y:n,width:r,height:o}=e.viewportValue;t.viewport(s,e.height-o-n,r,o)}setScissorTest(e){this.state.setScissorTest(e)}getClearColor(){const e=super.getClearColor();return e.r*=e.a,e.g*=e.a,e.b*=e.a,e}clear(e,t,s,n=null,r=!0,o=!0){const{gl:a,renderer:u}=this;n===null&&(n={textures:null,clearColorValue:this.getClearColor()});let l=0;if(e&&(l|=a.COLOR_BUFFER_BIT),t&&(l|=a.DEPTH_BUFFER_BIT),s&&(l|=a.STENCIL_BUFFER_BIT),l!==0){let c;n.clearColorValue?c=n.clearColorValue:c=this.getClearColor();const d=u.getClearDepth(),p=u.getClearStencil();if(t&&this.state.setDepthMask(!0),n.textures===null)a.clearColor(c.r,c.g,c.b,c.a),a.clear(l);else{if(r&&this._setFramebuffer(n),e)for(let f=0;f<n.textures.length;f++)f===0?a.clearBufferfv(a.COLOR,f,[c.r,c.g,c.b,c.a]):a.clearBufferfv(a.COLOR,f,[0,0,0,1]);t&&s?a.clearBufferfi(a.DEPTH_STENCIL,0,d,p):t?a.clearBufferfv(a.DEPTH,0,[d]):s&&a.clearBufferiv(a.STENCIL,0,[p]),r&&o&&this._resolveRenderTarget(n)}}}beginCompute(e){const{state:t,gl:s}=this,n=this.get(e);n.frameCalls=this.renderer.info.compute.frameCalls,t.bindFramebuffer(s.FRAMEBUFFER,null),this.initTimestampQuery(bn.COMPUTE,this.getTimestampUID(e))}compute(e,t,s,n,r=null){const{state:o,gl:a}=this;this.discard===!1&&(a.enable(a.RASTERIZER_DISCARD),this.discard=!0);const{programGPU:u,transformBuffers:l,attributes:c}=this.get(n),d=this._getVaoKey(c),p=this.vaoCache[d];p===void 0?this.vaoCache[d]=this._createVao(c):o.setVertexState(p),o.useProgram(u),this._bindUniforms(s);const f=this._getTransformFeedback(l);a.bindTransformFeedback(a.TRANSFORM_FEEDBACK,f),a.beginTransformFeedback(a.POINTS),r=r!==null?r:t.count,Array.isArray(r)&&(Bt("WebGLBackend.compute(): The count parameter must be a single number, not an array."),r=r[0]),c[0].isStorageInstancedBufferAttribute?a.drawArraysInstanced(a.POINTS,0,1,r):a.drawArrays(a.POINTS,0,r),a.endTransformFeedback(),a.bindTransformFeedback(a.TRANSFORM_FEEDBACK,null);for(let m=0;m<l.length;m++){const y=l[m];y.pbo&&this.has(y.pbo)&&this.textureUtils.copyBufferToTexture(y.transformBuffer,y.pbo),y.switchBuffers()}}finishCompute(e){const t=this.gl;this.discard=!1,t.disable(t.RASTERIZER_DISCARD),this.prepareTimestampBuffer(bn.COMPUTE,this.getTimestampUID(e)),this._currentContext&&this._setFramebuffer(this._currentContext)}_isRenderCameraDepthArray(e){return e.depthTexture&&e.depthTexture.isArrayTexture&&e.camera.isArrayCamera}draw(e){const{object:t,pipeline:s,material:n,context:r,hardwareClippingPlanes:o}=e,{programGPU:a}=this.get(s),{gl:u,state:l}=this,c=this.get(r),d=e.getDrawParameters();if(d===null)return;this._bindUniforms(e.getBindings());const p=t.isMesh&&t.matrixWorld.determinant()<0;l.setMaterial(n,p,o),l.useProgram(a);const f=e.getAttributes(),m=this.get(f);let y=m.vaoGPU;if(y===void 0){const V=this._getVaoKey(f);y=this.vaoCache[V],y===void 0&&(y=this._createVao(f),this.vaoCache[V]=y,m.vaoGPU=y)}const x=e.getIndex(),S=x!==null?this.get(x).bufferGPU:null;l.setVertexState(y,S);const R=c.lastOcclusionObject;if(R!==t&&R!==void 0){if(R!==null&&R.occlusionTest===!0&&(u.endQuery(u.ANY_SAMPLES_PASSED),c.occlusionQueryIndex++),t.occlusionTest===!0){const V=u.createQuery();u.beginQuery(u.ANY_SAMPLES_PASSED,V),c.occlusionQueries[c.occlusionQueryIndex]=V,c.occlusionQueryObjects[c.occlusionQueryIndex]=t}c.lastOcclusionObject=t}const C=this.bufferRenderer;t.isPoints?C.mode=u.POINTS:t.isLineSegments?C.mode=u.LINES:t.isLine?C.mode=u.LINE_STRIP:t.isLineLoop?C.mode=u.LINE_LOOP:n.wireframe===!0?(l.setLineWidth(n.wireframeLinewidth*this.renderer.getPixelRatio()),C.mode=u.LINES):C.mode=u.TRIANGLES;const{vertexCount:D,instanceCount:P}=d;let{firstVertex:F}=d;if(C.object=t,x!==null){F*=x.array.BYTES_PER_ELEMENT;const V=this.get(x);C.index=x.count,C.type=V.type}else C.index=0;const B=()=>{t.isBatchedMesh?t._multiDrawInstances!==null?(Bt("THREE.WebGLBackend: renderMultiDrawInstances has been deprecated and will be removed in r184. Append to renderMultiDraw arguments and use indirection."),C.renderMultiDrawInstances(t._multiDrawStarts,t._multiDrawCounts,t._multiDrawCount,t._multiDrawInstances)):this.hasFeature("WEBGL_multi_draw")?C.renderMultiDraw(t._multiDrawStarts,t._multiDrawCounts,t._multiDrawCount):Bt("THREE.WebGLRenderer: WEBGL_multi_draw not supported."):P>1?C.renderInstances(F,D,P):C.render(F,D)};if(e.camera.isArrayCamera===!0&&e.camera.cameras.length>0&&e.camera.isMultiViewCamera===!1){const V=this.get(e.camera),G=e.camera.cameras,te=e.getBindingGroup("cameraIndex").bindings[0];if(V.indexesGPU===void 0||V.indexesGPU.length!==G.length){const Qe=new Uint32Array([0,0,0,0]),cs=[];for(let ot=0,Rt=G.length;ot<Rt;ot++){const Ps=u.createBuffer();Qe[0]=ot,u.bindBuffer(u.UNIFORM_BUFFER,Ps),u.bufferData(u.UNIFORM_BUFFER,Qe,u.STATIC_DRAW),cs.push(Ps)}V.indexesGPU=cs}const se=this.get(te),ye=this.renderer.getPixelRatio(),de=this._currentContext.renderTarget,De=this._isRenderCameraDepthArray(this._currentContext),vt=this._currentContext.activeCubeFace;if(De){const Qe=this.get(de.depthTexture);if(Qe.clearedRenderId!==this.renderer._nodes.nodeFrame.renderId){Qe.clearedRenderId=this.renderer._nodes.nodeFrame.renderId;const{stencilBuffer:cs}=de;for(let ot=0,Rt=G.length;ot<Rt;ot++)this.renderer._activeCubeFace=ot,this._currentContext.activeCubeFace=ot,this._setFramebuffer(this._currentContext),this.clear(!1,!0,cs,this._currentContext,!1,!1);this.renderer._activeCubeFace=vt,this._currentContext.activeCubeFace=vt}}for(let Qe=0,cs=G.length;Qe<cs;Qe++){const ot=G[Qe];if(t.layers.test(ot.layers)){De&&(this.renderer._activeCubeFace=Qe,this._currentContext.activeCubeFace=Qe,this._setFramebuffer(this._currentContext));const Rt=ot.viewport;if(Rt!==void 0){const Ps=Rt.x*ye,oy=Rt.y*ye,ay=Rt.width*ye,ql=Rt.height*ye;l.viewport(Math.floor(Ps),Math.floor(e.context.height-ql-oy),Math.floor(ay),Math.floor(ql))}l.bindBufferBase(u.UNIFORM_BUFFER,se.index,V.indexesGPU[Qe]),B()}this._currentContext.activeCubeFace=vt,this.renderer._activeCubeFace=vt}}else B()}needsRenderUpdate(){return!1}getRenderCacheKey(){return""}createDefaultTexture(e){this.textureUtils.createDefaultTexture(e)}createTexture(e,t){this.textureUtils.createTexture(e,t)}updateTexture(e,t){this.textureUtils.updateTexture(e,t)}generateMipmaps(e){this.textureUtils.generateMipmaps(e)}destroyTexture(e){this.textureUtils.destroyTexture(e)}async copyTextureToBuffer(e,t,s,n,r,o){return this.textureUtils.copyTextureToBuffer(e,t,s,n,r,o)}createSampler(){}destroySampler(){}createNodeBuilder(e,t){return new _w(e,t)}createProgram(e){const t=this.gl,{stage:s,code:n}=e,r=s==="fragment"?t.createShader(t.FRAGMENT_SHADER):t.createShader(t.VERTEX_SHADER);t.shaderSource(r,n),t.compileShader(r),this.set(e,{shaderGPU:r})}destroyProgram(e){this.delete(e)}createRenderPipeline(e,t){const s=this.gl,n=e.pipeline,{fragmentProgram:r,vertexProgram:o}=n,a=s.createProgram(),u=this.get(r).shaderGPU,l=this.get(o).shaderGPU;if(s.attachShader(a,u),s.attachShader(a,l),s.linkProgram(a),this.set(n,{programGPU:a,fragmentShader:u,vertexShader:l}),t!==null&&this.parallel){const c=new Promise(d=>{const p=this.parallel,f=()=>{s.getProgramParameter(a,p.COMPLETION_STATUS_KHR)?(this._completeCompile(e,n),d()):requestAnimationFrame(f)};f()});t.push(c);return}this._completeCompile(e,n)}_handleSource(e,t){const s=e.split(`
`),n=[],r=Math.max(t-6,0),o=Math.min(t+6,s.length);for(let a=r;a<o;a++){const u=a+1;n.push(`${u===t?">":" "} ${u}: ${s[a]}`)}return n.join(`
`)}_getShaderErrors(e,t,s){const n=e.getShaderParameter(t,e.COMPILE_STATUS),o=(e.getShaderInfoLog(t)||"").trim();if(n&&o==="")return"";const a=/ERROR: 0:(\d+)/.exec(o);if(a){const u=parseInt(a[1]);return s.toUpperCase()+`

`+o+`

`+this._handleSource(e.getShaderSource(t),u)}else return o}_logProgramError(e,t,s){if(this.renderer.debug.checkShaderErrors){const n=this.gl,o=(n.getProgramInfoLog(e)||"").trim();if(n.getProgramParameter(e,n.LINK_STATUS)===!1)if(typeof this.renderer.debug.onShaderError=="function")this.renderer.debug.onShaderError(n,e,s,t);else{const a=this._getShaderErrors(n,s,"vertex"),u=this._getShaderErrors(n,t,"fragment");console.error("THREE.WebGLProgram: Shader Error "+n.getError()+" - VALIDATE_STATUS "+n.getProgramParameter(e,n.VALIDATE_STATUS)+`

Program Info Log: `+o+`
`+a+`
`+u)}else o!==""&&console.warn("THREE.WebGLProgram: Program Info Log:",o)}}_completeCompile(e,t){const{state:s,gl:n}=this,r=this.get(t),{programGPU:o,fragmentShader:a,vertexShader:u}=r;n.getProgramParameter(o,n.LINK_STATUS)===!1&&this._logProgramError(o,a,u),s.useProgram(o);const l=e.getBindings();this._setupBindings(l,o),this.set(t,{programGPU:o})}createComputePipeline(e,t){const{state:s,gl:n}=this,r={stage:"fragment",code:`#version 300 es
precision highp float;
void main() {}`};this.createProgram(r);const{computeProgram:o}=e,a=n.createProgram(),u=this.get(r).shaderGPU,l=this.get(o).shaderGPU,c=o.transforms,d=[],p=[];for(let x=0;x<c.length;x++){const S=c[x];d.push(S.varyingName),p.push(S.attributeNode)}n.attachShader(a,u),n.attachShader(a,l),n.transformFeedbackVaryings(a,d,n.SEPARATE_ATTRIBS),n.linkProgram(a),n.getProgramParameter(a,n.LINK_STATUS)===!1&&this._logProgramError(a,u,l),s.useProgram(a),this._setupBindings(t,a);const f=o.attributes,m=[],y=[];for(let x=0;x<f.length;x++){const S=f[x].node.attribute;m.push(S),this.has(S)||this.attributeUtils.createAttribute(S,n.ARRAY_BUFFER)}for(let x=0;x<p.length;x++){const S=p[x].attribute;this.has(S)||this.attributeUtils.createAttribute(S,n.ARRAY_BUFFER);const R=this.get(S);y.push(R)}this.set(e,{programGPU:a,transformBuffers:y,attributes:m})}createBindings(e,t){if(this._knownBindings.has(t)===!1){this._knownBindings.add(t);let s=0,n=0;for(const r of t){this.set(r,{textures:n,uniformBuffers:s});for(const o of r.bindings)o.isUniformBuffer&&s++,o.isSampledTexture&&n++}}this.updateBindings(e,t)}updateBindings(e){const{gl:t}=this,s=this.get(e);let n=s.uniformBuffers,r=s.textures;for(const o of e.bindings){const a=this.get(o);if(o.isUniformsGroup||o.isUniformBuffer){const u=o.buffer;let{bufferGPU:l}=this.get(u);l===void 0?(l=t.createBuffer(),t.bindBuffer(t.UNIFORM_BUFFER,l),t.bufferData(t.UNIFORM_BUFFER,u,t.DYNAMIC_DRAW),this.set(u,{bufferGPU:l})):(t.bindBuffer(t.UNIFORM_BUFFER,l),t.bufferSubData(t.UNIFORM_BUFFER,0,u)),a.index=n++,a.bufferGPU=l,this.set(o,a)}else if(o.isSampledTexture){const{textureGPU:u,glTextureType:l}=this.get(o.texture);a.index=r++,a.textureGPU=u,a.glTextureType=l,this.set(o,a)}}}updateBinding(e){const t=this.gl;if(e.isUniformsGroup||e.isUniformBuffer){const n=this.get(e).bufferGPU,r=e.buffer;t.bindBuffer(t.UNIFORM_BUFFER,n),t.bufferData(t.UNIFORM_BUFFER,r,t.DYNAMIC_DRAW)}}createIndexAttribute(e){const t=this.gl;this.attributeUtils.createAttribute(e,t.ELEMENT_ARRAY_BUFFER)}createAttribute(e){if(this.has(e))return;const t=this.gl;this.attributeUtils.createAttribute(e,t.ARRAY_BUFFER)}createStorageAttribute(e){if(this.has(e))return;const t=this.gl;this.attributeUtils.createAttribute(e,t.ARRAY_BUFFER)}updateAttribute(e){this.attributeUtils.updateAttribute(e)}destroyAttribute(e){this.attributeUtils.destroyAttribute(e)}hasFeature(e){const t=Object.keys(pd).filter(n=>pd[n]===e),s=this.extensions;for(let n=0;n<t.length;n++)if(s.has(t[n]))return!0;return!1}getMaxAnisotropy(){return this.capabilities.getMaxAnisotropy()}copyTextureToTexture(e,t,s=null,n=null,r=0,o=0){this.textureUtils.copyTextureToTexture(e,t,s,n,r,o)}copyFramebufferToTexture(e,t,s){this.textureUtils.copyFramebufferToTexture(e,t,s)}_setFramebuffer(e){const{gl:t,state:s}=this;let n=null;if(e.textures!==null){const r=e.renderTarget,o=this.get(r),{samples:a,depthBuffer:u,stencilBuffer:l}=r,c=r.isWebGLCubeRenderTarget===!0,d=r.isRenderTarget3D===!0,p=r.depth>1,f=r.isXRRenderTarget===!0,m=f===!0&&r._hasExternalTextures===!0;let y=o.msaaFrameBuffer,x=o.depthRenderbuffer;const S=this.extensions.get("WEBGL_multisampled_render_to_texture"),R=this.extensions.get("OVR_multiview2"),C=this._useMultisampledExtension(r),D=Qm(e);let P;if(c?(o.cubeFramebuffers||(o.cubeFramebuffers={}),P=o.cubeFramebuffers[D]):f&&m===!1?P=this._xrFramebuffer:(o.framebuffers||(o.framebuffers={}),P=o.framebuffers[D]),P===void 0){P=t.createFramebuffer(),s.bindFramebuffer(t.FRAMEBUFFER,P);const F=e.textures,B=[];if(c){o.cubeFramebuffers[D]=P;const{textureGPU:G}=this.get(F[0]),te=this.renderer._activeCubeFace,se=this.renderer._activeMipmapLevel;t.framebufferTexture2D(t.FRAMEBUFFER,t.COLOR_ATTACHMENT0,t.TEXTURE_CUBE_MAP_POSITIVE_X+te,G,se)}else{o.framebuffers[D]=P;for(let G=0;G<F.length;G++){const te=F[G],se=this.get(te);se.renderTarget=e.renderTarget,se.cacheKey=D;const ye=t.COLOR_ATTACHMENT0+G;if(r.multiview)R.framebufferTextureMultisampleMultiviewOVR(t.FRAMEBUFFER,ye,se.textureGPU,0,a,0,2);else if(d||p){const de=this.renderer._activeCubeFace,De=this.renderer._activeMipmapLevel;t.framebufferTextureLayer(t.FRAMEBUFFER,ye,se.textureGPU,De,de)}else if(C)S.framebufferTexture2DMultisampleEXT(t.FRAMEBUFFER,ye,t.TEXTURE_2D,se.textureGPU,0,a);else{const de=this.renderer._activeMipmapLevel;t.framebufferTexture2D(t.FRAMEBUFFER,ye,t.TEXTURE_2D,se.textureGPU,de)}}}const V=l?t.DEPTH_STENCIL_ATTACHMENT:t.DEPTH_ATTACHMENT;if(r._autoAllocateDepthBuffer===!0){const G=t.createRenderbuffer();this.textureUtils.setupRenderBufferStorage(G,e,0,C),o.xrDepthRenderbuffer=G,B.push(l?t.DEPTH_STENCIL_ATTACHMENT:t.DEPTH_ATTACHMENT),t.bindRenderbuffer(t.RENDERBUFFER,G),t.framebufferRenderbuffer(t.FRAMEBUFFER,V,t.RENDERBUFFER,G)}else if(e.depthTexture!==null){B.push(l?t.DEPTH_STENCIL_ATTACHMENT:t.DEPTH_ATTACHMENT);const G=this.get(e.depthTexture);if(G.renderTarget=e.renderTarget,G.cacheKey=D,r.multiview)R.framebufferTextureMultisampleMultiviewOVR(t.FRAMEBUFFER,V,G.textureGPU,0,a,0,2);else if(m&&C)S.framebufferTexture2DMultisampleEXT(t.FRAMEBUFFER,V,t.TEXTURE_2D,G.textureGPU,0,a);else if(e.depthTexture.isArrayTexture){const te=this.renderer._activeCubeFace;t.framebufferTextureLayer(t.FRAMEBUFFER,V,G.textureGPU,0,te)}else t.framebufferTexture2D(t.FRAMEBUFFER,V,t.TEXTURE_2D,G.textureGPU,0)}o.depthInvalidationArray=B}else{if(this._isRenderCameraDepthArray(e)){s.bindFramebuffer(t.FRAMEBUFFER,P);const B=this.renderer._activeCubeFace,V=this.get(e.depthTexture),G=l?t.DEPTH_STENCIL_ATTACHMENT:t.DEPTH_ATTACHMENT;t.framebufferTextureLayer(t.FRAMEBUFFER,G,V.textureGPU,0,B)}if((f||C||r.multiview)&&r._isOpaqueFramebuffer!==!0){s.bindFramebuffer(t.FRAMEBUFFER,P);const B=this.get(e.textures[0]);r.multiview?R.framebufferTextureMultisampleMultiviewOVR(t.FRAMEBUFFER,t.COLOR_ATTACHMENT0,B.textureGPU,0,a,0,2):C?S.framebufferTexture2DMultisampleEXT(t.FRAMEBUFFER,t.COLOR_ATTACHMENT0,t.TEXTURE_2D,B.textureGPU,0,a):t.framebufferTexture2D(t.FRAMEBUFFER,t.COLOR_ATTACHMENT0,t.TEXTURE_2D,B.textureGPU,0);const V=l?t.DEPTH_STENCIL_ATTACHMENT:t.DEPTH_ATTACHMENT;if(r._autoAllocateDepthBuffer===!0){const G=o.xrDepthRenderbuffer;t.bindRenderbuffer(t.RENDERBUFFER,G),t.framebufferRenderbuffer(t.FRAMEBUFFER,V,t.RENDERBUFFER,G)}else{const G=this.get(e.depthTexture);r.multiview?R.framebufferTextureMultisampleMultiviewOVR(t.FRAMEBUFFER,V,G.textureGPU,0,a,0,2):C?S.framebufferTexture2DMultisampleEXT(t.FRAMEBUFFER,V,t.TEXTURE_2D,G.textureGPU,0,a):t.framebufferTexture2D(t.FRAMEBUFFER,V,t.TEXTURE_2D,G.textureGPU,0)}}}if(a>0&&C===!1&&!r.multiview){if(y===void 0){const F=[];y=t.createFramebuffer(),s.bindFramebuffer(t.FRAMEBUFFER,y);const B=[],V=e.textures;for(let G=0;G<V.length;G++){B[G]=t.createRenderbuffer(),t.bindRenderbuffer(t.RENDERBUFFER,B[G]),F.push(t.COLOR_ATTACHMENT0+G);const te=e.textures[G],se=this.get(te);t.renderbufferStorageMultisample(t.RENDERBUFFER,a,se.glInternalFormat,e.width,e.height),t.framebufferRenderbuffer(t.FRAMEBUFFER,t.COLOR_ATTACHMENT0+G,t.RENDERBUFFER,B[G])}if(t.bindRenderbuffer(t.RENDERBUFFER,null),o.msaaFrameBuffer=y,o.msaaRenderbuffers=B,u&&x===void 0){x=t.createRenderbuffer(),this.textureUtils.setupRenderBufferStorage(x,e,a),o.depthRenderbuffer=x;const G=l?t.DEPTH_STENCIL_ATTACHMENT:t.DEPTH_ATTACHMENT;F.push(G)}o.invalidationArray=F}n=o.msaaFrameBuffer}else n=P;s.drawBuffers(e,P)}s.bindFramebuffer(t.FRAMEBUFFER,n)}_getVaoKey(e){let t="";for(let s=0;s<e.length;s++){const n=this.get(e[s]);t+=":"+n.id}return t}_createVao(e){const{gl:t}=this,s=t.createVertexArray();t.bindVertexArray(s);for(let n=0;n<e.length;n++){const r=e[n],o=this.get(r);t.bindBuffer(t.ARRAY_BUFFER,o.bufferGPU),t.enableVertexAttribArray(n);let a,u;r.isInterleavedBufferAttribute===!0?(a=r.data.stride*o.bytesPerElement,u=r.offset*o.bytesPerElement):(a=0,u=0),o.isInteger?t.vertexAttribIPointer(n,r.itemSize,o.type,a,u):t.vertexAttribPointer(n,r.itemSize,o.type,r.normalized,a,u),r.isInstancedBufferAttribute&&!r.isInterleavedBufferAttribute?t.vertexAttribDivisor(n,r.meshPerAttribute):r.isInterleavedBufferAttribute&&r.data.isInstancedInterleavedBuffer&&t.vertexAttribDivisor(n,r.data.meshPerAttribute)}return t.bindBuffer(t.ARRAY_BUFFER,null),s}_getTransformFeedback(e){let t="";for(let r=0;r<e.length;r++)t+=":"+e[r].id;let s=this.transformFeedbackCache[t];if(s!==void 0)return s;const{gl:n}=this;s=n.createTransformFeedback(),n.bindTransformFeedback(n.TRANSFORM_FEEDBACK,s);for(let r=0;r<e.length;r++){const o=e[r];n.bindBufferBase(n.TRANSFORM_FEEDBACK_BUFFER,r,o.transformBuffer)}return n.bindTransformFeedback(n.TRANSFORM_FEEDBACK,null),this.transformFeedbackCache[t]=s,s}_setupBindings(e,t){const s=this.gl;for(const n of e)for(const r of n.bindings){const a=this.get(r).index;if(r.isUniformsGroup||r.isUniformBuffer){const u=s.getUniformBlockIndex(t,r.name);s.uniformBlockBinding(t,u,a)}else if(r.isSampledTexture){const u=s.getUniformLocation(t,r.name);s.uniform1i(u,a)}}}_bindUniforms(e){const{gl:t,state:s}=this;for(const n of e)for(const r of n.bindings){const o=this.get(r),a=o.index;r.isUniformsGroup||r.isUniformBuffer?s.bindBufferBase(t.UNIFORM_BUFFER,a,o.bufferGPU):r.isSampledTexture&&s.bindTexture(o.glTextureType,o.textureGPU,t.TEXTURE0+a)}}_resolveRenderTarget(e){const{gl:t,state:s}=this,n=e.renderTarget;if(e.textures!==null&&n){const r=this.get(n);if(n.samples>0&&this._useMultisampledExtension(n)===!1){const o=r.framebuffers[e.getCacheKey()];let a=t.COLOR_BUFFER_BIT;n.resolveDepthBuffer&&(n.depthBuffer&&(a|=t.DEPTH_BUFFER_BIT),n.stencilBuffer&&n.resolveStencilBuffer&&(a|=t.STENCIL_BUFFER_BIT));const u=r.msaaFrameBuffer,l=r.msaaRenderbuffers,c=e.textures,d=c.length>1;if(s.bindFramebuffer(t.READ_FRAMEBUFFER,u),s.bindFramebuffer(t.DRAW_FRAMEBUFFER,o),d)for(let p=0;p<c.length;p++)t.framebufferRenderbuffer(t.READ_FRAMEBUFFER,t.COLOR_ATTACHMENT0+p,t.RENDERBUFFER,null),t.framebufferTexture2D(t.DRAW_FRAMEBUFFER,t.COLOR_ATTACHMENT0+p,t.TEXTURE_2D,null,0);for(let p=0;p<c.length;p++){if(d){const{textureGPU:f}=this.get(c[p]);t.framebufferRenderbuffer(t.READ_FRAMEBUFFER,t.COLOR_ATTACHMENT0,t.RENDERBUFFER,l[p]),t.framebufferTexture2D(t.DRAW_FRAMEBUFFER,t.COLOR_ATTACHMENT0,t.TEXTURE_2D,f,0)}if(e.scissor){const{x:f,y:m,width:y,height:x}=e.scissorValue,S=e.height-x-m;t.blitFramebuffer(f,S,f+y,S+x,f,S,f+y,S+x,a,t.NEAREST)}else t.blitFramebuffer(0,0,e.width,e.height,0,0,e.width,e.height,a,t.NEAREST)}if(d)for(let p=0;p<c.length;p++){const{textureGPU:f}=this.get(c[p]);t.framebufferRenderbuffer(t.READ_FRAMEBUFFER,t.COLOR_ATTACHMENT0+p,t.RENDERBUFFER,l[p]),t.framebufferTexture2D(t.DRAW_FRAMEBUFFER,t.COLOR_ATTACHMENT0+p,t.TEXTURE_2D,f,0)}this._supportsInvalidateFramebuffer===!0&&t.invalidateFramebuffer(t.READ_FRAMEBUFFER,r.invalidationArray)}else if(n.resolveDepthBuffer===!1&&r.framebuffers){const o=r.framebuffers[e.getCacheKey()];s.bindFramebuffer(t.DRAW_FRAMEBUFFER,o),t.invalidateFramebuffer(t.DRAW_FRAMEBUFFER,r.depthInvalidationArray)}}}_useMultisampledExtension(e){return e.multiview===!0?!0:e.samples>0&&this.extensions.has("WEBGL_multisampled_render_to_texture")===!0&&e._autoAllocateDepthBuffer!==!1}dispose(){const e=this.extensions.get("WEBGL_lose_context");e&&e.loseContext(),this.renderer.domElement.removeEventListener("webglcontextlost",this._onContextLost)}}const Rn={PointList:"point-list",LineList:"line-list",LineStrip:"line-strip",TriangleList:"triangle-list",TriangleStrip:"triangle-strip"},ze={Never:"never",Less:"less",Equal:"equal",LessEqual:"less-equal",Greater:"greater",NotEqual:"not-equal",GreaterEqual:"greater-equal",Always:"always"},Ye={Store:"store"},ie={Load:"load",Clear:"clear"},md={CCW:"ccw",CW:"cw"},gd={None:"none",Back:"back"},In={Uint16:"uint16",Uint32:"uint32"},T={R8Unorm:"r8unorm",R8Snorm:"r8snorm",R8Uint:"r8uint",R8Sint:"r8sint",R16Uint:"r16uint",R16Sint:"r16sint",R16Float:"r16float",RG8Unorm:"rg8unorm",RG8Snorm:"rg8snorm",RG8Uint:"rg8uint",RG8Sint:"rg8sint",R32Uint:"r32uint",R32Sint:"r32sint",R32Float:"r32float",RG16Uint:"rg16uint",RG16Sint:"rg16sint",RG16Float:"rg16float",RGBA8Unorm:"rgba8unorm",RGBA8UnormSRGB:"rgba8unorm-srgb",RGBA8Snorm:"rgba8snorm",RGBA8Uint:"rgba8uint",RGBA8Sint:"rgba8sint",BGRA8Unorm:"bgra8unorm",BGRA8UnormSRGB:"bgra8unorm-srgb",RGB9E5UFloat:"rgb9e5ufloat",RGB10A2Unorm:"rgb10a2unorm",RG11B10UFloat:"rg11b10ufloat",RG32Uint:"rg32uint",RG32Sint:"rg32sint",RG32Float:"rg32float",RGBA16Uint:"rgba16uint",RGBA16Sint:"rgba16sint",RGBA16Float:"rgba16float",RGBA32Uint:"rgba32uint",RGBA32Sint:"rgba32sint",RGBA32Float:"rgba32float",Depth16Unorm:"depth16unorm",Depth24Plus:"depth24plus",Depth24PlusStencil8:"depth24plus-stencil8",Depth32Float:"depth32float",Depth32FloatStencil8:"depth32float-stencil8",BC1RGBAUnorm:"bc1-rgba-unorm",BC1RGBAUnormSRGB:"bc1-rgba-unorm-srgb",BC2RGBAUnorm:"bc2-rgba-unorm",BC2RGBAUnormSRGB:"bc2-rgba-unorm-srgb",BC3RGBAUnorm:"bc3-rgba-unorm",BC3RGBAUnormSRGB:"bc3-rgba-unorm-srgb",BC4RUnorm:"bc4-r-unorm",BC4RSnorm:"bc4-r-snorm",BC5RGUnorm:"bc5-rg-unorm",BC5RGSnorm:"bc5-rg-snorm",BC6HRGBUFloat:"bc6h-rgb-ufloat",BC6HRGBFloat:"bc6h-rgb-float",BC7RGBAUnorm:"bc7-rgba-unorm",BC7RGBAUnormSRGB:"bc7-rgba-unorm-srgb",ETC2RGB8Unorm:"etc2-rgb8unorm",ETC2RGB8UnormSRGB:"etc2-rgb8unorm-srgb",ETC2RGB8A1Unorm:"etc2-rgb8a1unorm",ETC2RGB8A1UnormSRGB:"etc2-rgb8a1unorm-srgb",ETC2RGBA8Unorm:"etc2-rgba8unorm",ETC2RGBA8UnormSRGB:"etc2-rgba8unorm-srgb",EACR11Unorm:"eac-r11unorm",EACR11Snorm:"eac-r11snorm",EACRG11Unorm:"eac-rg11unorm",EACRG11Snorm:"eac-rg11snorm",ASTC4x4Unorm:"astc-4x4-unorm",ASTC4x4UnormSRGB:"astc-4x4-unorm-srgb",ASTC5x4Unorm:"astc-5x4-unorm",ASTC5x4UnormSRGB:"astc-5x4-unorm-srgb",ASTC5x5Unorm:"astc-5x5-unorm",ASTC5x5UnormSRGB:"astc-5x5-unorm-srgb",ASTC6x5Unorm:"astc-6x5-unorm",ASTC6x5UnormSRGB:"astc-6x5-unorm-srgb",ASTC6x6Unorm:"astc-6x6-unorm",ASTC6x6UnormSRGB:"astc-6x6-unorm-srgb",ASTC8x5Unorm:"astc-8x5-unorm",ASTC8x5UnormSRGB:"astc-8x5-unorm-srgb",ASTC8x6Unorm:"astc-8x6-unorm",ASTC8x6UnormSRGB:"astc-8x6-unorm-srgb",ASTC8x8Unorm:"astc-8x8-unorm",ASTC8x8UnormSRGB:"astc-8x8-unorm-srgb",ASTC10x5Unorm:"astc-10x5-unorm",ASTC10x5UnormSRGB:"astc-10x5-unorm-srgb",ASTC10x6Unorm:"astc-10x6-unorm",ASTC10x6UnormSRGB:"astc-10x6-unorm-srgb",ASTC10x8Unorm:"astc-10x8-unorm",ASTC10x8UnormSRGB:"astc-10x8-unorm-srgb",ASTC10x10Unorm:"astc-10x10-unorm",ASTC10x10UnormSRGB:"astc-10x10-unorm-srgb",ASTC12x10Unorm:"astc-12x10-unorm",ASTC12x10UnormSRGB:"astc-12x10-unorm-srgb",ASTC12x12Unorm:"astc-12x12-unorm",ASTC12x12UnormSRGB:"astc-12x12-unorm-srgb"},ca={ClampToEdge:"clamp-to-edge",Repeat:"repeat",MirrorRepeat:"mirror-repeat"},$s={Linear:"linear",Nearest:"nearest"},ee={Zero:"zero",One:"one",Src:"src",OneMinusSrc:"one-minus-src",SrcAlpha:"src-alpha",OneMinusSrcAlpha:"one-minus-src-alpha",Dst:"dst",OneMinusDst:"one-minus-dst",DstAlpha:"dst-alpha",OneMinusDstAlpha:"one-minus-dst-alpha",SrcAlphaSaturated:"src-alpha-saturated",Constant:"constant",OneMinusConstant:"one-minus-constant"},Vs={Add:"add",Subtract:"subtract",ReverseSubtract:"reverse-subtract",Min:"min",Max:"max"},yd={None:0,All:15},ds={Keep:"keep",Zero:"zero",Replace:"replace",Invert:"invert",IncrementClamp:"increment-clamp",DecrementClamp:"decrement-clamp",IncrementWrap:"increment-wrap",DecrementWrap:"decrement-wrap"},da={Storage:"storage",ReadOnlyStorage:"read-only-storage"},ha={WriteOnly:"write-only",ReadOnly:"read-only",ReadWrite:"read-write"},_d={NonFiltering:"non-filtering",Comparison:"comparison"},Os={Float:"float",UnfilterableFloat:"unfilterable-float",Depth:"depth",SInt:"sint",UInt:"uint"},Td={TwoD:"2d",ThreeD:"3d"},Pe={TwoD:"2d",TwoDArray:"2d-array",Cube:"cube",ThreeD:"3d"},Cw={All:"all"},pi={Vertex:"vertex",Instance:"instance"},au={CoreFeaturesAndLimits:"core-features-and-limits",DepthClipControl:"depth-clip-control",Depth32FloatStencil8:"depth32float-stencil8",TextureCompressionBC:"texture-compression-bc",TextureCompressionBCSliced3D:"texture-compression-bc-sliced-3d",TextureCompressionETC2:"texture-compression-etc2",TextureCompressionASTC:"texture-compression-astc",TextureCompressionASTCSliced3D:"texture-compression-astc-sliced-3d",TimestampQuery:"timestamp-query",IndirectFirstInstance:"indirect-first-instance",ShaderF16:"shader-f16",RG11B10UFloat:"rg11b10ufloat-renderable",BGRA8UNormStorage:"bgra8unorm-storage",Float32Filterable:"float32-filterable",Float32Blendable:"float32-blendable",ClipDistances:"clip-distances",DualSourceBlending:"dual-source-blending",Subgroups:"subgroups",TextureFormatsTier1:"texture-formats-tier1",TextureFormatsTier2:"texture-formats-tier2"};class Mw extends ey{constructor(e,t,s){super(e,t?t.value:null),this.textureNode=t,this.groupNode=s}update(){this.texture=this.textureNode.value}}class Bw extends Kg{constructor(e,t){super(e,t?t.array:null),this.attribute=t,this.isStorageBuffer=!0}}let Pw=0;class Fw extends Bw{constructor(e,t){super("StorageBuffer_"+Pw++,e?e.value:null),this.nodeUniform=e,this.access=e?e.access:$e.READ_WRITE,this.groupNode=t}get buffer(){return this.nodeUniform.value}}class Lw extends Ms{constructor(e){super(),this.device=e;const t=`
struct VarysStruct {
	@builtin( position ) Position: vec4<f32>,
	@location( 0 ) vTex : vec2<f32>
};

@vertex
fn main( @builtin( vertex_index ) vertexIndex : u32 ) -> VarysStruct {

	var Varys : VarysStruct;

	var pos = array< vec2<f32>, 4 >(
		vec2<f32>( -1.0,  1.0 ),
		vec2<f32>(  1.0,  1.0 ),
		vec2<f32>( -1.0, -1.0 ),
		vec2<f32>(  1.0, -1.0 )
	);

	var tex = array< vec2<f32>, 4 >(
		vec2<f32>( 0.0, 0.0 ),
		vec2<f32>( 1.0, 0.0 ),
		vec2<f32>( 0.0, 1.0 ),
		vec2<f32>( 1.0, 1.0 )
	);

	Varys.vTex = tex[ vertexIndex ];
	Varys.Position = vec4<f32>( pos[ vertexIndex ], 0.0, 1.0 );

	return Varys;

}
`,s=`
@group( 0 ) @binding( 0 )
var imgSampler : sampler;

@group( 0 ) @binding( 1 )
var img : texture_2d<f32>;

@fragment
fn main( @location( 0 ) vTex : vec2<f32> ) -> @location( 0 ) vec4<f32> {

	return textureSample( img, imgSampler, vTex );

}
`,n=`
@group( 0 ) @binding( 0 )
var imgSampler : sampler;

@group( 0 ) @binding( 1 )
var img : texture_2d<f32>;

@fragment
fn main( @location( 0 ) vTex : vec2<f32> ) -> @location( 0 ) vec4<f32> {

	return textureSample( img, imgSampler, vec2( vTex.x, 1.0 - vTex.y ) );

}
`;this.mipmapSampler=e.createSampler({minFilter:$s.Linear}),this.flipYSampler=e.createSampler({minFilter:$s.Nearest}),this.transferPipelines={},this.flipYPipelines={},this.mipmapVertexShaderModule=e.createShaderModule({label:"mipmapVertex",code:t}),this.mipmapFragmentShaderModule=e.createShaderModule({label:"mipmapFragment",code:s}),this.flipYFragmentShaderModule=e.createShaderModule({label:"flipYFragment",code:n})}getTransferPipeline(e){let t=this.transferPipelines[e];return t===void 0&&(t=this.device.createRenderPipeline({label:`mipmap-${e}`,vertex:{module:this.mipmapVertexShaderModule,entryPoint:"main"},fragment:{module:this.mipmapFragmentShaderModule,entryPoint:"main",targets:[{format:e}]},primitive:{topology:Rn.TriangleStrip,stripIndexFormat:In.Uint32},layout:"auto"}),this.transferPipelines[e]=t),t}getFlipYPipeline(e){let t=this.flipYPipelines[e];return t===void 0&&(t=this.device.createRenderPipeline({label:`flipY-${e}`,vertex:{module:this.mipmapVertexShaderModule,entryPoint:"main"},fragment:{module:this.flipYFragmentShaderModule,entryPoint:"main",targets:[{format:e}]},primitive:{topology:Rn.TriangleStrip,stripIndexFormat:In.Uint32},layout:"auto"}),this.flipYPipelines[e]=t),t}flipY(e,t,s=0){const n=t.format,{width:r,height:o}=t.size,a=this.getTransferPipeline(n),u=this.getFlipYPipeline(n),l=this.device.createTexture({size:{width:r,height:o,depthOrArrayLayers:1},format:n,usage:GPUTextureUsage.RENDER_ATTACHMENT|GPUTextureUsage.TEXTURE_BINDING}),c=e.createView({baseMipLevel:0,mipLevelCount:1,dimension:Pe.TwoD,baseArrayLayer:s}),d=l.createView({baseMipLevel:0,mipLevelCount:1,dimension:Pe.TwoD,baseArrayLayer:0}),p=this.device.createCommandEncoder({}),f=(m,y,x)=>{const S=m.getBindGroupLayout(0),R=this.device.createBindGroup({layout:S,entries:[{binding:0,resource:this.flipYSampler},{binding:1,resource:y}]}),C=p.beginRenderPass({colorAttachments:[{view:x,loadOp:ie.Clear,storeOp:Ye.Store,clearValue:[0,0,0,0]}]});C.setPipeline(m),C.setBindGroup(0,R),C.draw(4,1,0,0),C.end()};f(a,c,d),f(u,d,c),this.device.queue.submit([p.finish()]),l.destroy()}generateMipmaps(e,t,s=0){const n=this.get(e);n.useCount===void 0&&(n.useCount=0,n.layers=[]);const r=n.layers[s]||this._mipmapCreateBundles(e,t,s),o=this.device.createCommandEncoder({});this._mipmapRunBundles(o,r),this.device.queue.submit([o.finish()]),n.useCount!==0&&(n.layers[s]=r),n.useCount++}_mipmapCreateBundles(e,t,s){const n=this.getTransferPipeline(t.format),r=n.getBindGroupLayout(0);let o=e.createView({baseMipLevel:0,mipLevelCount:1,dimension:Pe.TwoD,baseArrayLayer:s});const a=[];for(let u=1;u<t.mipLevelCount;u++){const l=this.device.createBindGroup({layout:r,entries:[{binding:0,resource:this.mipmapSampler},{binding:1,resource:o}]}),c=e.createView({baseMipLevel:u,mipLevelCount:1,dimension:Pe.TwoD,baseArrayLayer:s}),d={colorAttachments:[{view:c,loadOp:ie.Clear,storeOp:Ye.Store,clearValue:[0,0,0,0]}]},p=this.device.createRenderBundleEncoder({colorFormats:[t.format]});p.setPipeline(n),p.setBindGroup(0,l),p.draw(4,1,0,0),a.push({renderBundles:[p.finish()],passDescriptor:d}),o=c}return a}_mipmapRunBundles(e,t){const s=t.length;for(let n=0;n<s;n++){const r=t[n],o=e.beginRenderPass(r.passDescriptor);o.executeBundles(r.renderBundles),o.end()}}}const Dw={[$d]:"never",[fu]:"less",[Gd]:"equal",[kd]:"less-equal",[Vd]:"greater",[Od]:"greater-equal",[zd]:"always",[Id]:"not-equal"},Uw=[0,1,3,2,4,5];class Iw{constructor(e){this.backend=e,this._passUtils=null,this.defaultTexture={},this.defaultCubeTexture={},this.defaultVideoFrame=null,this.colorBuffer=null,this.depthTexture=new Mt,this.depthTexture.name="depthBuffer"}createSampler(e){const t=this.backend,s=t.device,n=t.get(e),r={addressModeU:this._convertAddressMode(e.wrapS),addressModeV:this._convertAddressMode(e.wrapT),addressModeW:this._convertAddressMode(e.wrapR),magFilter:this._convertFilterMode(e.magFilter),minFilter:this._convertFilterMode(e.minFilter),mipmapFilter:this._convertFilterMode(e.minFilter),maxAnisotropy:1};r.magFilter===$s.Linear&&r.minFilter===$s.Linear&&r.mipmapFilter===$s.Linear&&(r.maxAnisotropy=e.anisotropy),e.isDepthTexture&&e.compareFunction!==null&&(r.compare=Dw[e.compareFunction]),n.sampler=s.createSampler(r)}createDefaultTexture(e){let t;const s=uu(e);e.isCubeTexture?t=this._getDefaultCubeTextureGPU(s):t=this._getDefaultTextureGPU(s),this.backend.get(e).texture=t}createTexture(e,t={}){const s=this.backend,n=s.get(e);if(n.initialized)throw new Error("WebGPUTextureUtils: Texture already initialized.");if(e.isExternalTexture){n.texture=e.sourceTexture,n.initialized=!0;return}t.needsMipmaps===void 0&&(t.needsMipmaps=!1),t.levels===void 0&&(t.levels=1),t.depth===void 0&&(t.depth=1);const{width:r,height:o,depth:a,levels:u}=t;e.isFramebufferTexture&&(t.renderTarget?t.format=this.backend.utils.getCurrentColorFormat(t.renderTarget):t.format=this.backend.utils.getPreferredCanvasFormat());const l=this._getDimension(e),c=e.internalFormat||t.format||uu(e,s.device);n.format=c;const{samples:d,primarySamples:p,isMSAA:f}=s.utils.getTextureSampleData(e);let m=GPUTextureUsage.TEXTURE_BINDING|GPUTextureUsage.COPY_DST|GPUTextureUsage.COPY_SRC;e.isStorageTexture===!0&&(m|=GPUTextureUsage.STORAGE_BINDING),e.isCompressedTexture!==!0&&e.isCompressedArrayTexture!==!0&&c!==T.RGB9E5UFloat&&(m|=GPUTextureUsage.RENDER_ATTACHMENT);const y={label:e.name,size:{width:r,height:o,depthOrArrayLayers:a},mipLevelCount:u,sampleCount:p,dimension:l,format:c,usage:m};if(c===void 0){console.warn("WebGPURenderer: Texture format not supported."),this.createDefaultTexture(e);return}if(e.isCubeTexture&&(y.textureBindingViewDimension=Pe.Cube),n.texture=s.device.createTexture(y),f){const x=Object.assign({},y);x.label=x.label+"-msaa",x.sampleCount=d,x.mipLevelCount=1,n.msaaTexture=s.device.createTexture(x)}n.initialized=!0,n.textureDescriptorGPU=y}destroyTexture(e){const t=this.backend,s=t.get(e);s.texture!==void 0&&s.texture.destroy(),s.msaaTexture!==void 0&&s.msaaTexture.destroy(),t.delete(e)}destroySampler(e){const s=this.backend.get(e);delete s.sampler}generateMipmaps(e){const t=this.backend.get(e);if(e.isCubeTexture)for(let s=0;s<6;s++)this._generateMipmaps(t.texture,t.textureDescriptorGPU,s);else{const s=e.image.depth||1;for(let n=0;n<s;n++)this._generateMipmaps(t.texture,t.textureDescriptorGPU,n)}}getColorBuffer(){this.colorBuffer&&this.colorBuffer.destroy();const e=this.backend,{width:t,height:s}=e.getDrawingBufferSize();return this.colorBuffer=e.device.createTexture({label:"colorBuffer",size:{width:t,height:s,depthOrArrayLayers:1},sampleCount:e.utils.getSampleCount(e.renderer.samples),format:e.utils.getPreferredCanvasFormat(),usage:GPUTextureUsage.RENDER_ATTACHMENT|GPUTextureUsage.COPY_SRC}),this.colorBuffer}getDepthBuffer(e=!0,t=!1){const s=this.backend,{width:n,height:r}=s.getDrawingBufferSize(),o=this.depthTexture,a=s.get(o).texture;let u,l;if(t?(u=Ts,l=_s):e&&(u=xs,l=Fe),a!==void 0){if(o.image.width===n&&o.image.height===r&&o.format===u&&o.type===l)return a;this.destroyTexture(o)}return o.name="depthBuffer",o.format=u,o.type=l,o.image.width=n,o.image.height=r,this.createTexture(o,{width:n,height:r}),s.get(o).texture}updateTexture(e,t){const s=this.backend.get(e),n=e.mipmaps,{textureDescriptorGPU:r}=s;if(!(e.isRenderTargetTexture||r===void 0)){if(e.isDataTexture)if(n.length>0)for(let o=0,a=n.length;o<a;o++){const u=n[o];this._copyBufferToTexture(u,s.texture,r,0,e.flipY,0,o)}else this._copyBufferToTexture(t.image,s.texture,r,0,e.flipY);else if(e.isArrayTexture||e.isDataArrayTexture||e.isData3DTexture)for(let o=0;o<t.image.depth;o++)this._copyBufferToTexture(t.image,s.texture,r,o,e.flipY,o);else if(e.isCompressedTexture||e.isCompressedArrayTexture)this._copyCompressedBufferToTexture(e.mipmaps,s.texture,r);else if(e.isCubeTexture)this._copyCubeMapToTexture(e,s.texture,r);else if(n.length>0)for(let o=0,a=n.length;o<a;o++){const u=n[o];this._copyImageToTexture(u,s.texture,r,0,e.flipY,e.premultiplyAlpha,o)}else this._copyImageToTexture(t.image,s.texture,r,0,e.flipY,e.premultiplyAlpha);s.version=e.version}}async copyTextureToBuffer(e,t,s,n,r,o){const a=this.backend.device,u=this.backend.get(e),l=u.texture,c=u.textureDescriptorGPU.format,d=this._getBytesPerTexel(c);let p=n*d;p=Math.ceil(p/256)*256;const f=a.createBuffer({size:(r-1)*p+n*d,usage:GPUBufferUsage.COPY_DST|GPUBufferUsage.MAP_READ}),m=a.createCommandEncoder();m.copyTextureToBuffer({texture:l,origin:{x:t,y:s,z:o}},{buffer:f,bytesPerRow:p},{width:n,height:r});const y=this._getTypedArrayType(c);a.queue.submit([m.finish()]),await f.mapAsync(GPUMapMode.READ);const x=f.getMappedRange();return new y(x)}_getDefaultTextureGPU(e){let t=this.defaultTexture[e];if(t===void 0){const s=new du;s.minFilter=wt,s.magFilter=wt,this.createTexture(s,{width:1,height:1,format:e}),this.defaultTexture[e]=t=s}return this.backend.get(t).texture}_getDefaultCubeTextureGPU(e){let t=this.defaultTexture[e];if(t===void 0){const s=new hu;s.minFilter=wt,s.magFilter=wt,this.createTexture(s,{width:1,height:1,depth:6}),this.defaultCubeTexture[e]=t=s}return this.backend.get(t).texture}_copyCubeMapToTexture(e,t,s){const n=e.images,r=e.mipmaps;for(let o=0;o<6;o++){const a=n[o],u=e.flipY===!0?Uw[o]:o;a.isDataTexture?this._copyBufferToTexture(a.image,t,s,u,e.flipY):this._copyImageToTexture(a,t,s,u,e.flipY,e.premultiplyAlpha);for(let l=0;l<r.length;l++){const d=r[l].images[o];d.isDataTexture?this._copyBufferToTexture(d.image,t,s,u,e.flipY,0,l+1):this._copyImageToTexture(d,t,s,u,e.flipY,e.premultiplyAlpha,l+1)}}}_copyImageToTexture(e,t,s,n,r,o,a=0){const u=this.backend.device,l=a>0?e.width:s.size.width,c=a>0?e.height:s.size.height;u.queue.copyExternalImageToTexture({source:e,flipY:r},{texture:t,mipLevel:a,origin:{x:0,y:0,z:n},premultipliedAlpha:o},{width:l,height:c,depthOrArrayLayers:1})}_getPassUtils(){let e=this._passUtils;return e===null&&(this._passUtils=e=new Lw(this.backend.device)),e}_generateMipmaps(e,t,s=0){this._getPassUtils().generateMipmaps(e,t,s)}_flipY(e,t,s=0){this._getPassUtils().flipY(e,t,s)}_copyBufferToTexture(e,t,s,n,r,o=0,a=0){const u=this.backend.device,l=e.data,c=this._getBytesPerTexel(s.format),d=e.width*c;u.queue.writeTexture({texture:t,mipLevel:a,origin:{x:0,y:0,z:n}},l,{offset:e.width*e.height*c*o,bytesPerRow:d},{width:e.width,height:e.height,depthOrArrayLayers:1}),r===!0&&this._flipY(t,s,n)}_copyCompressedBufferToTexture(e,t,s){const n=this.backend.device,r=this._getBlockData(s.format),o=s.size.depthOrArrayLayers>1;for(let a=0;a<e.length;a++){const u=e[a],l=u.width,c=u.height,d=o?s.size.depthOrArrayLayers:1,p=Math.ceil(l/r.width)*r.byteLength,f=p*Math.ceil(c/r.height);for(let m=0;m<d;m++)n.queue.writeTexture({texture:t,mipLevel:a,origin:{x:0,y:0,z:m}},u.data,{offset:m*f,bytesPerRow:p,rowsPerImage:Math.ceil(c/r.height)},{width:Math.ceil(l/r.width)*r.width,height:Math.ceil(c/r.height)*r.height,depthOrArrayLayers:1})}}_getBlockData(e){if(e===T.BC1RGBAUnorm||e===T.BC1RGBAUnormSRGB)return{byteLength:8,width:4,height:4};if(e===T.BC2RGBAUnorm||e===T.BC2RGBAUnormSRGB)return{byteLength:16,width:4,height:4};if(e===T.BC3RGBAUnorm||e===T.BC3RGBAUnormSRGB)return{byteLength:16,width:4,height:4};if(e===T.BC4RUnorm||e===T.BC4RSnorm)return{byteLength:8,width:4,height:4};if(e===T.BC5RGUnorm||e===T.BC5RGSnorm)return{byteLength:16,width:4,height:4};if(e===T.BC6HRGBUFloat||e===T.BC6HRGBFloat)return{byteLength:16,width:4,height:4};if(e===T.BC7RGBAUnorm||e===T.BC7RGBAUnormSRGB)return{byteLength:16,width:4,height:4};if(e===T.ETC2RGB8Unorm||e===T.ETC2RGB8UnormSRGB)return{byteLength:8,width:4,height:4};if(e===T.ETC2RGB8A1Unorm||e===T.ETC2RGB8A1UnormSRGB)return{byteLength:8,width:4,height:4};if(e===T.ETC2RGBA8Unorm||e===T.ETC2RGBA8UnormSRGB)return{byteLength:16,width:4,height:4};if(e===T.EACR11Unorm)return{byteLength:8,width:4,height:4};if(e===T.EACR11Snorm)return{byteLength:8,width:4,height:4};if(e===T.EACRG11Unorm)return{byteLength:16,width:4,height:4};if(e===T.EACRG11Snorm)return{byteLength:16,width:4,height:4};if(e===T.ASTC4x4Unorm||e===T.ASTC4x4UnormSRGB)return{byteLength:16,width:4,height:4};if(e===T.ASTC5x4Unorm||e===T.ASTC5x4UnormSRGB)return{byteLength:16,width:5,height:4};if(e===T.ASTC5x5Unorm||e===T.ASTC5x5UnormSRGB)return{byteLength:16,width:5,height:5};if(e===T.ASTC6x5Unorm||e===T.ASTC6x5UnormSRGB)return{byteLength:16,width:6,height:5};if(e===T.ASTC6x6Unorm||e===T.ASTC6x6UnormSRGB)return{byteLength:16,width:6,height:6};if(e===T.ASTC8x5Unorm||e===T.ASTC8x5UnormSRGB)return{byteLength:16,width:8,height:5};if(e===T.ASTC8x6Unorm||e===T.ASTC8x6UnormSRGB)return{byteLength:16,width:8,height:6};if(e===T.ASTC8x8Unorm||e===T.ASTC8x8UnormSRGB)return{byteLength:16,width:8,height:8};if(e===T.ASTC10x5Unorm||e===T.ASTC10x5UnormSRGB)return{byteLength:16,width:10,height:5};if(e===T.ASTC10x6Unorm||e===T.ASTC10x6UnormSRGB)return{byteLength:16,width:10,height:6};if(e===T.ASTC10x8Unorm||e===T.ASTC10x8UnormSRGB)return{byteLength:16,width:10,height:8};if(e===T.ASTC10x10Unorm||e===T.ASTC10x10UnormSRGB)return{byteLength:16,width:10,height:10};if(e===T.ASTC12x10Unorm||e===T.ASTC12x10UnormSRGB)return{byteLength:16,width:12,height:10};if(e===T.ASTC12x12Unorm||e===T.ASTC12x12UnormSRGB)return{byteLength:16,width:12,height:12}}_convertAddressMode(e){let t=ca.ClampToEdge;return e===Ji?t=ca.Repeat:e===Zi&&(t=ca.MirrorRepeat),t}_convertFilterMode(e){let t=$s.Linear;return(e===wt||e===Ud||e===Nr)&&(t=$s.Nearest),t}_getBytesPerTexel(e){if(e===T.R8Unorm||e===T.R8Snorm||e===T.R8Uint||e===T.R8Sint)return 1;if(e===T.R16Uint||e===T.R16Sint||e===T.R16Float||e===T.RG8Unorm||e===T.RG8Snorm||e===T.RG8Uint||e===T.RG8Sint)return 2;if(e===T.R32Uint||e===T.R32Sint||e===T.R32Float||e===T.RG16Uint||e===T.RG16Sint||e===T.RG16Float||e===T.RGBA8Unorm||e===T.RGBA8UnormSRGB||e===T.RGBA8Snorm||e===T.RGBA8Uint||e===T.RGBA8Sint||e===T.BGRA8Unorm||e===T.BGRA8UnormSRGB||e===T.RGB9E5UFloat||e===T.RGB10A2Unorm||e===T.RG11B10UFloat||e===T.Depth32Float||e===T.Depth24Plus||e===T.Depth24PlusStencil8||e===T.Depth32FloatStencil8)return 4;if(e===T.RG32Uint||e===T.RG32Sint||e===T.RG32Float||e===T.RGBA16Uint||e===T.RGBA16Sint||e===T.RGBA16Float)return 8;if(e===T.RGBA32Uint||e===T.RGBA32Sint||e===T.RGBA32Float)return 16}_getTypedArrayType(e){if(e===T.R8Uint)return Uint8Array;if(e===T.R8Sint)return Int8Array;if(e===T.R8Unorm)return Uint8Array;if(e===T.R8Snorm)return Int8Array;if(e===T.RG8Uint)return Uint8Array;if(e===T.RG8Sint)return Int8Array;if(e===T.RG8Unorm)return Uint8Array;if(e===T.RG8Snorm)return Int8Array;if(e===T.RGBA8Uint)return Uint8Array;if(e===T.RGBA8Sint)return Int8Array;if(e===T.RGBA8Unorm||e===T.RGBA8UnormSRGB)return Uint8Array;if(e===T.RGBA8Snorm)return Int8Array;if(e===T.R16Uint)return Uint16Array;if(e===T.R16Sint)return Int16Array;if(e===T.RG16Uint)return Uint16Array;if(e===T.RG16Sint)return Int16Array;if(e===T.RGBA16Uint)return Uint16Array;if(e===T.RGBA16Sint)return Int16Array;if(e===T.R16Float||e===T.RG16Float||e===T.RGBA16Float)return Uint16Array;if(e===T.R32Uint)return Uint32Array;if(e===T.R32Sint)return Int32Array;if(e===T.R32Float)return Float32Array;if(e===T.RG32Uint)return Uint32Array;if(e===T.RG32Sint)return Int32Array;if(e===T.RG32Float)return Float32Array;if(e===T.RGBA32Uint)return Uint32Array;if(e===T.RGBA32Sint)return Int32Array;if(e===T.RGBA32Float)return Float32Array;if(e===T.BGRA8Unorm||e===T.BGRA8UnormSRGB)return Uint8Array;if(e===T.RGB10A2Unorm||e===T.RGB9E5UFloat||e===T.RG11B10UFloat)return Uint32Array;if(e===T.Depth32Float)return Float32Array;if(e===T.Depth24Plus||e===T.Depth24PlusStencil8)return Uint32Array;if(e===T.Depth32FloatStencil8)return Float32Array}_getDimension(e){let t;return e.is3DTexture||e.isData3DTexture?t=Td.ThreeD:t=Td.TwoD,t}}function uu(i,e=null){const t=i.format,s=i.type,n=i.colorSpace,r=Re.getTransfer(n);let o;if(i.isCompressedTexture===!0||i.isCompressedArrayTexture===!0)switch(t){case _i:case Ti:o=r===K?T.BC1RGBAUnormSRGB:T.BC1RGBAUnorm;break;case xi:o=r===K?T.BC2RGBAUnormSRGB:T.BC2RGBAUnorm;break;case bi:o=r===K?T.BC3RGBAUnormSRGB:T.BC3RGBAUnorm;break;case La:o=T.BC4RUnorm;break;case Da:o=T.BC4RSnorm;break;case Ua:o=T.BC5RGUnorm;break;case Ia:o=T.BC5RGSnorm;break;case Fa:o=r===K?T.BC7RGBAUnormSRGB:T.BC7RGBAUnorm;break;case ya:case ga:o=r===K?T.ETC2RGB8UnormSRGB:T.ETC2RGB8Unorm;break;case _a:o=r===K?T.ETC2RGBA8UnormSRGB:T.ETC2RGBA8Unorm;break;case Ta:o=r===K?T.ASTC4x4UnormSRGB:T.ASTC4x4Unorm;break;case xa:o=r===K?T.ASTC5x4UnormSRGB:T.ASTC5x4Unorm;break;case ba:o=r===K?T.ASTC5x5UnormSRGB:T.ASTC5x5Unorm;break;case Na:o=r===K?T.ASTC6x5UnormSRGB:T.ASTC6x5Unorm;break;case Sa:o=r===K?T.ASTC6x6UnormSRGB:T.ASTC6x6Unorm;break;case va:o=r===K?T.ASTC8x5UnormSRGB:T.ASTC8x5Unorm;break;case Ra:o=r===K?T.ASTC8x6UnormSRGB:T.ASTC8x6Unorm;break;case Aa:o=r===K?T.ASTC8x8UnormSRGB:T.ASTC8x8Unorm;break;case Ea:o=r===K?T.ASTC10x5UnormSRGB:T.ASTC10x5Unorm;break;case wa:o=r===K?T.ASTC10x6UnormSRGB:T.ASTC10x6Unorm;break;case Ca:o=r===K?T.ASTC10x8UnormSRGB:T.ASTC10x8Unorm;break;case Ma:o=r===K?T.ASTC10x10UnormSRGB:T.ASTC10x10Unorm;break;case Ba:o=r===K?T.ASTC12x10UnormSRGB:T.ASTC12x10Unorm;break;case Pa:o=r===K?T.ASTC12x12UnormSRGB:T.ASTC12x12Unorm;break;case Ct:o=r===K?T.RGBA8UnormSRGB:T.RGBA8Unorm;break;default:console.error("WebGPURenderer: Unsupported texture format.",t)}else switch(t){case Ct:switch(s){case dr:o=T.RGBA8Snorm;break;case hr:o=T.RGBA16Sint;break;case Nn:o=T.RGBA16Uint;break;case Fe:o=T.RGBA32Uint;break;case Ke:o=T.RGBA32Sint;break;case ct:o=r===K?T.RGBA8UnormSRGB:T.RGBA8Unorm;break;case et:o=T.RGBA16Float;break;case ft:o=T.RGBA32Float;break;default:console.error("WebGPURenderer: Unsupported texture type with RGBAFormat.",s)}break;case Tu:switch(s){case ch:o=T.RGB9E5UFloat;break;case dh:o=T.RG11B10UFloat;break;default:console.error("WebGPURenderer: Unsupported texture type with RGBFormat.",s)}break;case xu:switch(s){case dr:o=T.R8Snorm;break;case hr:o=T.R16Sint;break;case Nn:o=T.R16Uint;break;case Fe:o=T.R32Uint;break;case Ke:o=T.R32Sint;break;case ct:o=T.R8Unorm;break;case et:o=T.R16Float;break;case ft:o=T.R32Float;break;default:console.error("WebGPURenderer: Unsupported texture type with RedFormat.",s)}break;case Ws:switch(s){case dr:o=T.RG8Snorm;break;case hr:o=T.RG16Sint;break;case Nn:o=T.RG16Uint;break;case Fe:o=T.RG32Uint;break;case Ke:o=T.RG32Sint;break;case ct:o=T.RG8Unorm;break;case et:o=T.RG16Float;break;case ft:o=T.RG32Float;break;default:console.error("WebGPURenderer: Unsupported texture type with RGFormat.",s)}break;case xs:switch(s){case Nn:o=T.Depth16Unorm;break;case Fe:o=T.Depth24Plus;break;case ft:o=T.Depth32Float;break;default:console.error("WebGPURenderer: Unsupported texture type with DepthFormat.",s)}break;case Ts:switch(s){case _s:o=T.Depth24PlusStencil8;break;case ft:e&&e.features.has(au.Depth32FloatStencil8)===!1&&console.error('WebGPURenderer: Depth textures with DepthStencilFormat + FloatType can only be used with the "depth32float-stencil8" GPU feature.'),o=T.Depth32FloatStencil8;break;default:console.error("WebGPURenderer: Unsupported texture type with DepthStencilFormat.",s)}break;case bu:switch(s){case Ke:o=T.R32Sint;break;case Fe:o=T.R32Uint;break;default:console.error("WebGPURenderer: Unsupported texture type with RedIntegerFormat.",s)}break;case Nu:switch(s){case Ke:o=T.RG32Sint;break;case Fe:o=T.RG32Uint;break;default:console.error("WebGPURenderer: Unsupported texture type with RGIntegerFormat.",s)}break;case Su:switch(s){case Ke:o=T.RGBA32Sint;break;case Fe:o=T.RGBA32Uint;break;default:console.error("WebGPURenderer: Unsupported texture type with RGBAIntegerFormat.",s)}break;default:console.error("WebGPURenderer: Unsupported texture format.",t)}return o}const Vw=/^[fn]*\s*([a-z_0-9]+)?\s*\(([\s\S]*?)\)\s*[\-\>]*\s*([a-z_0-9]+(?:<[\s\S]+?>)?)/i,Ow=/([a-z_0-9]+)\s*:\s*([a-z_0-9]+(?:<[\s\S]+?>)?)/ig,xd={f32:"float",i32:"int",u32:"uint",bool:"bool","vec2<f32>":"vec2","vec2<i32>":"ivec2","vec2<u32>":"uvec2","vec2<bool>":"bvec2",vec2f:"vec2",vec2i:"ivec2",vec2u:"uvec2",vec2b:"bvec2","vec3<f32>":"vec3","vec3<i32>":"ivec3","vec3<u32>":"uvec3","vec3<bool>":"bvec3",vec3f:"vec3",vec3i:"ivec3",vec3u:"uvec3",vec3b:"bvec3","vec4<f32>":"vec4","vec4<i32>":"ivec4","vec4<u32>":"uvec4","vec4<bool>":"bvec4",vec4f:"vec4",vec4i:"ivec4",vec4u:"uvec4",vec4b:"bvec4","mat2x2<f32>":"mat2",mat2x2f:"mat2","mat3x3<f32>":"mat3",mat3x3f:"mat3","mat4x4<f32>":"mat4",mat4x4f:"mat4",sampler:"sampler",texture_1d:"texture",texture_2d:"texture",texture_2d_array:"texture",texture_multisampled_2d:"cubeTexture",texture_depth_2d:"depthTexture",texture_depth_2d_array:"depthTexture",texture_depth_multisampled_2d:"depthTexture",texture_depth_cube:"depthTexture",texture_depth_cube_array:"depthTexture",texture_3d:"texture3D",texture_cube:"cubeTexture",texture_cube_array:"cubeTexture",texture_storage_1d:"storageTexture",texture_storage_2d:"storageTexture",texture_storage_2d_array:"storageTexture",texture_storage_3d:"storageTexture"},Gw=i=>{i=i.trim();const e=i.match(Vw);if(e!==null&&e.length===4){const t=e[2],s=[];let n=null;for(;(n=Ow.exec(t))!==null;)s.push({name:n[1],type:n[2]});const r=[];for(let c=0;c<s.length;c++){const{name:d,type:p}=s[c];let f=p;f.startsWith("ptr")?f="pointer":(f.startsWith("texture")&&(f=p.split("<")[0]),f=xd[f]),r.push(new $l(f,d))}const o=i.substring(e[0].length),a=e[3]||"void",u=e[1]!==void 0?e[1]:"";return{type:xd[a]||a,inputs:r,name:u,inputsCode:t,blockCode:o,outputType:a}}else throw new Error("FunctionNode: Function is not a WGSL code.")};class kw extends Hl{constructor(e){const{type:t,inputs:s,name:n,inputsCode:r,blockCode:o,outputType:a}=Gw(e);super(t,s,n),this.inputsCode=r,this.blockCode=o,this.outputType=a}getCode(e=this.name){const t=this.outputType!=="void"?"-> "+this.outputType:"";return`fn ${e} ( ${this.inputsCode.trim()} ) ${t}`+this.blockCode}}class zw extends jg{parseFunction(e){return new kw(e)}}const gn=typeof self<"u"?self.GPUShaderStage:{VERTEX:1,FRAGMENT:2,COMPUTE:4},$w={[$e.READ_ONLY]:"read",[$e.WRITE_ONLY]:"write",[$e.READ_WRITE]:"read_write"},bd={[Ji]:"repeat",[_u]:"clamp",[Zi]:"mirror"},fi={vertex:gn?gn.VERTEX:1,fragment:gn?gn.FRAGMENT:2,compute:gn?gn.COMPUTE:4},Nd={instance:!0,swizzleAssign:!1,storageBuffer:!0},Ww={"^^":"tsl_xor"},Hw={float:"f32",int:"i32",uint:"u32",bool:"bool",color:"vec3<f32>",vec2:"vec2<f32>",ivec2:"vec2<i32>",uvec2:"vec2<u32>",bvec2:"vec2<bool>",vec3:"vec3<f32>",ivec3:"vec3<i32>",uvec3:"vec3<u32>",bvec3:"vec3<bool>",vec4:"vec4<f32>",ivec4:"vec4<i32>",uvec4:"vec4<u32>",bvec4:"vec4<bool>",mat2:"mat2x2<f32>",mat3:"mat3x3<f32>",mat4:"mat4x4<f32>"},Sd={},ir={tsl_xor:new He("fn tsl_xor( a : bool, b : bool ) -> bool { return ( a || b ) && !( a && b ); }"),mod_float:new He("fn tsl_mod_float( x : f32, y : f32 ) -> f32 { return x - y * floor( x / y ); }"),mod_vec2:new He("fn tsl_mod_vec2( x : vec2f, y : vec2f ) -> vec2f { return x - y * floor( x / y ); }"),mod_vec3:new He("fn tsl_mod_vec3( x : vec3f, y : vec3f ) -> vec3f { return x - y * floor( x / y ); }"),mod_vec4:new He("fn tsl_mod_vec4( x : vec4f, y : vec4f ) -> vec4f { return x - y * floor( x / y ); }"),equals_bool:new He("fn tsl_equals_bool( a : bool, b : bool ) -> bool { return a == b; }"),equals_bvec2:new He("fn tsl_equals_bvec2( a : vec2f, b : vec2f ) -> vec2<bool> { return vec2<bool>( a.x == b.x, a.y == b.y ); }"),equals_bvec3:new He("fn tsl_equals_bvec3( a : vec3f, b : vec3f ) -> vec3<bool> { return vec3<bool>( a.x == b.x, a.y == b.y, a.z == b.z ); }"),equals_bvec4:new He("fn tsl_equals_bvec4( a : vec4f, b : vec4f ) -> vec4<bool> { return vec4<bool>( a.x == b.x, a.y == b.y, a.z == b.z, a.w == b.w ); }"),repeatWrapping_float:new He("fn tsl_repeatWrapping_float( coord: f32 ) -> f32 { return fract( coord ); }"),mirrorWrapping_float:new He("fn tsl_mirrorWrapping_float( coord: f32 ) -> f32 { let mirrored = fract( coord * 0.5 ) * 2.0; return 1.0 - abs( 1.0 - mirrored ); }"),clampWrapping_float:new He("fn tsl_clampWrapping_float( coord: f32 ) -> f32 { return clamp( coord, 0.0, 1.0 ); }"),biquadraticTexture:new He(`
fn tsl_biquadraticTexture( map : texture_2d<f32>, coord : vec2f, iRes : vec2u, level : u32 ) -> vec4f {

	let res = vec2f( iRes );

	let uvScaled = coord * res;
	let uvWrapping = ( ( uvScaled % res ) + res ) % res;

	// https://www.shadertoy.com/view/WtyXRy

	let uv = uvWrapping - 0.5;
	let iuv = floor( uv );
	let f = fract( uv );

	let rg1 = textureLoad( map, vec2u( iuv + vec2( 0.5, 0.5 ) ) % iRes, level );
	let rg2 = textureLoad( map, vec2u( iuv + vec2( 1.5, 0.5 ) ) % iRes, level );
	let rg3 = textureLoad( map, vec2u( iuv + vec2( 0.5, 1.5 ) ) % iRes, level );
	let rg4 = textureLoad( map, vec2u( iuv + vec2( 1.5, 1.5 ) ) % iRes, level );

	return mix( mix( rg1, rg2, f.x ), mix( rg3, rg4, f.x ), f.y );

}
`)},qw={dFdx:"dpdx",dFdy:"- dpdy",mod_float:"tsl_mod_float",mod_vec2:"tsl_mod_vec2",mod_vec3:"tsl_mod_vec3",mod_vec4:"tsl_mod_vec4",equals_bool:"tsl_equals_bool",equals_bvec2:"tsl_equals_bvec2",equals_bvec3:"tsl_equals_bvec3",equals_bvec4:"tsl_equals_bvec4",inversesqrt:"inverseSqrt",bitcast:"bitcast<f32>"};let ry="";(typeof navigator<"u"&&/Firefox|Deno/g.test(navigator.userAgent))!==!0&&(ry+=`diagnostic( off, derivative_uniformity );
`);class jw extends qg{constructor(e,t){super(e,t,new zw),this.uniformGroups={},this.builtins={},this.directives={},this.scopedArrays=new Map}_generateTextureSample(e,t,s,n,r,o=this.shaderStage){return o==="fragment"?n?r?`textureSample( ${t}, ${t}_sampler, ${s}, ${n}, ${r} )`:`textureSample( ${t}, ${t}_sampler, ${s}, ${n} )`:r?`textureSample( ${t}, ${t}_sampler, ${s}, ${r} )`:`textureSample( ${t}, ${t}_sampler, ${s} )`:this.generateTextureSampleLevel(e,t,s,"0",n)}generateTextureSampleLevel(e,t,s,n,r,o){return this.isUnfilterable(e)===!1?o?`textureSampleLevel( ${t}, ${t}_sampler, ${s}, ${n}, ${o} )`:`textureSampleLevel( ${t}, ${t}_sampler, ${s}, ${n} )`:this.isFilteredTexture(e)?this.generateFilteredTexture(e,t,s,o,n):this.generateTextureLod(e,t,s,r,o,n)}generateWrapFunction(e){const t=`tsl_coord_${bd[e.wrapS]}S_${bd[e.wrapT]}_${e.isData3DTexture?"3d":"2d"}T`;let s=Sd[t];if(s===void 0){const n=[],r=e.isData3DTexture?"vec3f":"vec2f";let o=`fn ${t}( coord : ${r} ) -> ${r} {

	return ${r}(
`;const a=(u,l)=>{u===Ji?(n.push(ir.repeatWrapping_float),o+=`		tsl_repeatWrapping_float( coord.${l} )`):u===_u?(n.push(ir.clampWrapping_float),o+=`		tsl_clampWrapping_float( coord.${l} )`):u===Zi?(n.push(ir.mirrorWrapping_float),o+=`		tsl_mirrorWrapping_float( coord.${l} )`):(o+=`		coord.${l}`,console.warn(`WebGPURenderer: Unsupported texture wrap type "${u}" for vertex shader.`))};a(e.wrapS,"x"),o+=`,
`,a(e.wrapT,"y"),e.isData3DTexture&&(o+=`,
`,a(e.wrapR,"z")),o+=`
	);

}
`,Sd[t]=s=new He(o,n)}return s.build(this),t}generateArrayDeclaration(e,t){return`array< ${this.getType(e)}, ${t} >`}generateTextureDimension(e,t,s){const n=this.getDataFromNode(e,this.shaderStage,this.globalCache);n.dimensionsSnippet===void 0&&(n.dimensionsSnippet={});let r=n.dimensionsSnippet[s];if(n.dimensionsSnippet[s]===void 0){let o,a;const{primarySamples:u}=this.renderer.backend.utils.getTextureSampleData(e),l=u>1;e.isData3DTexture?a="vec3<u32>":a="vec2<u32>",l||e.isStorageTexture?o=t:o=`${t}${s?`, u32( ${s} )`:""}`,r=new Si(new vi(`textureDimensions( ${o} )`,a)),n.dimensionsSnippet[s]=r,(e.isArrayTexture||e.isDataArrayTexture||e.isData3DTexture)&&(n.arrayLayerCount=new Si(new vi(`textureNumLayers(${t})`,"u32"))),e.isTextureCube&&(n.cubeFaceCount=new Si(new vi("6u","u32")))}return r.build(this)}generateFilteredTexture(e,t,s,n,r="0u"){this._include("biquadraticTexture");const o=this.generateWrapFunction(e),a=this.generateTextureDimension(e,t,r);return n&&(s=`${s} + vec2<f32>(${n}) / ${a}`),`tsl_biquadraticTexture( ${t}, ${o}( ${s} ), ${a}, u32( ${r} ) )`}generateTextureLod(e,t,s,n,r,o="0u"){const a=this.generateWrapFunction(e),u=this.generateTextureDimension(e,t,o),l=e.isData3DTexture?"vec3":"vec2";r&&(s=`${s} + ${l}<f32>(${r}) / ${l}<f32>( ${u} )`);const c=`${l}<u32>( ${a}( ${s} ) * ${l}<f32>( ${u} ) )`;return this.generateTextureLoad(e,t,c,n,null,o)}generateTextureLoad(e,t,s,n,r,o="0u"){let a;return r&&(s=`${s} + ${r}`),n?a=`textureLoad( ${t}, ${s}, ${n}, u32( ${o} ) )`:(a=`textureLoad( ${t}, ${s}, u32( ${o} ) )`,this.renderer.backend.compatibilityMode&&e.isDepthTexture&&(a+=".x")),a}generateTextureStore(e,t,s,n,r){let o;return n?o=`textureStore( ${t}, ${s}, ${n}, ${r} )`:o=`textureStore( ${t}, ${s}, ${r} )`,o}isSampleCompare(e){return e.isDepthTexture===!0&&e.compareFunction!==null}isUnfilterable(e){return this.getComponentTypeFromTexture(e)!=="float"||!this.isAvailable("float32Filterable")&&e.isDataTexture===!0&&e.type===ft||this.isSampleCompare(e)===!1&&e.minFilter===wt&&e.magFilter===wt||this.renderer.backend.utils.getTextureSampleData(e).primarySamples>1}generateTexture(e,t,s,n,r,o=this.shaderStage){let a=null;return this.isUnfilterable(e)?a=this.generateTextureLod(e,t,s,n,r,"0",o):a=this._generateTextureSample(e,t,s,n,r,o),a}generateTextureGrad(e,t,s,n,r,o,a=this.shaderStage){if(a==="fragment")return o?`textureSampleGrad( ${t}, ${t}_sampler, ${s},  ${n[0]}, ${n[1]}, ${o} )`:`textureSampleGrad( ${t}, ${t}_sampler, ${s},  ${n[0]}, ${n[1]} )`;console.error(`WebGPURenderer: THREE.TextureNode.gradient() does not support ${a} shader.`)}generateTextureCompare(e,t,s,n,r,o,a=this.shaderStage){if(a==="fragment")return e.isDepthTexture===!0&&e.isArrayTexture===!0?o?`textureSampleCompare( ${t}, ${t}_sampler, ${s}, ${r}, ${n}, ${o} )`:`textureSampleCompare( ${t}, ${t}_sampler, ${s}, ${r}, ${n} )`:o?`textureSampleCompare( ${t}, ${t}_sampler, ${s}, ${n}, ${o} )`:`textureSampleCompare( ${t}, ${t}_sampler, ${s}, ${n} )`;console.error(`WebGPURenderer: THREE.DepthTexture.compareFunction() does not support ${a} shader.`)}generateTextureLevel(e,t,s,n,r,o){return this.isUnfilterable(e)===!1?o?`textureSampleLevel( ${t}, ${t}_sampler, ${s}, ${n}, ${o} )`:`textureSampleLevel( ${t}, ${t}_sampler, ${s}, ${n} )`:this.isFilteredTexture(e)?this.generateFilteredTexture(e,t,s,o,n):this.generateTextureLod(e,t,s,r,o,n)}generateTextureBias(e,t,s,n,r,o,a=this.shaderStage){if(a==="fragment")return o?`textureSampleBias( ${t}, ${t}_sampler, ${s}, ${n}, ${o} )`:`textureSampleBias( ${t}, ${t}_sampler, ${s}, ${n} )`;console.error(`WebGPURenderer: THREE.TextureNode.biasNode does not support ${a} shader.`)}getPropertyName(e,t=this.shaderStage){if(e.isNodeVarying===!0&&e.needsInterpolation===!0){if(t==="vertex")return`varyings.${e.name}`}else if(e.isNodeUniform===!0){const s=e.name,n=e.type;return n==="texture"||n==="cubeTexture"||n==="storageTexture"||n==="texture3D"?s:n==="buffer"||n==="storageBuffer"||n==="indirectStorageBuffer"?this.isCustomStruct(e)?s:s+".value":e.groupNode.name+"."+s}return super.getPropertyName(e)}getOutputStructName(){return"output"}getFunctionOperator(e){const t=Ww[e];return t!==void 0?(this._include(t),t):null}getNodeAccess(e,t){return t!=="compute"?e.isAtomic===!0?(console.warn("WebGPURenderer: Atomic operations are only supported in compute shaders."),$e.READ_WRITE):$e.READ_ONLY:e.access}getStorageAccess(e,t){return $w[this.getNodeAccess(e,t)]}getUniformFromNode(e,t,s,n=null){const r=super.getUniformFromNode(e,t,s,n),o=this.getDataFromNode(e,s,this.globalCache);if(o.uniformGPU===void 0){let a;const u=e.groupNode,l=u.name,c=this.getBindGroupArray(l,s);if(t==="texture"||t==="cubeTexture"||t==="storageTexture"||t==="texture3D"){let d=null;const p=this.getNodeAccess(e,s);if(t==="texture"||t==="storageTexture"?e.value.is3DTexture===!0?d=new ou(r.name,r.node,u,p):d=new Bo(r.name,r.node,u,p):t==="cubeTexture"?d=new ty(r.name,r.node,u,p):t==="texture3D"&&(d=new ou(r.name,r.node,u,p)),d.store=e.isStorageTextureNode===!0,d.setVisibility(fi[s]),this.isUnfilterable(e.value)===!1&&d.store===!1){const f=new Mw(`${r.name}_sampler`,r.node,u);f.setVisibility(fi[s]),c.push(f,d),a=[f,d]}else c.push(d),a=[d]}else if(t==="buffer"||t==="storageBuffer"||t==="indirectStorageBuffer"){const d=t==="buffer"?Zg:Fw,p=new d(e,u);p.setVisibility(fi[s]),c.push(p),a=p,r.name=n||"NodeBuffer_"+r.id}else{const d=this.uniformGroups[s]||(this.uniformGroups[s]={});let p=d[l];p===void 0&&(p=new Jg(l,u),p.setVisibility(fi[s]),d[l]=p,c.push(p)),a=this.getNodeUniform(r,t),p.addUniform(a)}o.uniformGPU=a}return r}getBuiltin(e,t,s,n=this.shaderStage){const r=this.builtins[n]||(this.builtins[n]=new Map);return r.has(e)===!1&&r.set(e,{name:e,property:t,type:s}),t}hasBuiltin(e,t=this.shaderStage){return this.builtins[t]!==void 0&&this.builtins[t].has(e)}getVertexIndex(){return this.shaderStage==="vertex"?this.getBuiltin("vertex_index","vertexIndex","u32","attribute"):"vertexIndex"}buildFunctionCode(e){const t=e.layout,s=this.flowShaderNode(e),n=[];for(const o of t.inputs)n.push(o.name+" : "+this.getType(o.type));let r=`fn ${t.name}( ${n.join(", ")} ) -> ${this.getType(t.type)} {
${s.vars}
${s.code}
`;return s.result&&(r+=`	return ${s.result};
`),r+=`
}
`,r}getInstanceIndex(){return this.shaderStage==="vertex"?this.getBuiltin("instance_index","instanceIndex","u32","attribute"):"instanceIndex"}getInvocationLocalIndex(){return this.getBuiltin("local_invocation_index","invocationLocalIndex","u32","attribute")}getSubgroupSize(){return this.enableSubGroups(),this.getBuiltin("subgroup_size","subgroupSize","u32","attribute")}getInvocationSubgroupIndex(){return this.enableSubGroups(),this.getBuiltin("subgroup_invocation_id","invocationSubgroupIndex","u32","attribute")}getSubgroupIndex(){return this.enableSubGroups(),this.getBuiltin("subgroup_id","subgroupIndex","u32","attribute")}getDrawIndex(){return null}getFrontFacing(){return this.getBuiltin("front_facing","isFront","bool")}getFragCoord(){return this.getBuiltin("position","fragCoord","vec4<f32>")+".xy"}getFragDepth(){return"output."+this.getBuiltin("frag_depth","depth","f32","output")}getClipDistance(){return"varyings.hw_clip_distances"}isFlipY(){return!1}enableDirective(e,t=this.shaderStage){(this.directives[t]||(this.directives[t]=new Set)).add(e)}getDirectives(e){const t=[],s=this.directives[e];if(s!==void 0)for(const n of s)t.push(`enable ${n};`);return t.join(`
`)}enableSubGroups(){this.enableDirective("subgroups")}enableSubgroupsF16(){this.enableDirective("subgroups-f16")}enableClipDistances(){this.enableDirective("clip_distances")}enableShaderF16(){this.enableDirective("f16")}enableDualSourceBlending(){this.enableDirective("dual_source_blending")}enableHardwareClipping(e){this.enableClipDistances(),this.getBuiltin("clip_distances","hw_clip_distances",`array<f32, ${e} >`,"vertex")}getBuiltins(e){const t=[],s=this.builtins[e];if(s!==void 0)for(const{name:n,property:r,type:o}of s.values())t.push(`@builtin( ${n} ) ${r} : ${o}`);return t.join(`,
	`)}getScopedArray(e,t,s,n){return this.scopedArrays.has(e)===!1&&this.scopedArrays.set(e,{name:e,scope:t,bufferType:s,bufferCount:n}),e}getScopedArrays(e){if(e!=="compute")return;const t=[];for(const{name:s,scope:n,bufferType:r,bufferCount:o}of this.scopedArrays.values()){const a=this.getType(r);t.push(`var<${n}> ${s}: array< ${a}, ${o} >;`)}return t.join(`
`)}getAttributes(e){const t=[];if(e==="compute"&&(this.getBuiltin("global_invocation_id","globalId","vec3<u32>","attribute"),this.getBuiltin("workgroup_id","workgroupId","vec3<u32>","attribute"),this.getBuiltin("local_invocation_id","localId","vec3<u32>","attribute"),this.getBuiltin("num_workgroups","numWorkgroups","vec3<u32>","attribute"),this.renderer.hasFeature("subgroups")&&(this.enableDirective("subgroups",e),this.getBuiltin("subgroup_size","subgroupSize","u32","attribute"))),e==="vertex"||e==="compute"){const s=this.getBuiltins("attribute");s&&t.push(s);const n=this.getAttributesArray();for(let r=0,o=n.length;r<o;r++){const a=n[r],u=a.name,l=this.getType(a.type);t.push(`@location( ${r} ) ${u} : ${l}`)}}return t.join(`,
	`)}getStructMembers(e){const t=[];for(const s of e.members){const n=e.output?"@location( "+s.index+" ) ":"";let r=this.getType(s.type);s.atomic&&(r="atomic< "+r+" >"),t.push(`	${n+s.name} : ${r}`)}return e.output&&t.push(`	${this.getBuiltins("output")}`),t.join(`,
`)}getStructs(e){let t="";const s=this.structs[e];if(s.length>0){const n=[];for(const r of s){let o=`struct ${r.name} {
`;o+=this.getStructMembers(r),o+=`
};`,n.push(o)}t=`
`+n.join(`

`)+`
`}return t}getVar(e,t,s=null){let n=`var ${t} : `;return s!==null?n+=this.generateArrayDeclaration(e,s):n+=this.getType(e),n}getVars(e){const t=[],s=this.vars[e];if(s!==void 0)for(const n of s)t.push(`	${this.getVar(n.type,n.name,n.count)};`);return`
${t.join(`
`)}
`}getVaryings(e){const t=[];if(e==="vertex"&&this.getBuiltin("position","Vertex","vec4<f32>","vertex"),e==="vertex"||e==="fragment"){const r=this.varyings,o=this.vars[e];for(let a=0;a<r.length;a++){const u=r[a];if(u.needsInterpolation){let l=`@location( ${a} )`;if(u.interpolationType){const c=u.interpolationSampling!==null?`, ${u.interpolationSampling} )`:" )";l+=` @interpolate( ${u.interpolationType}${c}`}else/^(int|uint|ivec|uvec)/.test(u.type)&&(l+=` @interpolate( ${this.renderer.backend.compatibilityMode?"flat, either":"flat"} )`);t.push(`${l} ${u.name} : ${this.getType(u.type)}`)}else e==="vertex"&&o.includes(u)===!1&&o.push(u)}}const s=this.getBuiltins(e);s&&t.push(s);const n=t.join(`,
	`);return e==="vertex"?this._getWGSLStruct("VaryingsStruct","	"+n):n}isCustomStruct(e){const t=e.value,s=e.node,n=(t.isBufferAttribute||t.isInstancedBufferAttribute)&&s.structTypeNode!==null,r=s.value&&s.value.array&&typeof s.value.itemSize=="number"&&s.value.array.length>s.value.itemSize;return n&&!r}getUniforms(e){const t=this.uniforms[e],s=[],n=[],r=[],o={};for(const u of t){const l=u.groupNode.name,c=this.bindingsIndexes[l];if(u.type==="texture"||u.type==="cubeTexture"||u.type==="storageTexture"||u.type==="texture3D"){const d=u.node.value;this.isUnfilterable(d)===!1&&u.node.isStorageTextureNode!==!0&&(this.isSampleCompare(d)?s.push(`@binding( ${c.binding++} ) @group( ${c.group} ) var ${u.name}_sampler : sampler_comparison;`):s.push(`@binding( ${c.binding++} ) @group( ${c.group} ) var ${u.name}_sampler : sampler;`));let p,f="";const{primarySamples:m}=this.renderer.backend.utils.getTextureSampleData(d);if(m>1&&(f="_multisampled"),d.isCubeTexture===!0)p="texture_cube<f32>";else if(d.isDepthTexture===!0)this.renderer.backend.compatibilityMode&&d.compareFunction===null?p=`texture${f}_2d<f32>`:p=`texture_depth${f}_2d${d.isArrayTexture===!0?"_array":""}`;else if(u.node.isStorageTextureNode===!0){const y=uu(d),x=this.getStorageAccess(u.node,e),S=u.node.value.is3DTexture,R=u.node.value.isArrayTexture;p=`texture_storage_${S?"3d":`2d${R?"_array":""}`}<${y}, ${x}>`}else if(d.isArrayTexture===!0||d.isDataArrayTexture===!0||d.isCompressedArrayTexture===!0)p="texture_2d_array<f32>";else if(d.is3DTexture===!0||d.isData3DTexture===!0)p="texture_3d<f32>";else{const y=this.getComponentTypeFromTexture(d).charAt(0);p=`texture${f}_2d<${y}32>`}s.push(`@binding( ${c.binding++} ) @group( ${c.group} ) var ${u.name} : ${p};`)}else if(u.type==="buffer"||u.type==="storageBuffer"||u.type==="indirectStorageBuffer"){const d=u.node,p=this.getType(d.getNodeType(this)),f=d.bufferCount,m=f>0&&u.type==="buffer"?", "+f:"",y=d.isStorageBufferNode?`storage, ${this.getStorageAccess(d,e)}`:"uniform";if(this.isCustomStruct(u))n.push(`@binding( ${c.binding++} ) @group( ${c.group} ) var<${y}> ${u.name} : ${p};`);else{const S=`	value : array< ${d.isAtomic?`atomic<${p}>`:`${p}`}${m} >`;n.push(this._getWGSLStructBinding(u.name,S,y,c.binding++,c.group))}}else{const d=this.getType(this.getVectorType(u.type)),p=u.groupNode.name;(o[p]||(o[p]={index:c.binding++,id:c.group,snippets:[]})).snippets.push(`	${u.name} : ${d}`)}}for(const u in o){const l=o[u];r.push(this._getWGSLStructBinding(u,l.snippets.join(`,
`),"uniform",l.index,l.id))}let a=s.join(`
`);return a+=n.join(`
`),a+=r.join(`
`),a}buildCode(){const e=this.material!==null?{fragment:{},vertex:{}}:{compute:{}};this.sortBindingGroups();for(const t in e){this.shaderStage=t;const s=e[t];s.uniforms=this.getUniforms(t),s.attributes=this.getAttributes(t),s.varyings=this.getVaryings(t),s.structs=this.getStructs(t),s.vars=this.getVars(t),s.codes=this.getCodes(t),s.directives=this.getDirectives(t),s.scopedArrays=this.getScopedArrays(t);let n=`// code

`;n+=this.flowCode[t];const r=this.flowNodes[t],o=r[r.length-1],a=o.outputNode,u=a!==void 0&&a.isOutputStructNode===!0;for(const l of r){const c=this.getFlowData(l),d=l.name;if(d&&(n.length>0&&(n+=`
`),n+=`	// flow -> ${d}
`),n+=`${c.code}
	`,l===o&&t!=="compute"){if(n+=`// result

	`,t==="vertex")n+=`varyings.Vertex = ${c.result};`;else if(t==="fragment")if(u)s.returnType=a.getNodeType(this),s.structs+="var<private> output : "+s.returnType+";",n+=`return ${c.result};`;else{let p="	@location(0) color: vec4<f32>";const f=this.getBuiltins("output");f&&(p+=`,
	`+f),s.returnType="OutputStruct",s.structs+=this._getWGSLStruct("OutputStruct",p),s.structs+=`
var<private> output : OutputStruct;`,n+=`output.color = ${c.result};

	return output;`}}}s.flow=n}if(this.shaderStage=null,this.material!==null)this.vertexShader=this._getWGSLVertexCode(e.vertex),this.fragmentShader=this._getWGSLFragmentCode(e.fragment);else{const t=this.object.workgroupSize;this.computeShader=this._getWGSLComputeCode(e.compute,t)}}getMethod(e,t=null){let s;return t!==null&&(s=this._getWGSLMethod(e+"_"+t)),s===void 0&&(s=this._getWGSLMethod(e)),s||e}getBitcastMethod(e){return`bitcast<${this.getType(e)}>`}getTernary(e,t,s){return`select( ${s}, ${t}, ${e} )`}getType(e){return Hw[e]||e}isAvailable(e){let t=Nd[e];return t===void 0&&(e==="float32Filterable"?t=this.renderer.hasFeature("float32-filterable"):e==="clipDistance"&&(t=this.renderer.hasFeature("clip-distances")),Nd[e]=t),t}_getWGSLMethod(e){return ir[e]!==void 0&&this._include(e),qw[e]}_include(e){const t=ir[e];return t.build(this),this.currentFunctionNode!==null&&this.currentFunctionNode.includes.push(t),t}_getWGSLVertexCode(e){return`${this.getSignature()}
// directives
${e.directives}

// structs
${e.structs}

// uniforms
${e.uniforms}

// varyings
${e.varyings}
var<private> varyings : VaryingsStruct;

// codes
${e.codes}

@vertex
fn main( ${e.attributes} ) -> VaryingsStruct {

	// vars
	${e.vars}

	// flow
	${e.flow}

	return varyings;

}
`}_getWGSLFragmentCode(e){return`${this.getSignature()}
// global
${ry}

// structs
${e.structs}

// uniforms
${e.uniforms}

// codes
${e.codes}

@fragment
fn main( ${e.varyings} ) -> ${e.returnType} {

	// vars
	${e.vars}

	// flow
	${e.flow}

}
`}_getWGSLComputeCode(e,t){const[s,n,r]=t;return`${this.getSignature()}
// directives
${e.directives}

// system
var<private> instanceIndex : u32;

// locals
${e.scopedArrays}

// structs
${e.structs}

// uniforms
${e.uniforms}

// codes
${e.codes}

@compute @workgroup_size( ${s}, ${n}, ${r} )
fn main( ${e.attributes} ) {

	// system
	instanceIndex = globalId.x
		+ globalId.y * ( ${s} * numWorkgroups.x )
		+ globalId.z * ( ${s} * numWorkgroups.x ) * ( ${n} * numWorkgroups.y );

	// vars
	${e.vars}

	// flow
	${e.flow}

}
`}_getWGSLStruct(e,t){return`
struct ${e} {
${t}
};`}_getWGSLStructBinding(e,t,s,n=0,r=0){const o=e+"Struct";return`${this._getWGSLStruct(o,t)}
@binding( ${n} ) @group( ${r} )
var<${s}> ${e} : ${o};`}}class Xw{constructor(e){this.backend=e}getCurrentDepthStencilFormat(e){let t;return e.depthTexture!==null?t=this.getTextureFormatGPU(e.depthTexture):e.depth&&e.stencil?t=T.Depth24PlusStencil8:e.depth&&(t=T.Depth24Plus),t}getTextureFormatGPU(e){return this.backend.get(e).format}getTextureSampleData(e){let t;if(e.isFramebufferTexture)t=1;else if(e.isDepthTexture&&!e.renderTarget){const r=this.backend.renderer,o=r.getRenderTarget();t=o?o.samples:r.samples}else e.renderTarget&&(t=e.renderTarget.samples);t=t||1;const s=t>1&&e.renderTarget!==null&&e.isDepthTexture!==!0&&e.isFramebufferTexture!==!0;return{samples:t,primarySamples:s?1:t,isMSAA:s}}getCurrentColorFormat(e){let t;return e.textures!==null?t=this.getTextureFormatGPU(e.textures[0]):t=this.getPreferredCanvasFormat(),t}getCurrentColorSpace(e){return e.textures!==null?e.textures[0].colorSpace:this.backend.renderer.outputColorSpace}getPrimitiveTopology(e,t){if(e.isPoints)return Rn.PointList;if(e.isLineSegments||e.isMesh&&t.wireframe===!0)return Rn.LineList;if(e.isLine)return Rn.LineStrip;if(e.isMesh)return Rn.TriangleList}getSampleCount(e){return e>=4?4:1}getSampleCountRenderContext(e){return e.textures!==null?this.getSampleCount(e.sampleCount):this.getSampleCount(this.backend.renderer.samples)}getPreferredCanvasFormat(){const e=this.backend.parameters.outputType;if(e===void 0)return navigator.gpu.getPreferredCanvasFormat();if(e===ct)return T.BGRA8Unorm;if(e===et)return T.RGBA16Float;throw new Error("Unsupported outputType")}}const iy=new Map([[Int8Array,["sint8","snorm8"]],[Uint8Array,["uint8","unorm8"]],[Int16Array,["sint16","snorm16"]],[Uint16Array,["uint16","unorm16"]],[Int32Array,["sint32","snorm32"]],[Uint32Array,["uint32","unorm32"]],[Float32Array,["float32"]]]);typeof Float16Array<"u"&&iy.set(Float16Array,["float16"]);const Yw=new Map([[hh,["float16"]]]),Kw=new Map([[Int32Array,"sint32"],[Int16Array,"sint32"],[Uint32Array,"uint32"],[Uint16Array,"uint32"],[Float32Array,"float32"]]);class Qw{constructor(e){this.backend=e}createAttribute(e,t){const s=this._getBufferAttribute(e),n=this.backend,r=n.get(s);let o=r.buffer;if(o===void 0){const a=n.device;let u=s.array;if(e.normalized===!1){if(u.constructor===Int16Array||u.constructor===Int8Array)u=new Int32Array(u);else if((u.constructor===Uint16Array||u.constructor===Uint8Array)&&(u=new Uint32Array(u),t&GPUBufferUsage.INDEX))for(let d=0;d<u.length;d++)u[d]===65535&&(u[d]=4294967295)}if(s.array=u,(s.isStorageBufferAttribute||s.isStorageInstancedBufferAttribute)&&s.itemSize===3){u=new u.constructor(s.count*4);for(let d=0;d<s.count;d++)u.set(s.array.subarray(d*3,d*3+3),d*4);s.itemSize=4,s.array=u,r._force3to4BytesAlignment=!0}const l=u.byteLength,c=l+(4-l%4)%4;o=a.createBuffer({label:s.name,size:c,usage:t,mappedAtCreation:!0}),new u.constructor(o.getMappedRange()).set(u),o.unmap(),r.buffer=o}}updateAttribute(e){const t=this._getBufferAttribute(e),s=this.backend,n=s.device,r=s.get(t),o=s.get(t).buffer;let a=t.array;if(r._force3to4BytesAlignment===!0){a=new a.constructor(t.count*4);for(let c=0;c<t.count;c++)a.set(t.array.subarray(c*3,c*3+3),c*4);t.array=a}const u=this._isTypedArray(a),l=t.updateRanges;if(l.length===0)n.queue.writeBuffer(o,0,a,0);else{const c=u?1:a.BYTES_PER_ELEMENT;for(let d=0,p=l.length;d<p;d++){const f=l[d];let m,y;if(r._force3to4BytesAlignment===!0){const S=Math.floor(f.start/3),R=Math.ceil(f.count/3);m=S*4*c,y=R*4*c}else m=f.start*c,y=f.count*c;const x=m*(u?a.BYTES_PER_ELEMENT:1);n.queue.writeBuffer(o,x,a,m,y)}t.clearUpdateRanges()}}createShaderVertexBuffers(e){const t=e.getAttributes(),s=new Map;for(let n=0;n<t.length;n++){const r=t[n],o=r.array.BYTES_PER_ELEMENT,a=this._getBufferAttribute(r);let u=s.get(a);if(u===void 0){let d,p;r.isInterleavedBufferAttribute===!0?(d=r.data.stride*o,p=r.data.isInstancedInterleavedBuffer?pi.Instance:pi.Vertex):(d=r.itemSize*o,p=r.isInstancedBufferAttribute?pi.Instance:pi.Vertex),r.normalized===!1&&(r.array.constructor===Int16Array||r.array.constructor===Uint16Array)&&(d=4),u={arrayStride:d,attributes:[],stepMode:p},s.set(a,u)}const l=this._getVertexFormat(r),c=r.isInterleavedBufferAttribute===!0?r.offset*o:0;u.attributes.push({shaderLocation:n,offset:c,format:l})}return Array.from(s.values())}destroyAttribute(e){const t=this.backend;t.get(this._getBufferAttribute(e)).buffer.destroy(),t.delete(e)}async getArrayBufferAsync(e){const t=this.backend,s=t.device,r=t.get(this._getBufferAttribute(e)).buffer,o=r.size,a=s.createBuffer({label:`${e.name}_readback`,size:o,usage:GPUBufferUsage.COPY_DST|GPUBufferUsage.MAP_READ}),u=s.createCommandEncoder({label:`readback_encoder_${e.name}`});u.copyBufferToBuffer(r,0,a,0,o);const l=u.finish();s.queue.submit([l]),await a.mapAsync(GPUMapMode.READ);const c=a.getMappedRange(),d=new e.array.constructor(c.slice(0));return a.unmap(),d.buffer}_getVertexFormat(e){const{itemSize:t,normalized:s}=e,n=e.array.constructor,r=e.constructor;let o;if(t===1)o=Kw.get(n);else{const u=(Yw.get(r)||iy.get(n))[s?1:0];if(u){const l=n.BYTES_PER_ELEMENT*t,d=Math.floor((l+3)/4)*4/n.BYTES_PER_ELEMENT;if(d%1)throw new Error("THREE.WebGPUAttributeUtils: Bad vertex format item size.");o=`${u}x${d}`}}return o||console.error("THREE.WebGPUAttributeUtils: Vertex format not supported yet."),o}_isTypedArray(e){return ArrayBuffer.isView(e)&&!(e instanceof DataView)}_getBufferAttribute(e){return e.isInterleavedBufferAttribute&&(e=e.data),e}}class Zw{constructor(e){this.backend=e,this.bindGroupLayoutCache=new WeakMap}createBindingsLayout(e){const t=this.backend,s=t.device,n=[];let r=0;for(const o of e.bindings){const a={binding:r++,visibility:o.visibility};if(o.isUniformBuffer||o.isStorageBuffer){const u={};o.isStorageBuffer&&(o.visibility&4&&(o.access===$e.READ_WRITE||o.access===$e.WRITE_ONLY)?u.type=da.Storage:u.type=da.ReadOnlyStorage),a.buffer=u}else if(o.isSampledTexture&&o.store){const u={};u.format=this.backend.get(o.texture).texture.format;const l=o.access;l===$e.READ_WRITE?u.access=ha.ReadWrite:l===$e.WRITE_ONLY?u.access=ha.WriteOnly:u.access=ha.ReadOnly,o.texture.isArrayTexture?u.viewDimension=Pe.TwoDArray:o.texture.is3DTexture&&(u.viewDimension=Pe.ThreeD),a.storageTexture=u}else if(o.isSampledTexture){const u={},{primarySamples:l}=t.utils.getTextureSampleData(o.texture);if(l>1&&(u.multisampled=!0,o.texture.isDepthTexture||(u.sampleType=Os.UnfilterableFloat)),o.texture.isDepthTexture)t.compatibilityMode&&o.texture.compareFunction===null?u.sampleType=Os.UnfilterableFloat:u.sampleType=Os.Depth;else if(o.texture.isDataTexture||o.texture.isDataArrayTexture||o.texture.isData3DTexture){const c=o.texture.type;c===Ke?u.sampleType=Os.SInt:c===Fe?u.sampleType=Os.UInt:c===ft&&(this.backend.hasFeature("float32-filterable")?u.sampleType=Os.Float:u.sampleType=Os.UnfilterableFloat)}o.isSampledCubeTexture?u.viewDimension=Pe.Cube:o.texture.isArrayTexture||o.texture.isDataArrayTexture||o.texture.isCompressedArrayTexture?u.viewDimension=Pe.TwoDArray:o.isSampledTexture3D&&(u.viewDimension=Pe.ThreeD),a.texture=u}else if(o.isSampler){const u={};o.texture.isDepthTexture&&(o.texture.compareFunction!==null?u.type=_d.Comparison:t.compatibilityMode&&(u.type=_d.NonFiltering)),a.sampler=u}else console.error(`WebGPUBindingUtils: Unsupported binding "${o}".`);n.push(a)}return s.createBindGroupLayout({entries:n})}createBindings(e,t,s,n=0){const{backend:r,bindGroupLayoutCache:o}=this,a=r.get(e);let u=o.get(e.bindingsReference);u===void 0&&(u=this.createBindingsLayout(e),o.set(e.bindingsReference,u));let l;s>0&&(a.groups===void 0&&(a.groups=[],a.versions=[]),a.versions[s]===n&&(l=a.groups[s])),l===void 0&&(l=this.createBindGroup(e,u),s>0&&(a.groups[s]=l,a.versions[s]=n)),a.group=l,a.layout=u}updateBinding(e){const t=this.backend,s=t.device,n=e.buffer,r=t.get(e).buffer;s.queue.writeBuffer(r,0,n,0)}createBindGroupIndex(e,t){const n=this.backend.device,r=GPUBufferUsage.UNIFORM|GPUBufferUsage.COPY_DST,o=e[0],a=n.createBuffer({label:"bindingCameraIndex_"+o,size:16,usage:r});n.queue.writeBuffer(a,0,e,0);const u=[{binding:0,resource:{buffer:a}}];return n.createBindGroup({label:"bindGroupCameraIndex_"+o,layout:t,entries:u})}createBindGroup(e,t){const s=this.backend,n=s.device;let r=0;const o=[];for(const a of e.bindings){if(a.isUniformBuffer){const u=s.get(a);if(u.buffer===void 0){const l=a.byteLength,c=GPUBufferUsage.UNIFORM|GPUBufferUsage.COPY_DST,d=n.createBuffer({label:"bindingBuffer_"+a.name,size:l,usage:c});u.buffer=d}o.push({binding:r,resource:{buffer:u.buffer}})}else if(a.isStorageBuffer){const u=s.get(a);if(u.buffer===void 0){const l=a.attribute;u.buffer=s.get(l).buffer}o.push({binding:r,resource:{buffer:u.buffer}})}else if(a.isSampledTexture){const u=s.get(a.texture);let l;if(u.externalTexture!==void 0)l=n.importExternalTexture({source:u.externalTexture});else{const c=a.store?1:u.texture.mipLevelCount;let d=`view-${u.texture.width}-${u.texture.height}`;if(u.texture.depthOrArrayLayers>1&&(d+=`-${u.texture.depthOrArrayLayers}`),d+=`-${c}`,l=u[d],l===void 0){const p=Cw.All;let f;a.isSampledCubeTexture?f=Pe.Cube:a.isSampledTexture3D?f=Pe.ThreeD:a.texture.isArrayTexture||a.texture.isDataArrayTexture||a.texture.isCompressedArrayTexture?f=Pe.TwoDArray:f=Pe.TwoD,l=u[d]=u.texture.createView({aspect:p,dimension:f,mipLevelCount:c})}}o.push({binding:r,resource:l})}else if(a.isSampler){const u=s.get(a.texture);o.push({binding:r,resource:u.sampler})}r++}return n.createBindGroup({label:"bindGroup_"+e.name,layout:t,entries:o})}}class Jw{constructor(e){this.backend=e,this._activePipelines=new WeakMap}setPipeline(e,t){this._activePipelines.get(e)!==t&&(e.setPipeline(t),this._activePipelines.set(e,t))}_getSampleCount(e){return this.backend.utils.getSampleCountRenderContext(e)}createRenderPipeline(e,t){const{object:s,material:n,geometry:r,pipeline:o}=e,{vertexProgram:a,fragmentProgram:u}=o,l=this.backend,c=l.device,d=l.utils,p=l.get(o),f=[];for(const de of e.getBindings()){const De=l.get(de);f.push(De.layout)}const m=l.attributeUtils.createShaderVertexBuffers(e);let y;n.blending!==br&&(n.blending!==Ks||n.transparent!==!1)&&(y=this._getBlending(n));let x={};n.stencilWrite===!0&&(x={compare:this._getStencilCompare(n),failOp:this._getStencilOperation(n.stencilFail),depthFailOp:this._getStencilOperation(n.stencilZFail),passOp:this._getStencilOperation(n.stencilZPass)});const S=this._getColorWriteMask(n),R=[];if(e.context.textures!==null){const de=e.context.textures;for(let De=0;De<de.length;De++){const vt=d.getTextureFormatGPU(de[De]);R.push({format:vt,blend:y,writeMask:S})}}else{const de=d.getCurrentColorFormat(e.context);R.push({format:de,blend:y,writeMask:S})}const C=l.get(a).module,D=l.get(u).module,P=this._getPrimitiveState(s,r,n),F=this._getDepthCompare(n),B=d.getCurrentDepthStencilFormat(e.context),V=this._getSampleCount(e.context),G={label:`renderPipeline_${n.name||n.type}_${n.id}`,vertex:Object.assign({},C,{buffers:m}),fragment:Object.assign({},D,{targets:R}),primitive:P,multisample:{count:V,alphaToCoverageEnabled:n.alphaToCoverage&&V>1},layout:c.createPipelineLayout({bindGroupLayouts:f})},te={},se=e.context.depth,ye=e.context.stencil;if((se===!0||ye===!0)&&(se===!0&&(te.format=B,te.depthWriteEnabled=n.depthWrite,te.depthCompare=F),ye===!0&&(te.stencilFront=x,te.stencilBack={},te.stencilReadMask=n.stencilFuncMask,te.stencilWriteMask=n.stencilWriteMask),n.polygonOffset===!0&&(te.depthBias=n.polygonOffsetUnits,te.depthBiasSlopeScale=n.polygonOffsetFactor,te.depthBiasClamp=0),G.depthStencil=te),t===null)p.pipeline=c.createRenderPipeline(G);else{const de=new Promise(De=>{c.createRenderPipelineAsync(G).then(vt=>{p.pipeline=vt,De()})});t.push(de)}}createBundleEncoder(e,t="renderBundleEncoder"){const s=this.backend,{utils:n,device:r}=s,o=n.getCurrentDepthStencilFormat(e),a=n.getCurrentColorFormat(e),u=this._getSampleCount(e),l={label:t,colorFormats:[a],depthStencilFormat:o,sampleCount:u};return r.createRenderBundleEncoder(l)}createComputePipeline(e,t){const s=this.backend,n=s.device,r=s.get(e.computeProgram).module,o=s.get(e),a=[];for(const u of t){const l=s.get(u);a.push(l.layout)}o.pipeline=n.createComputePipeline({compute:r,layout:n.createPipelineLayout({bindGroupLayouts:a})})}_getBlending(e){let t,s;const n=e.blending,r=e.blendSrc,o=e.blendDst,a=e.blendEquation;if(n===cr){const u=e.blendSrcAlpha!==null?e.blendSrcAlpha:r,l=e.blendDstAlpha!==null?e.blendDstAlpha:o,c=e.blendEquationAlpha!==null?e.blendEquationAlpha:a;t={srcFactor:this._getBlendFactor(r),dstFactor:this._getBlendFactor(o),operation:this._getBlendOperation(a)},s={srcFactor:this._getBlendFactor(u),dstFactor:this._getBlendFactor(l),operation:this._getBlendOperation(c)}}else{const u=e.premultipliedAlpha,l=(c,d,p,f)=>{t={srcFactor:c,dstFactor:d,operation:Vs.Add},s={srcFactor:p,dstFactor:f,operation:Vs.Add}};if(u)switch(n){case Ks:l(ee.One,ee.OneMinusSrcAlpha,ee.One,ee.OneMinusSrcAlpha);break;case Di:l(ee.One,ee.One,ee.One,ee.One);break;case Li:l(ee.Zero,ee.OneMinusSrc,ee.Zero,ee.One);break;case Fi:l(ee.Dst,ee.OneMinusSrcAlpha,ee.Zero,ee.One);break}else switch(n){case Ks:l(ee.SrcAlpha,ee.OneMinusSrcAlpha,ee.One,ee.OneMinusSrcAlpha);break;case Di:l(ee.SrcAlpha,ee.One,ee.One,ee.One);break;case Li:console.error("THREE.WebGPURenderer: SubtractiveBlending requires material.premultipliedAlpha = true");break;case Fi:console.error("THREE.WebGPURenderer: MultiplyBlending requires material.premultipliedAlpha = true");break}}if(t!==void 0&&s!==void 0)return{color:t,alpha:s};console.error("THREE.WebGPURenderer: Invalid blending: ",n)}_getBlendFactor(e){let t;switch(e){case hs:t=ee.Zero;break;case th:t=ee.One;break;case eh:t=ee.Src;break;case Yd:t=ee.OneMinusSrc;break;case Jd:t=ee.SrcAlpha;break;case Xd:t=ee.OneMinusSrcAlpha;break;case Qd:t=ee.Dst;break;case jd:t=ee.OneMinusDst;break;case Kd:t=ee.DstAlpha;break;case qd:t=ee.OneMinusDstAlpha;break;case Zd:t=ee.SrcAlphaSaturated;break;case dS:t=ee.Constant;break;case hS:t=ee.OneMinusConstant;break;default:console.error("THREE.WebGPURenderer: Blend factor not supported.",e)}return t}_getStencilCompare(e){let t;const s=e.stencilFunc;switch(s){case v_:t=ze.Never;break;case S_:t=ze.Always;break;case N_:t=ze.Less;break;case b_:t=ze.LessEqual;break;case x_:t=ze.Equal;break;case T_:t=ze.GreaterEqual;break;case __:t=ze.Greater;break;case y_:t=ze.NotEqual;break;default:console.error("THREE.WebGPURenderer: Invalid stencil function.",s)}return t}_getStencilOperation(e){let t;switch(e){case P_:t=ds.Keep;break;case B_:t=ds.Zero;break;case M_:t=ds.Replace;break;case C_:t=ds.Invert;break;case w_:t=ds.IncrementClamp;break;case E_:t=ds.DecrementClamp;break;case A_:t=ds.IncrementWrap;break;case R_:t=ds.DecrementWrap;break;default:console.error("THREE.WebGPURenderer: Invalid stencil operation.",t)}return t}_getBlendOperation(e){let t;switch(e){case es:t=Vs.Add;break;case Hd:t=Vs.Subtract;break;case Wd:t=Vs.ReverseSubtract;break;case L_:t=Vs.Min;break;case F_:t=Vs.Max;break;default:console.error("THREE.WebGPUPipelineUtils: Blend equation not supported.",e)}return t}_getPrimitiveState(e,t,s){const n={},r=this.backend.utils;n.topology=r.getPrimitiveTopology(e,s),t.index!==null&&e.isLine===!0&&e.isLineSegments!==!0&&(n.stripIndexFormat=t.index.array instanceof Uint16Array?In.Uint16:In.Uint32);let o=s.side===nt;return e.isMesh&&e.matrixWorld.determinant()<0&&(o=!o),n.frontFace=o===!0?md.CW:md.CCW,n.cullMode=s.side===Xs?gd.None:gd.Back,n}_getColorWriteMask(e){return e.colorWrite===!0?yd.All:yd.None}_getDepthCompare(e){let t;if(e.depthTest===!1)t=ze.Always;else{const s=e.depthFunc;switch(s){case lh:t=ze.Never;break;case uh:t=ze.Always;break;case ah:t=ze.Less;break;case oh:t=ze.LessEqual;break;case ih:t=ze.Equal;break;case rh:t=ze.GreaterEqual;break;case nh:t=ze.Greater;break;case sh:t=ze.NotEqual;break;default:console.error("THREE.WebGPUPipelineUtils: Invalid depth function.",s)}}return t}}class eC extends ny{constructor(e,t,s=2048){super(s),this.device=e,this.type=t,this.querySet=this.device.createQuerySet({type:"timestamp",count:this.maxQueries,label:`queryset_global_timestamp_${t}`});const n=this.maxQueries*8;this.resolveBuffer=this.device.createBuffer({label:`buffer_timestamp_resolve_${t}`,size:n,usage:GPUBufferUsage.QUERY_RESOLVE|GPUBufferUsage.COPY_SRC}),this.resultBuffer=this.device.createBuffer({label:`buffer_timestamp_result_${t}`,size:n,usage:GPUBufferUsage.COPY_DST|GPUBufferUsage.MAP_READ})}allocateQueriesForContext(e){if(!this.trackTimestamp||this.isDisposed)return null;if(this.currentQueryIndex+2>this.maxQueries)return Bt(`WebGPUTimestampQueryPool [${this.type}]: Maximum number of queries exceeded, when using trackTimestamp it is necessary to resolves the queries via renderer.resolveTimestampsAsync( THREE.TimestampQuery.${this.type.toUpperCase()} ).`),null;const t=this.currentQueryIndex;return this.currentQueryIndex+=2,this.queryOffsets.set(e,t),t}async resolveQueriesAsync(){if(!this.trackTimestamp||this.currentQueryIndex===0||this.isDisposed)return this.lastValue;if(this.pendingResolve)return this.pendingResolve;this.pendingResolve=this._resolveQueries();try{return await this.pendingResolve}finally{this.pendingResolve=null}}async _resolveQueries(){if(this.isDisposed)return this.lastValue;try{if(this.resultBuffer.mapState!=="unmapped")return this.lastValue;const e=new Map(this.queryOffsets),t=this.currentQueryIndex,s=t*8;this.currentQueryIndex=0,this.queryOffsets.clear();const n=this.device.createCommandEncoder();n.resolveQuerySet(this.querySet,0,t,this.resolveBuffer,0),n.copyBufferToBuffer(this.resolveBuffer,0,this.resultBuffer,0,s);const r=n.finish();if(this.device.queue.submit([r]),this.resultBuffer.mapState!=="unmapped")return this.lastValue;if(await this.resultBuffer.mapAsync(GPUMapMode.READ,0,s),this.isDisposed)return this.resultBuffer.mapState==="mapped"&&this.resultBuffer.unmap(),this.lastValue;const o=new BigUint64Array(this.resultBuffer.getMappedRange(0,s));let a=0;for(const[,u]of e){const l=o[u],c=o[u+1],d=Number(c-l)/1e6;a+=d}return this.resultBuffer.unmap(),this.lastValue=a,a}catch(e){return console.error("Error resolving queries:",e),this.resultBuffer.mapState==="mapped"&&this.resultBuffer.unmap(),this.lastValue}}async dispose(){if(!this.isDisposed){if(this.isDisposed=!0,this.pendingResolve)try{await this.pendingResolve}catch(e){console.error("Error waiting for pending resolve:",e)}if(this.resultBuffer&&this.resultBuffer.mapState==="mapped")try{this.resultBuffer.unmap()}catch(e){console.error("Error unmapping buffer:",e)}this.querySet&&(this.querySet.destroy(),this.querySet=null),this.resolveBuffer&&(this.resolveBuffer.destroy(),this.resolveBuffer=null),this.resultBuffer&&(this.resultBuffer.destroy(),this.resultBuffer=null),this.queryOffsets.clear(),this.pendingResolve=null}}}class tC extends sy{constructor(e={}){super(e),this.isWebGPUBackend=!0,this.parameters.alpha=e.alpha===void 0?!0:e.alpha,this.parameters.compatibilityMode=e.compatibilityMode===void 0?!1:e.compatibilityMode,this.parameters.requiredLimits=e.requiredLimits===void 0?{}:e.requiredLimits,this.compatibilityMode=this.parameters.compatibilityMode,this.device=null,this.context=null,this.colorBuffer=null,this.defaultRenderPassdescriptor=null,this.utils=new Xw(this),this.attributeUtils=new Qw(this),this.bindingUtils=new Zw(this),this.pipelineUtils=new Jw(this),this.textureUtils=new Iw(this),this.occludedResolveCache=new Map}async init(e){await super.init(e);const t=this.parameters;let s;if(t.device===void 0){const a={powerPreference:t.powerPreference,featureLevel:t.compatibilityMode?"compatibility":void 0},u=typeof navigator<"u"?await navigator.gpu.requestAdapter(a):null;if(u===null)throw new Error("WebGPUBackend: Unable to create WebGPU adapter.");const l=Object.values(au),c=[];for(const p of l)u.features.has(p)&&c.push(p);const d={requiredFeatures:c,requiredLimits:t.requiredLimits};s=await u.requestDevice(d)}else s=t.device;s.lost.then(a=>{const u={api:"WebGPU",message:a.message||"Unknown reason",reason:a.reason||null,originalEvent:a};e.onDeviceLost(u)});const n=t.context!==void 0?t.context:e.domElement.getContext("webgpu");this.device=s,this.context=n;const r=t.alpha?"premultiplied":"opaque",o=Re.getToneMappingMode(this.renderer.outputColorSpace);this.context.configure({device:this.device,format:this.utils.getPreferredCanvasFormat(),usage:GPUTextureUsage.RENDER_ATTACHMENT|GPUTextureUsage.COPY_SRC,alphaMode:r,toneMapping:{mode:o}}),this.trackTimestamp=this.trackTimestamp&&this.hasFeature(au.TimestampQuery),this.updateSize()}get coordinateSystem(){return Vn}async getArrayBufferAsync(e){return await this.attributeUtils.getArrayBufferAsync(e)}getContext(){return this.context}_getDefaultRenderPassDescriptor(){let e=this.defaultRenderPassdescriptor;if(e===null){const s=this.renderer;e={colorAttachments:[{view:null}]},(this.renderer.depth===!0||this.renderer.stencil===!0)&&(e.depthStencilAttachment={view:this.textureUtils.getDepthBuffer(s.depth,s.stencil).createView()});const n=e.colorAttachments[0];this.renderer.samples>0?n.view=this.colorBuffer.createView():n.resolveTarget=void 0,this.defaultRenderPassdescriptor=e}const t=e.colorAttachments[0];return this.renderer.samples>0?t.resolveTarget=this.context.getCurrentTexture().createView():t.view=this.context.getCurrentTexture().createView(),e}_isRenderCameraDepthArray(e){return e.depthTexture&&e.depthTexture.image.depth>1&&e.camera.isArrayCamera}_getRenderPassDescriptor(e,t={}){const s=e.renderTarget,n=this.get(s);let r=n.descriptors;(r===void 0||n.width!==s.width||n.height!==s.height||n.samples!==s.samples)&&(r={},n.descriptors=r);const o=e.getCacheKey();let a=r[o];if(a===void 0){const l=e.textures,c=[];let d;const p=this._isRenderCameraDepthArray(e);for(let f=0;f<l.length;f++){const m=this.get(l[f]),y={label:`colorAttachment_${f}`,baseMipLevel:e.activeMipmapLevel,mipLevelCount:1,baseArrayLayer:e.activeCubeFace,arrayLayerCount:1,dimension:Pe.TwoD};if(s.isRenderTarget3D)d=e.activeCubeFace,y.baseArrayLayer=0,y.dimension=Pe.ThreeD,y.depthOrArrayLayers=l[f].image.depth;else if(s.isRenderTarget&&l[f].image.depth>1)if(p===!0){const x=e.camera.cameras;for(let S=0;S<x.length;S++){const R={...y,baseArrayLayer:S,arrayLayerCount:1,dimension:Pe.TwoD},C=m.texture.createView(R);c.push({view:C,resolveTarget:void 0,depthSlice:void 0})}}else y.dimension=Pe.TwoDArray,y.depthOrArrayLayers=l[f].image.depth;if(p!==!0){const x=m.texture.createView(y);let S,R;m.msaaTexture!==void 0?(S=m.msaaTexture.createView(),R=x):(S=x,R=void 0),c.push({view:S,resolveTarget:R,depthSlice:d})}}if(a={textureViews:c},e.depth){const f=this.get(e.depthTexture),m={};e.depthTexture.isArrayTexture&&(m.dimension=Pe.TwoD,m.arrayLayerCount=1,m.baseArrayLayer=e.activeCubeFace),a.depthStencilView=f.texture.createView(m)}r[o]=a,n.width=s.width,n.height=s.height,n.samples=s.samples,n.activeMipmapLevel=e.activeMipmapLevel,n.activeCubeFace=e.activeCubeFace}const u={colorAttachments:[]};for(let l=0;l<a.textureViews.length;l++){const c=a.textureViews[l];let d={r:0,g:0,b:0,a:1};l===0&&t.clearValue&&(d=t.clearValue),u.colorAttachments.push({view:c.view,depthSlice:c.depthSlice,resolveTarget:c.resolveTarget,loadOp:t.loadOp||ie.Load,storeOp:t.storeOp||Ye.Store,clearValue:d})}return a.depthStencilView&&(u.depthStencilAttachment={view:a.depthStencilView}),u}beginRender(e){const t=this.get(e);t.frameCalls=this.renderer.info.render.frameCalls;const s=this.device,n=e.occlusionQueryCount;let r;n>0&&(t.currentOcclusionQuerySet&&t.currentOcclusionQuerySet.destroy(),t.currentOcclusionQueryBuffer&&t.currentOcclusionQueryBuffer.destroy(),t.currentOcclusionQuerySet=t.occlusionQuerySet,t.currentOcclusionQueryBuffer=t.occlusionQueryBuffer,t.currentOcclusionQueryObjects=t.occlusionQueryObjects,r=s.createQuerySet({type:"occlusion",count:n,label:`occlusionQuerySet_${e.id}`}),t.occlusionQuerySet=r,t.occlusionQueryIndex=0,t.occlusionQueryObjects=new Array(n),t.lastOcclusionObject=null);let o;e.textures===null?o=this._getDefaultRenderPassDescriptor():o=this._getRenderPassDescriptor(e,{loadOp:ie.Load}),this.initTimestampQuery(bn.RENDER,this.getTimestampUID(e),o),o.occlusionQuerySet=r;const a=o.depthStencilAttachment;if(e.textures!==null){const l=o.colorAttachments;for(let c=0;c<l.length;c++){const d=l[c];e.clearColor?(d.clearValue=c===0?e.clearColorValue:{r:0,g:0,b:0,a:1},d.loadOp=ie.Clear):d.loadOp=ie.Load,d.storeOp=Ye.Store}}else{const l=o.colorAttachments[0];e.clearColor?(l.clearValue=e.clearColorValue,l.loadOp=ie.Clear):l.loadOp=ie.Load,l.storeOp=Ye.Store}e.depth&&(e.clearDepth?(a.depthClearValue=e.clearDepthValue,a.depthLoadOp=ie.Clear):a.depthLoadOp=ie.Load,a.depthStoreOp=Ye.Store),e.stencil&&(e.clearStencil?(a.stencilClearValue=e.clearStencilValue,a.stencilLoadOp=ie.Clear):a.stencilLoadOp=ie.Load,a.stencilStoreOp=Ye.Store);const u=s.createCommandEncoder({label:"renderContext_"+e.id});if(this._isRenderCameraDepthArray(e)===!0){const l=e.camera.cameras;!t.layerDescriptors||t.layerDescriptors.length!==l.length?this._createDepthLayerDescriptors(e,t,o,l):this._updateDepthLayerDescriptors(e,t,l),t.bundleEncoders=[],t.bundleSets=[];for(let c=0;c<l.length;c++){const d=this.pipelineUtils.createBundleEncoder(e,"renderBundleArrayCamera_"+c),p={attributes:{},bindingGroups:[],pipeline:null,index:null};t.bundleEncoders.push(d),t.bundleSets.push(p)}t.currentPass=null}else{const l=u.beginRenderPass(o);if(t.currentPass=l,e.viewport&&this.updateViewport(e),e.scissor){const{x:c,y:d,width:p,height:f}=e.scissorValue;l.setScissorRect(c,d,p,f)}}t.descriptor=o,t.encoder=u,t.currentSets={attributes:{},bindingGroups:[],pipeline:null,index:null},t.renderBundles=[]}_createDepthLayerDescriptors(e,t,s,n){const r=s.depthStencilAttachment;t.layerDescriptors=[];const o=this.get(e.depthTexture);o.viewCache||(o.viewCache=[]);for(let a=0;a<n.length;a++){const u={...s,colorAttachments:[{...s.colorAttachments[0],view:s.colorAttachments[a].view}]};if(s.depthStencilAttachment){const l=a;o.viewCache[l]||(o.viewCache[l]=o.texture.createView({dimension:Pe.TwoD,baseArrayLayer:a,arrayLayerCount:1})),u.depthStencilAttachment={view:o.viewCache[l],depthLoadOp:r.depthLoadOp||ie.Clear,depthStoreOp:r.depthStoreOp||Ye.Store,depthClearValue:r.depthClearValue||1},e.stencil&&(u.depthStencilAttachment.stencilLoadOp=r.stencilLoadOp,u.depthStencilAttachment.stencilStoreOp=r.stencilStoreOp,u.depthStencilAttachment.stencilClearValue=r.stencilClearValue)}else u.depthStencilAttachment={...r};t.layerDescriptors.push(u)}}_updateDepthLayerDescriptors(e,t,s){for(let n=0;n<s.length;n++){const r=t.layerDescriptors[n];if(r.depthStencilAttachment){const o=r.depthStencilAttachment;e.depth&&(e.clearDepth?(o.depthClearValue=e.clearDepthValue,o.depthLoadOp=ie.Clear):o.depthLoadOp=ie.Load),e.stencil&&(e.clearStencil?(o.stencilClearValue=e.clearStencilValue,o.stencilLoadOp=ie.Clear):o.stencilLoadOp=ie.Load)}}}finishRender(e){const t=this.get(e),s=e.occlusionQueryCount;t.renderBundles.length>0&&t.currentPass.executeBundles(t.renderBundles),s>t.occlusionQueryIndex&&t.currentPass.endOcclusionQuery();const n=t.encoder;if(this._isRenderCameraDepthArray(e)===!0){const r=[];for(let o=0;o<t.bundleEncoders.length;o++){const a=t.bundleEncoders[o];r.push(a.finish())}for(let o=0;o<t.layerDescriptors.length;o++)if(o<r.length){const a=t.layerDescriptors[o],u=n.beginRenderPass(a);if(e.viewport){const{x:l,y:c,width:d,height:p,minDepth:f,maxDepth:m}=e.viewportValue;u.setViewport(l,c,d,p,f,m)}if(e.scissor){const{x:l,y:c,width:d,height:p}=e.scissorValue;u.setScissorRect(l,c,d,p)}u.executeBundles([r[o]]),u.end()}}else t.currentPass&&t.currentPass.end();if(s>0){const r=s*8;let o=this.occludedResolveCache.get(r);o===void 0&&(o=this.device.createBuffer({size:r,usage:GPUBufferUsage.QUERY_RESOLVE|GPUBufferUsage.COPY_SRC}),this.occludedResolveCache.set(r,o));const a=this.device.createBuffer({size:r,usage:GPUBufferUsage.COPY_DST|GPUBufferUsage.MAP_READ});t.encoder.resolveQuerySet(t.occlusionQuerySet,0,s,o,0),t.encoder.copyBufferToBuffer(o,0,a,0,r),t.occlusionQueryBuffer=a,this.resolveOccludedAsync(e)}if(this.device.queue.submit([t.encoder.finish()]),e.textures!==null){const r=e.textures;for(let o=0;o<r.length;o++){const a=r[o];a.generateMipmaps===!0&&this.textureUtils.generateMipmaps(a)}}}isOccluded(e,t){const s=this.get(e);return s.occluded&&s.occluded.has(t)}async resolveOccludedAsync(e){const t=this.get(e),{currentOcclusionQueryBuffer:s,currentOcclusionQueryObjects:n}=t;if(s&&n){const r=new WeakSet;t.currentOcclusionQueryObjects=null,t.currentOcclusionQueryBuffer=null,await s.mapAsync(GPUMapMode.READ);const o=s.getMappedRange(),a=new BigUint64Array(o);for(let u=0;u<n.length;u++)a[u]===BigInt(0)&&r.add(n[u]);s.destroy(),t.occluded=r}}updateViewport(e){const{currentPass:t}=this.get(e),{x:s,y:n,width:r,height:o,minDepth:a,maxDepth:u}=e.viewportValue;t.setViewport(s,n,r,o,a,u)}getClearColor(){const e=super.getClearColor();return this.renderer.alpha===!0&&(e.r*=e.a,e.g*=e.a,e.b*=e.a),e}clear(e,t,s,n=null){const r=this.device,o=this.renderer;let a=[],u,l,c,d;if(e){const m=this.getClearColor();l={r:m.r,g:m.g,b:m.b,a:m.a}}if(n===null){c=o.depth,d=o.stencil;const m=this._getDefaultRenderPassDescriptor();if(e){a=m.colorAttachments;const y=a[0];y.clearValue=l,y.loadOp=ie.Clear,y.storeOp=Ye.Store}(c||d)&&(u=m.depthStencilAttachment)}else{c=n.depth,d=n.stencil;const m={loadOp:e?ie.Clear:ie.Load,clearValue:e?l:void 0};c&&(m.depthLoadOp=t?ie.Clear:ie.Load,m.depthClearValue=t?o.getClearDepth():void 0,m.depthStoreOp=Ye.Store),d&&(m.stencilLoadOp=s?ie.Clear:ie.Load,m.stencilClearValue=s?o.getClearStencil():void 0,m.stencilStoreOp=Ye.Store);const y=this._getRenderPassDescriptor(n,m);a=y.colorAttachments,u=y.depthStencilAttachment}c&&u&&(t?(u.depthLoadOp=ie.Clear,u.depthClearValue=o.getClearDepth(),u.depthStoreOp=Ye.Store):(u.depthLoadOp=ie.Load,u.depthStoreOp=Ye.Store)),d&&u&&(s?(u.stencilLoadOp=ie.Clear,u.stencilClearValue=o.getClearStencil(),u.stencilStoreOp=Ye.Store):(u.stencilLoadOp=ie.Load,u.stencilStoreOp=Ye.Store));const p=r.createCommandEncoder({label:"clear"});p.beginRenderPass({colorAttachments:a,depthStencilAttachment:u}).end(),r.queue.submit([p.finish()])}beginCompute(e){const t=this.get(e);t.frameCalls=this.renderer.info.compute.frameCalls;const s={label:"computeGroup_"+e.id};this.initTimestampQuery(bn.COMPUTE,this.getTimestampUID(e),s),t.cmdEncoderGPU=this.device.createCommandEncoder({label:"computeGroup_"+e.id}),t.passEncoderGPU=t.cmdEncoderGPU.beginComputePass(s)}compute(e,t,s,n,r=null){const o=this.get(t),{passEncoderGPU:a}=this.get(e),u=this.get(n).pipeline;this.pipelineUtils.setPipeline(a,u);for(let c=0,d=s.length;c<d;c++){const p=s[c],f=this.get(p);a.setBindGroup(c,f.group)}let l;if(r===null&&(r=t.count),typeof r=="number"){const c=r;if(o.dispatchSize===void 0||o.count!==c){o.dispatchSize=[0,1,1],o.count=c;const d=t.workgroupSize;let p=d[0];for(let y=1;y<d.length;y++)p*=d[y];const f=Math.ceil(c/p),m=this.device.limits.maxComputeWorkgroupsPerDimension;l=[f,1,1],f>m&&(l[0]=Math.min(f,m),l[1]=Math.ceil(f/m)),o.dispatchSize=l}l=o.dispatchSize}else l=r;a.dispatchWorkgroups(l[0],l[1]||1,l[2]||1)}finishCompute(e){const t=this.get(e);t.passEncoderGPU.end(),this.device.queue.submit([t.cmdEncoderGPU.finish()])}async waitForGPU(){await this.device.queue.onSubmittedWorkDone()}draw(e,t){const{object:s,material:n,context:r,pipeline:o}=e,a=e.getBindings(),u=this.get(r),l=this.get(o).pipeline,c=e.getIndex(),d=c!==null,p=e.getDrawParameters();if(p===null)return;const f=(y,x)=>{this.pipelineUtils.setPipeline(y,l),x.pipeline=l;const S=x.bindingGroups;for(let C=0,D=a.length;C<D;C++){const P=a[C],F=this.get(P);S[P.index]!==P.id&&(y.setBindGroup(P.index,F.group),S[P.index]=P.id)}if(d===!0&&x.index!==c){const C=this.get(c).buffer,D=c.array instanceof Uint16Array?In.Uint16:In.Uint32;y.setIndexBuffer(C,D),x.index=c}const R=e.getVertexBuffers();for(let C=0,D=R.length;C<D;C++){const P=R[C];if(x.attributes[C]!==P){const F=this.get(P).buffer;y.setVertexBuffer(C,F),x.attributes[C]=P}}r.stencil===!0&&n.stencilWrite===!0&&u.currentStencilRef!==n.stencilRef&&(y.setStencilReference(n.stencilRef),u.currentStencilRef=n.stencilRef)},m=(y,x)=>{if(f(y,x),s.isBatchedMesh===!0){const S=s._multiDrawStarts,R=s._multiDrawCounts,C=s._multiDrawCount,D=s._multiDrawInstances;D!==null&&Bt("THREE.WebGPUBackend: renderMultiDrawInstances has been deprecated and will be removed in r184. Append to renderMultiDraw arguments and use indirection.");for(let P=0;P<C;P++){const F=D?D[P]:1,B=F>1?0:P;d===!0?y.drawIndexed(R[P],F,S[P]/c.array.BYTES_PER_ELEMENT,0,B):y.draw(R[P],F,S[P],B),t.update(s,R[P],F)}}else if(d===!0){const{vertexCount:S,instanceCount:R,firstVertex:C}=p,D=e.getIndirect();if(D!==null){const P=this.get(D).buffer;y.drawIndexedIndirect(P,0)}else y.drawIndexed(S,R,C,0,0);t.update(s,S,R)}else{const{vertexCount:S,instanceCount:R,firstVertex:C}=p,D=e.getIndirect();if(D!==null){const P=this.get(D).buffer;y.drawIndirect(P,0)}else y.draw(S,R,C,0);t.update(s,S,R)}};if(e.camera.isArrayCamera&&e.camera.cameras.length>0){const y=this.get(e.camera),x=e.camera.cameras,S=e.getBindingGroup("cameraIndex");if(y.indexesGPU===void 0||y.indexesGPU.length!==x.length){const C=this.get(S),D=[],P=new Uint32Array([0,0,0,0]);for(let F=0,B=x.length;F<B;F++){P[0]=F;const V=this.bindingUtils.createBindGroupIndex(P,C.layout);D.push(V)}y.indexesGPU=D}const R=this.renderer.getPixelRatio();for(let C=0,D=x.length;C<D;C++){const P=x[C];if(s.layers.test(P.layers)){const F=P.viewport;let B=u.currentPass,V=u.currentSets;if(u.bundleEncoders){const G=u.bundleEncoders[C],te=u.bundleSets[C];B=G,V=te}F&&B.setViewport(Math.floor(F.x*R),Math.floor(F.y*R),Math.floor(F.width*R),Math.floor(F.height*R),r.viewportValue.minDepth,r.viewportValue.maxDepth),S&&y.indexesGPU&&(B.setBindGroup(S.index,y.indexesGPU[C]),V.bindingGroups[S.index]=S.id),m(B,V)}}}else if(u.currentPass){if(u.occlusionQuerySet!==void 0){const y=u.lastOcclusionObject;y!==s&&(y!==null&&y.occlusionTest===!0&&(u.currentPass.endOcclusionQuery(),u.occlusionQueryIndex++),s.occlusionTest===!0&&(u.currentPass.beginOcclusionQuery(u.occlusionQueryIndex),u.occlusionQueryObjects[u.occlusionQueryIndex]=s),u.lastOcclusionObject=s)}m(u.currentPass,u.currentSets)}}needsRenderUpdate(e){const t=this.get(e),{object:s,material:n}=e,r=this.utils,o=r.getSampleCountRenderContext(e.context),a=r.getCurrentColorSpace(e.context),u=r.getCurrentColorFormat(e.context),l=r.getCurrentDepthStencilFormat(e.context),c=r.getPrimitiveTopology(s,n);let d=!1;return(t.material!==n||t.materialVersion!==n.version||t.transparent!==n.transparent||t.blending!==n.blending||t.premultipliedAlpha!==n.premultipliedAlpha||t.blendSrc!==n.blendSrc||t.blendDst!==n.blendDst||t.blendEquation!==n.blendEquation||t.blendSrcAlpha!==n.blendSrcAlpha||t.blendDstAlpha!==n.blendDstAlpha||t.blendEquationAlpha!==n.blendEquationAlpha||t.colorWrite!==n.colorWrite||t.depthWrite!==n.depthWrite||t.depthTest!==n.depthTest||t.depthFunc!==n.depthFunc||t.stencilWrite!==n.stencilWrite||t.stencilFunc!==n.stencilFunc||t.stencilFail!==n.stencilFail||t.stencilZFail!==n.stencilZFail||t.stencilZPass!==n.stencilZPass||t.stencilFuncMask!==n.stencilFuncMask||t.stencilWriteMask!==n.stencilWriteMask||t.side!==n.side||t.alphaToCoverage!==n.alphaToCoverage||t.sampleCount!==o||t.colorSpace!==a||t.colorFormat!==u||t.depthStencilFormat!==l||t.primitiveTopology!==c||t.clippingContextCacheKey!==e.clippingContextCacheKey)&&(t.material=n,t.materialVersion=n.version,t.transparent=n.transparent,t.blending=n.blending,t.premultipliedAlpha=n.premultipliedAlpha,t.blendSrc=n.blendSrc,t.blendDst=n.blendDst,t.blendEquation=n.blendEquation,t.blendSrcAlpha=n.blendSrcAlpha,t.blendDstAlpha=n.blendDstAlpha,t.blendEquationAlpha=n.blendEquationAlpha,t.colorWrite=n.colorWrite,t.depthWrite=n.depthWrite,t.depthTest=n.depthTest,t.depthFunc=n.depthFunc,t.stencilWrite=n.stencilWrite,t.stencilFunc=n.stencilFunc,t.stencilFail=n.stencilFail,t.stencilZFail=n.stencilZFail,t.stencilZPass=n.stencilZPass,t.stencilFuncMask=n.stencilFuncMask,t.stencilWriteMask=n.stencilWriteMask,t.side=n.side,t.alphaToCoverage=n.alphaToCoverage,t.sampleCount=o,t.colorSpace=a,t.colorFormat=u,t.depthStencilFormat=l,t.primitiveTopology=c,t.clippingContextCacheKey=e.clippingContextCacheKey,d=!0),d}getRenderCacheKey(e){const{object:t,material:s}=e,n=this.utils,r=e.context,o=t.isMesh&&t.matrixWorld.determinant()<0;return[s.transparent,s.blending,s.premultipliedAlpha,s.blendSrc,s.blendDst,s.blendEquation,s.blendSrcAlpha,s.blendDstAlpha,s.blendEquationAlpha,s.colorWrite,s.depthWrite,s.depthTest,s.depthFunc,s.stencilWrite,s.stencilFunc,s.stencilFail,s.stencilZFail,s.stencilZPass,s.stencilFuncMask,s.stencilWriteMask,s.side,o,n.getSampleCountRenderContext(r),n.getCurrentColorSpace(r),n.getCurrentColorFormat(r),n.getCurrentDepthStencilFormat(r),n.getPrimitiveTopology(t,s),e.getGeometryCacheKey(),e.clippingContextCacheKey].join()}createSampler(e){this.textureUtils.createSampler(e)}destroySampler(e){this.textureUtils.destroySampler(e)}createDefaultTexture(e){this.textureUtils.createDefaultTexture(e)}createTexture(e,t){this.textureUtils.createTexture(e,t)}updateTexture(e,t){this.textureUtils.updateTexture(e,t)}generateMipmaps(e){this.textureUtils.generateMipmaps(e)}destroyTexture(e){this.textureUtils.destroyTexture(e)}async copyTextureToBuffer(e,t,s,n,r,o){return this.textureUtils.copyTextureToBuffer(e,t,s,n,r,o)}initTimestampQuery(e,t,s){if(!this.trackTimestamp)return;this.timestampQueryPool[e]||(this.timestampQueryPool[e]=new eC(this.device,e,2048));const n=this.timestampQueryPool[e],r=n.allocateQueriesForContext(t);s.timestampWrites={querySet:n.querySet,beginningOfPassWriteIndex:r,endOfPassWriteIndex:r+1}}createNodeBuilder(e,t){return new jw(e,t)}createProgram(e){const t=this.get(e);t.module={module:this.device.createShaderModule({code:e.code,label:e.stage+(e.name!==""?`_${e.name}`:"")}),entryPoint:"main"}}destroyProgram(e){this.delete(e)}createRenderPipeline(e,t){this.pipelineUtils.createRenderPipeline(e,t)}createComputePipeline(e,t){this.pipelineUtils.createComputePipeline(e,t)}beginBundle(e){const t=this.get(e);t._currentPass=t.currentPass,t._currentSets=t.currentSets,t.currentSets={attributes:{},bindingGroups:[],pipeline:null,index:null},t.currentPass=this.pipelineUtils.createBundleEncoder(e)}finishBundle(e,t){const s=this.get(e),r=s.currentPass.finish();this.get(t).bundleGPU=r,s.currentSets=s._currentSets,s.currentPass=s._currentPass}addBundle(e,t){this.get(e).renderBundles.push(this.get(t).bundleGPU)}createBindings(e,t,s,n){this.bindingUtils.createBindings(e,t,s,n)}updateBindings(e,t,s,n){this.bindingUtils.createBindings(e,t,s,n)}updateBinding(e){this.bindingUtils.updateBinding(e)}createIndexAttribute(e){let t=GPUBufferUsage.INDEX|GPUBufferUsage.COPY_SRC|GPUBufferUsage.COPY_DST;(e.isStorageBufferAttribute||e.isStorageInstancedBufferAttribute)&&(t|=GPUBufferUsage.STORAGE),this.attributeUtils.createAttribute(e,t)}createAttribute(e){this.attributeUtils.createAttribute(e,GPUBufferUsage.VERTEX|GPUBufferUsage.COPY_SRC|GPUBufferUsage.COPY_DST)}createStorageAttribute(e){this.attributeUtils.createAttribute(e,GPUBufferUsage.STORAGE|GPUBufferUsage.VERTEX|GPUBufferUsage.COPY_SRC|GPUBufferUsage.COPY_DST)}createIndirectStorageAttribute(e){this.attributeUtils.createAttribute(e,GPUBufferUsage.STORAGE|GPUBufferUsage.INDIRECT|GPUBufferUsage.COPY_SRC|GPUBufferUsage.COPY_DST)}updateAttribute(e){this.attributeUtils.updateAttribute(e)}destroyAttribute(e){this.attributeUtils.destroyAttribute(e)}updateSize(){this.colorBuffer=this.textureUtils.getColorBuffer(),this.defaultRenderPassdescriptor=null}getMaxAnisotropy(){return 16}hasFeature(e){return this.device.features.has(e)}copyTextureToTexture(e,t,s=null,n=null,r=0,o=0){let a=0,u=0,l=0,c=0,d=0,p=0,f=e.image.width,m=e.image.height,y=1;s!==null&&(s.isBox3===!0?(c=s.min.x,d=s.min.y,p=s.min.z,f=s.max.x-s.min.x,m=s.max.y-s.min.y,y=s.max.z-s.min.z):(c=s.min.x,d=s.min.y,f=s.max.x-s.min.x,m=s.max.y-s.min.y,y=1)),n!==null&&(a=n.x,u=n.y,l=n.z||0);const x=this.device.createCommandEncoder({label:"copyTextureToTexture_"+e.id+"_"+t.id}),S=this.get(e).texture,R=this.get(t).texture;x.copyTextureToTexture({texture:S,mipLevel:r,origin:{x:c,y:d,z:p}},{texture:R,mipLevel:o,origin:{x:a,y:u,z:l}},[f,m,y]),this.device.queue.submit([x.finish()]),o===0&&t.generateMipmaps&&this.textureUtils.generateMipmaps(t)}copyFramebufferToTexture(e,t,s){const n=this.get(t);let r=null;t.renderTarget?e.isDepthTexture?r=this.get(t.depthTexture).texture:r=this.get(t.textures[0]).texture:e.isDepthTexture?r=this.textureUtils.getDepthBuffer(t.depth,t.stencil):r=this.context.getCurrentTexture();const o=this.get(e).texture;if(r.format!==o.format){console.error("WebGPUBackend: copyFramebufferToTexture: Source and destination formats do not match.",r.format,o.format);return}let a;if(n.currentPass?(n.currentPass.end(),a=n.encoder):a=this.device.createCommandEncoder({label:"copyFramebufferToTexture_"+e.id}),a.copyTextureToTexture({texture:r,origin:[s.x,s.y,0]},{texture:o},[s.z,s.w]),n.currentPass){const{descriptor:u}=n;for(let l=0;l<u.colorAttachments.length;l++)u.colorAttachments[l].loadOp=ie.Load;if(t.depth&&(u.depthStencilAttachment.depthLoadOp=ie.Load),t.stencil&&(u.depthStencilAttachment.stencilLoadOp=ie.Load),n.currentPass=a.beginRenderPass(u),n.currentSets={attributes:{},bindingGroups:[],pipeline:null,index:null},t.viewport&&this.updateViewport(t),t.scissor){const{x:l,y:c,width:d,height:p}=t.scissorValue;n.currentPass.setScissorRect(l,c,d,p)}}else this.device.queue.submit([a.finish()]);e.generateMipmaps&&this.textureUtils.generateMipmaps(e)}}class sC extends mu{constructor(e,t,s,n,r,o){super(e,t,s,n,r,o),this.iesMap=null}copy(e,t){return super.copy(e,t),this.iesMap=e.iesMap,this}}class nC extends mu{constructor(e,t,s,n,r,o){super(e,t,s,n,r,o),this.aspect=null}copy(e,t){return super.copy(e,t),this.aspect=e.aspect,this}}class rC extends Xg{constructor(){super(),this.addMaterial(rN,"MeshPhongMaterial"),this.addMaterial(qm,"MeshStandardMaterial"),this.addMaterial(WN,"MeshPhysicalMaterial"),this.addMaterial(XN,"MeshToonMaterial"),this.addMaterial(Qb,"MeshBasicMaterial"),this.addMaterial(sN,"MeshLambertMaterial"),this.addMaterial(qb,"MeshNormalMaterial"),this.addMaterial(KN,"MeshMatcapMaterial"),this.addMaterial(Ob,"LineBasicMaterial"),this.addMaterial(kb,"LineDashedMaterial"),this.addMaterial(tS,"PointsMaterial"),this.addMaterial(Xm,"SpriteMaterial"),this.addMaterial(iS,"ShadowMaterial"),this.addLight(EA,Fd),this.addLight(U0,By),this.addLight(I0,Py),this.addLight(Wl,mu),this.addLight(k0,Ld),this.addLight(z0,Fy),this.addLight($0,Ly),this.addLight(V0,sC),this.addLight(G0,nC),this.addToneMapping(hg,Dy),this.addToneMapping(pg,Uy),this.addToneMapping(fg,Iy),this.addToneMapping(mg,Vy),this.addToneMapping(gg,Oy),this.addToneMapping(yg,Gy)}}class iC extends uw{constructor(e={}){let t;e.forceWebGL?t=fd:(t=tC,e.getFallback=()=>(console.warn("THREE.WebGPURenderer: WebGPU is not available, running under WebGL2 backend."),new fd(e)));const s=new t(e);super(s,e),this.library=new rC,this.isWebGPURenderer=!0,typeof __THREE_DEVTOOLS__<"u"&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("observe",{detail:this}))}}let mi;const oC=100;function aC(i){const e=new Ld(16777215,.5);i.add(e);const s=[[10,5,10],[-10,13,10],[0,5,-13]].map(n=>{const r=new Fd(16777215,oC);return r.position.set(...n),i.add(r),r});return{ambientLight:e,pointLights:s}}function uC(i,e,t=0){const s=new xr;s.position.set(10,t,30);const n=new X_(s,e.domElement);return n.target.set(0,0,0),n.enableZoom=!1,n.enableDamping=!0,i.add(s),{camera:s,orbitControls:n}}function bC(i,e={}){const t=new Qi,s=new iC({canvas:i,forceWebGL:!0});s.shadowMap.enabled=!0,s.shadowMap.type=k_;const n=aC(t),{camera:r,orbitControls:o}=uC(t,s,e.cameraHeight),a=new z_;return window.removeEventListener("resize",mi),mi=()=>{const u=window.innerWidth,l=window.innerHeight;s.setSize(u,l),r.aspect=u/l,r.updateProjectionMatrix(),o.reset(),window.matchMedia("(max-width: 768px)").matches?o.target.set(0,3.5,0):o.target.set(e.centerOrbits?0:-10,3.5,0)},window.addEventListener("resize",mi),mi(),{scene:t,camera:r,renderer:s,orbitControls:o,clock:a,lights:n}}/**
 * @license
 * Copyright 2010-2025 Three.js Authors
 * SPDX-License-Identifier: MIT
 */h.BRDF_GGX;h.BRDF_Lambert;h.BasicPointShadowFilter;h.BasicShadowFilter;h.Break;h.Const;h.Continue;h.DFGApprox;h.D_GGX;h.Discard;h.EPSILON;h.F_Schlick;const NC=h.Fn;h.INFINITY;h.If;h.Loop;h.NodeAccess;h.NodeShaderStage;h.NodeType;h.NodeUpdateType;h.PCFShadowFilter;h.PCFSoftShadowFilter;h.PI;h.PI2;h.PointShadowFilter;h.Return;h.Schlick_to_F0;h.ScriptableNodeResources;h.ShaderNode;h.Stack;h.Switch;h.TBNViewMatrix;h.VSMShadowFilter;h.V_GGX_SmithCorrelated;h.Var;h.VarIntent;h.abs;h.acesFilmicToneMapping;h.acos;h.add;h.addMethodChaining;h.addNodeElement;h.agxToneMapping;h.all;h.alphaT;h.and;h.anisotropy;h.anisotropyB;h.anisotropyT;h.any;h.append;h.array;h.arrayBuffer;h.asin;h.assign;h.atan;h.atan2;h.atomicAdd;h.atomicAnd;h.atomicFunc;h.atomicLoad;h.atomicMax;h.atomicMin;h.atomicOr;h.atomicStore;h.atomicSub;h.atomicXor;h.attenuationColor;h.attenuationDistance;const SC=h.attribute;h.attributeArray;h.backgroundBlurriness;h.backgroundIntensity;h.backgroundRotation;h.batch;h.bentNormalView;h.billboarding;h.bitAnd;h.bitNot;h.bitOr;h.bitXor;h.bitangentGeometry;h.bitangentLocal;h.bitangentView;h.bitangentWorld;h.bitcast;h.blendBurn;h.blendColor;h.blendDodge;h.blendOverlay;h.blendScreen;h.blur;h.bool;h.buffer;h.bufferAttribute;h.bumpMap;h.burn;h.builtin;h.bvec2;h.bvec3;h.bvec4;h.bypass;h.cache;h.call;h.cameraFar;h.cameraIndex;h.cameraNear;h.cameraNormalMatrix;h.cameraPosition;h.cameraProjectionMatrix;h.cameraProjectionMatrixInverse;h.cameraViewMatrix;h.cameraViewport;h.cameraWorldMatrix;h.cbrt;h.cdl;h.ceil;h.checker;h.cineonToneMapping;h.clamp;h.clearcoat;h.clearcoatNormalView;h.clearcoatRoughness;h.code;h.color;h.colorSpaceToWorking;h.colorToDirection;h.compute;h.computeKernel;h.computeSkinning;h.context;h.convert;h.convertColorSpace;h.convertToTexture;h.cos;const vC=h.cross;h.cubeTexture;h.cubeTextureBase;h.cubeToUV;h.dFdx;h.dFdy;h.dashSize;h.debug;h.decrement;h.decrementBefore;h.defaultBuildStages;h.defaultShaderStages;h.defined;h.degrees;h.deltaTime;h.densityFog;h.densityFogFactor;h.depth;h.depthPass;h.determinant;h.difference;h.diffuseColor;h.directPointLight;h.directionToColor;h.directionToFaceDirection;h.dispersion;h.distance;h.div;h.dodge;h.dot;h.drawIndex;h.dynamicBufferAttribute;h.element;h.emissive;h.equal;h.equals;h.equirectUV;h.exp;h.exp2;h.expression;h.faceDirection;h.faceForward;h.faceforward;h.float;h.floatBitsToInt;h.floatBitsToUint;h.floor;h.fog;h.fract;h.frameGroup;h.frameId;h.frontFacing;h.fwidth;h.gain;h.gapSize;h.getConstNodeType;h.getCurrentStack;h.getDirection;h.getDistanceAttenuation;h.getGeometryRoughness;h.getNormalFromDepth;h.getParallaxCorrectNormal;h.getRoughness;h.getScreenPosition;h.getShIrradianceAt;h.getShadowMaterial;h.getShadowRenderObjectFunction;h.getTextureIndex;h.getViewPosition;h.globalId;h.glsl;h.glslFn;h.grayscale;h.greaterThan;h.greaterThanEqual;h.hash;h.highpModelNormalViewMatrix;h.highpModelViewMatrix;h.hue;h.increment;h.incrementBefore;h.instance;h.instanceIndex;h.instancedArray;h.instancedBufferAttribute;h.instancedDynamicBufferAttribute;h.instancedMesh;h.int;h.intBitsToFloat;h.inverse;h.inverseSqrt;h.inversesqrt;h.invocationLocalIndex;h.invocationSubgroupIndex;h.ior;h.iridescence;h.iridescenceIOR;h.iridescenceThickness;h.ivec2;h.ivec3;h.ivec4;h.js;h.label;h.length;h.lengthSq;h.lessThan;h.lessThanEqual;h.lightPosition;h.lightProjectionUV;h.lightShadowMatrix;h.lightTargetDirection;h.lightTargetPosition;h.lightViewPosition;h.lightingContext;h.lights;h.linearDepth;h.linearToneMapping;h.localId;h.log;h.log2;h.logarithmicDepthToViewZ;h.luminance;h.mat2;h.mat3;h.mat4;h.matcapUV;h.materialAO;h.materialAlphaTest;h.materialAnisotropy;h.materialAnisotropyVector;h.materialAttenuationColor;h.materialAttenuationDistance;h.materialClearcoat;h.materialClearcoatNormal;h.materialClearcoatRoughness;h.materialColor;h.materialDispersion;h.materialEmissive;h.materialEnvIntensity;h.materialEnvRotation;h.materialIOR;h.materialIridescence;h.materialIridescenceIOR;h.materialIridescenceThickness;h.materialLightMap;h.materialLineDashOffset;h.materialLineDashSize;h.materialLineGapSize;h.materialLineScale;h.materialLineWidth;h.materialMetalness;h.materialNormal;h.materialOpacity;h.materialPointSize;h.materialReference;h.materialReflectivity;h.materialRefractionRatio;h.materialRotation;h.materialRoughness;h.materialSheen;h.materialSheenRoughness;h.materialShininess;h.materialSpecular;h.materialSpecularColor;h.materialSpecularIntensity;h.materialSpecularStrength;h.materialThickness;h.materialTransmission;h.max;h.maxMipLevel;h.mediumpModelViewMatrix;h.metalness;h.min;h.mix;h.mixElement;h.mod;h.modInt;h.modelDirection;h.modelNormalMatrix;const RC=h.modelPosition;h.modelRadius;h.modelScale;h.modelViewMatrix;h.modelViewPosition;h.modelViewProjection;h.modelWorldMatrix;const AC=h.modelWorldMatrixInverse;h.morphReference;h.mrt;h.mul;h.mx_aastep;h.mx_add;h.mx_atan2;h.mx_cell_noise_float;h.mx_contrast;h.mx_divide;h.mx_fractal_noise_float;h.mx_fractal_noise_vec2;h.mx_fractal_noise_vec3;h.mx_fractal_noise_vec4;h.mx_frame;h.mx_heighttonormal;h.mx_hsvtorgb;h.mx_ifequal;h.mx_ifgreater;h.mx_ifgreatereq;h.mx_invert;h.mx_modulo;h.mx_multiply;h.mx_noise_float;h.mx_noise_vec3;h.mx_noise_vec4;h.mx_place2d;h.mx_power;h.mx_ramp4;h.mx_ramplr;h.mx_ramptb;h.mx_rgbtohsv;h.mx_rotate2d;h.mx_rotate3d;h.mx_safepower;h.mx_separate;h.mx_splitlr;h.mx_splittb;h.mx_srgb_texture_to_lin_rec709;h.mx_subtract;h.mx_timer;h.mx_transform_uv;h.mx_unifiednoise2d;h.mx_unifiednoise3d;h.mx_worley_noise_float;h.mx_worley_noise_vec2;h.mx_worley_noise_vec3;h.negate;h.neutralToneMapping;h.nodeArray;h.nodeImmutable;h.nodeObject;h.nodeObjectIntent;h.nodeObjects;h.nodeProxy;h.nodeProxyIntent;h.normalFlat;h.normalGeometry;const EC=h.normalLocal;h.normalMap;h.normalView;h.normalViewGeometry;h.normalWorld;h.normalWorldGeometry;const wC=h.normalize;h.not;h.notEqual;h.numWorkgroups;h.objectDirection;h.objectGroup;h.objectPosition;h.objectRadius;h.objectScale;h.objectViewPosition;h.objectWorldMatrix;h.OnObjectUpdate;h.OnMaterialUpdate;h.oneMinus;h.or;h.orthographicDepthToViewZ;h.oscSawtooth;h.oscSine;h.oscSquare;h.oscTriangle;h.output;h.outputStruct;h.overlay;h.overloadingFn;h.parabola;h.parallaxDirection;h.parallaxUV;h.parameter;h.pass;h.passTexture;h.pcurve;h.perspectiveDepthToViewZ;h.pmremTexture;h.pointShadow;h.pointUV;h.pointWidth;h.positionGeometry;const CC=h.positionLocal;h.positionPrevious;h.positionView;h.positionViewDirection;h.positionWorld;h.positionWorldDirection;h.posterize;h.pow;h.pow2;h.pow3;h.pow4;h.premultiplyAlpha;h.property;h.radians;h.rand;h.range;h.rangeFog;h.rangeFogFactor;h.reciprocal;h.reference;h.referenceBuffer;h.reflect;h.reflectVector;h.reflectView;h.reflector;h.refract;h.refractVector;h.refractView;h.reinhardToneMapping;h.remap;h.remapClamp;h.renderGroup;h.renderOutput;h.rendererReference;h.rotate;h.rotateUV;h.roughness;h.round;h.rtt;h.sRGBTransferEOTF;h.sRGBTransferOETF;h.sample;h.sampler;h.samplerComparison;h.saturate;h.saturation;h.screen;h.screenCoordinate;h.screenDPR;h.screenSize;h.screenUV;h.scriptable;h.scriptableValue;h.select;h.setCurrentStack;h.setName;h.shaderStages;h.shadow;h.shadowPositionWorld;h.shapeCircle;h.sharedUniformGroup;h.sheen;h.sheenRoughness;h.shiftLeft;h.shiftRight;h.shininess;h.sign;const MC=h.sin;h.sinc;h.skinning;h.smoothstep;h.smoothstepElement;h.specularColor;h.specularF90;h.spherizeUV;h.split;h.spritesheetUV;h.sqrt;h.stack;h.step;h.stepElement;h.storage;h.storageBarrier;h.storageObject;h.storageTexture;h.string;h.struct;h.sub;h.subgroupAdd;h.subgroupAll;h.subgroupAnd;h.subgroupAny;h.subgroupBallot;h.subgroupBroadcast;h.subgroupBroadcastFirst;h.subBuild;h.subgroupElect;h.subgroupExclusiveAdd;h.subgroupExclusiveMul;h.subgroupInclusiveAdd;h.subgroupInclusiveMul;h.subgroupIndex;h.subgroupMax;h.subgroupMin;h.subgroupMul;h.subgroupOr;h.subgroupShuffle;h.subgroupShuffleDown;h.subgroupShuffleUp;h.subgroupShuffleXor;h.subgroupSize;h.subgroupXor;h.tan;h.tangentGeometry;h.tangentLocal;h.tangentView;h.tangentWorld;h.texture;h.texture3D;h.textureBarrier;h.textureBicubic;h.textureBicubicLevel;h.textureCubeUV;h.textureLoad;h.textureSize;h.textureStore;h.thickness;const BC=h.time;h.toneMapping;h.toneMappingExposure;h.toonOutlinePass;h.transformDirection;h.transformNormal;h.transformNormalToView;h.transformedClearcoatNormalView;h.transformedNormalView;h.transformedNormalWorld;h.transmission;h.transpose;h.triNoise3D;h.triplanarTexture;h.triplanarTextures;h.trunc;h.uint;h.uintBitsToFloat;const PC=h.uniform;h.uniformArray;h.uniformCubeTexture;h.uniformGroup;h.uniformFlow;h.uniformTexture;h.unpremultiplyAlpha;h.userData;h.uv;h.uvec2;h.uvec3;h.uvec4;h.varying;h.varyingProperty;h.vec2;const FC=h.vec3;h.vec4;h.vectorComponents;h.velocity;h.vertexColor;h.vertexIndex;h.vertexStage;h.vibrance;h.viewZToLogarithmicDepth;h.viewZToOrthographicDepth;h.viewZToPerspectiveDepth;h.viewport;h.viewportCoordinate;h.viewportDepthTexture;h.viewportLinearDepth;h.viewportMipTexture;h.viewportResolution;h.viewportSafeUV;h.viewportSharedTexture;h.viewportSize;h.viewportTexture;h.viewportUV;h.wgsl;h.wgslFn;h.workgroupArray;h.workgroupBarrier;h.workgroupId;h.workingToColorSpace;h.xor;var lC=vd('<header class="svelte-1o6kcy3"><h3><!></h3></header>'),cC=vd("<div><!> <!></div>");function LC(i,e){var t=cC();let s;var n=Po(t);{var r=a=>{var u=lC(),l=Po(u),c=Po(l);H_(c,()=>e.title),Fo(l),Fo(u),jl(a,u)};W_(n,a=>{e.title&&a(r)})}var o=dy(n,2);$_(o,()=>e.children),Fo(t),hy(a=>s=q_(t,1,"cristal-pane svelte-1o6kcy3",null,s,a),[()=>({open:e.open})]),jl(i,t)}export{LC as C,NC as F,qm as M,AC as a,TC as b,vC as c,bC as d,EC as e,SC as f,RC as m,wC as n,CC as p,MC as s,BC as t,PC as u,FC as v};
